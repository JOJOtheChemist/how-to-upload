{"ast":null,"code":"var _jsxFileName = \"G:\\\\230310pythonproject\\\\230517-gpt-API\\\\my-react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UploadForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      uploadedFileData: null\n    };\n    this.handleFileUpload = event => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileData = reader.result;\n        localStorage.setItem('uploadedFile', fileData);\n        this.setState({\n          uploadedFileData: fileData\n        });\n      };\n      reader.readAsDataURL(file);\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      // handle form submission here\n    };\n  }\n\n  render() {\n    const {\n      uploadedFileData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: \"Upload File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: this.handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), uploadedFileData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Uploaded File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadedFileData,\n          alt: \"Uploaded file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default UploadForm;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","UploadForm","constructor","arguments","state","uploadedFileData","handleFileUpload","event","file","target","files","reader","FileReader","onload","fileData","result","localStorage","setItem","setState","readAsDataURL","handleSubmit","preventDefault","render","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","src","alt"],"sources":["G:/230310pythonproject/230517-gpt-API/my-react-app/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass UploadForm extends Component {\n  state = {\n    uploadedFileData: null,\n  };\n\n  handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileData = reader.result;\n      localStorage.setItem('uploadedFile', fileData);\n      this.setState({ uploadedFileData: fileData });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // handle form submission here\n  };\n\n  render() {\n    const { uploadedFileData } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"fileInput\">Upload File:</label>\n          <input type=\"file\" id=\"fileInput\" onChange={this.handleFileUpload} />\n        </div>\n        <button type=\"submit\">Submit</button>\n        {uploadedFileData && (\n          <div>\n            <h2>Uploaded File:</h2>\n            <img src={uploadedFileData} alt=\"Uploaded file\" />\n          </div>\n        )}\n      </form>\n    );\n  }\n}\n\nexport default UploadForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,SAASH,SAAS,CAAC;EAAAI,YAAA;IAAA,SAAAC,SAAA;IAAA,KACjCC,KAAK,GAAG;MACNC,gBAAgB,EAAE;IACpB,CAAC;IAAA,KAEDC,gBAAgB,GAAIC,KAAK,IAAK;MAC5B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpB,MAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAM;QAC9BC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,QAAQ,CAAC;QAC9C,IAAI,CAACI,QAAQ,CAAC;UAAEb,gBAAgB,EAAES;QAAS,CAAC,CAAC;MAC/C,CAAC;MAEDH,MAAM,CAACQ,aAAa,CAACX,IAAI,CAAC;IAC5B,CAAC;IAAA,KAEDY,YAAY,GAAIb,KAAK,IAAK;MACxBA,KAAK,CAACc,cAAc,CAAC,CAAC;MACtB;IACF,CAAC;EAAA;;EAEDC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEjB;IAAiB,CAAC,GAAG,IAAI,CAACD,KAAK;IAEvC,oBACEJ,OAAA;MAAMuB,QAAQ,EAAE,IAAI,CAACH,YAAa;MAAAI,QAAA,gBAChCxB,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAOyB,OAAO,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/C7B,OAAA;UAAO8B,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,WAAW;UAACC,QAAQ,EAAE,IAAI,CAAC1B;QAAiB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACN7B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACpCxB,gBAAgB,iBACfL,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAI;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB7B,OAAA;UAAKiC,GAAG,EAAE5B,gBAAiB;UAAC6B,GAAG,EAAC;QAAe;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEX;AACF;AAEA,eAAe5B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}