{"ast":null,"code":"/**\n * MIT License\n *\n * Copyright (c) 2022 Lark Technologies Pte. Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport get from 'lodash.get';\nimport axios, { AxiosError } from 'axios';\nimport crypto from 'crypto';\nimport identity from 'lodash.identity';\nimport pickBy from 'lodash.pickby';\nimport fs from 'fs';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n    i,\n    q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nconst defaultHttpInstance = axios.create();\ndefaultHttpInstance.interceptors.request.use(req => {\n  if (req.headers) {\n    req.headers['User-Agent'] = 'oapi-node-sdk/1.0.0';\n  }\n  return req;\n}, undefined, {\n  synchronous: true\n});\ndefaultHttpInstance.interceptors.response.use(resp => resp.data);\nvar AppType;\n(function (AppType) {\n  AppType[AppType[\"SelfBuild\"] = 0] = \"SelfBuild\";\n  AppType[AppType[\"ISV\"] = 1] = \"ISV\";\n})(AppType || (AppType = {}));\nvar Domain;\n(function (Domain) {\n  Domain[Domain[\"Feishu\"] = 0] = \"Feishu\";\n  Domain[Domain[\"Lark\"] = 1] = \"Lark\";\n})(Domain || (Domain = {}));\nvar LoggerLevel;\n(function (LoggerLevel) {\n  LoggerLevel[LoggerLevel[\"fatal\"] = 0] = \"fatal\";\n  LoggerLevel[LoggerLevel[\"error\"] = 1] = \"error\";\n  LoggerLevel[LoggerLevel[\"warn\"] = 2] = \"warn\";\n  LoggerLevel[LoggerLevel[\"info\"] = 3] = \"info\";\n  LoggerLevel[LoggerLevel[\"debug\"] = 4] = \"debug\";\n  LoggerLevel[LoggerLevel[\"trace\"] = 5] = \"trace\";\n})(LoggerLevel || (LoggerLevel = {}));\nconst CEventType = Symbol('event-type');\nconst CTenantKey = Symbol('tenant-key');\nconst CAppTicket = Symbol('app-ticket');\nconst CTenantAccessToken = Symbol('tenant-access-token');\nconst CWithHelpdeskAuthorization = Symbol('with-helpdesk-authorization');\nconst CWithUserAccessToken = Symbol('with-user-access-token');\nconst string2Base64 = content => Buffer.from(content).toString('base64');\nclass DefaultCache {\n  constructor() {\n    this.values = new Map();\n  }\n  // When there is a namespace, splice the namespace and key to form a new key\n  getCacheKey(key, namespace) {\n    if (namespace) {\n      return `${namespace}/${key.toString()}`;\n    }\n    return key;\n  }\n  get(key, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const cacheKey = this.getCacheKey(key, get(options, 'namespace'));\n      const data = this.values.get(cacheKey);\n      if (data) {\n        const {\n          value,\n          expiredTime\n        } = data;\n        if (!expiredTime || expiredTime - new Date().getTime() > 0) {\n          return value;\n        }\n      }\n      return undefined;\n    });\n  }\n  set(key, value, expiredTime, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const cacheKey = this.getCacheKey(key, get(options, 'namespace'));\n      this.values.set(cacheKey, {\n        value,\n        expiredTime\n      });\n      return true;\n    });\n  }\n}\nconst internalCache = new DefaultCache();\nclass AESCipher {\n  constructor(key) {\n    const hash = crypto.createHash('sha256');\n    hash.update(key);\n    this.key = hash.digest();\n  }\n  decrypt(encrypt) {\n    const encryptBuffer = Buffer.from(encrypt, 'base64');\n    const decipher = crypto.createDecipheriv('aes-256-cbc', this.key, encryptBuffer.slice(0, 16));\n    let decrypted = decipher.update(encryptBuffer.slice(16).toString('hex'), 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n    return decrypted;\n  }\n}\nconst formatDomain = domain => {\n  switch (domain) {\n    case Domain.Feishu:\n      return 'https://open.feishu.cn';\n    case Domain.Lark:\n      return 'https://open.larksuite.com';\n    default:\n      return domain;\n  }\n};\nconst fillApiPath = function (apiPath) {\n  let pathSupplement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return apiPath.replace(/:([^/]+)/g, (_, $1) => {\n    if (pathSupplement[$1] !== undefined) {\n      return pathSupplement[$1];\n    }\n    throw new Error(`request miss ${$1} path argument`);\n  });\n};\nconst assert = (predication, callback) => __awaiter(void 0, void 0, void 0, function* () {\n  const isInvoke = typeof predication === 'function' ? predication() : predication;\n  if (isInvoke) {\n    yield callback();\n  }\n});\nconst formatUrl = url => url ? url.replace(/^\\//, '') : '';\nconst formatErrors = e => {\n  if (e instanceof AxiosError) {\n    const {\n      message,\n      response,\n      request,\n      config\n    } = pick(e, ['message', 'response', 'request', 'config']);\n    const filteredErrorInfo = {\n      message,\n      config: pick(config, ['data', 'url', 'params', 'method']),\n      request: pick(request, ['protocol', 'host', 'path', 'method']),\n      response: pick(response, ['data', 'status', 'statusText'])\n    };\n    const errors = [filteredErrorInfo];\n    const specificError = get(e, 'response.data');\n    if (specificError) {\n      errors.push(specificError);\n    }\n    return errors;\n  }\n  return [e];\n};\n\n// auto gen\nclass Client$1 {\n  constructor() {\n    /**\n     * 智能门禁\n     */\n    this.acs = {\n      /**\n       * access_record.access_photo\n       */\n      accessRecordAccessPhoto: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=access_record.access_photo&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/access_record-access_photo/get document }\n         *\n         * 下载开门时的人脸识别图片\n         *\n         * 用户在门禁考勤机上成功开门或打卡后，智能门禁应用都会生成一条门禁记录，对于使用人脸识别方式进行开门的识别记录，还会有抓拍图。;;可以用该接口下载开门时的人脸识别照片。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/access_records/:access_record_id/access_photo`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        })\n      },\n      /**\n       * 门禁记录\n       */\n      accessRecord: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/acs/v1/access_records`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=access_record&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/access_record/list document }\n         *\n         * 获取门禁记录列表\n         *\n         * 用户在门禁考勤机上成功开门或打卡后，智能门禁应用都会生成一条门禁记录。;;该接口返回满足查询参数的识别记录。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/access_records`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 门禁设备\n       */\n      device: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=device&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/device/list document }\n         *\n         * 获取门禁设备列表\n         *\n         * 使用该接口获取租户内所有门禁设备。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/devices`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * user.face\n       */\n      userFace: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user.face&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user-face/get document }\n         *\n         * 下载人脸图片\n         *\n         * 对于已经录入人脸图片的用户，可以使用该接口下载用户人脸图片。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id/face`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user.face&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user-face/update document }\n         *\n         * 上传人脸图片\n         *\n         * 用户需要录入人脸图片才可以使用门禁考勤机。使用该 API 上传门禁用户的人脸图片。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id/face`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        })\n      },\n      /**\n       * 用户管理\n       */\n      user: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user/get document }\n         *\n         * 获取单个用户信息\n         *\n         * 该接口用于获取智能门禁中单个用户的信息。\n         *\n         * 只能获取已加入智能门禁权限组的用户\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/acs/v1/users`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user/list document }\n         *\n         * 获取用户列表\n         *\n         * 使用该接口获取智能门禁中所有用户信息。\n         *\n         * 只能获取已加入智能门禁权限组的用户。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/users`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user/patch document }\n         *\n         * 修改用户部分信息\n         *\n         * 飞书智能门禁在人脸识别成功后会有韦根信号输出，输出用户的卡号。;对于使用韦根协议的门禁系统，企业可使用该接口录入用户卡号。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 管理后台-企业勋章\n     */\n    this.admin = {\n      /**\n       * 部门维度的数据报表\n       */\n      adminDeptStat: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=admin_dept_stat&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/admin_dept_stat/list document }\n         *\n         * 获取部门维度的用户活跃和功能使用数据\n         *\n         * 该接口用于获取部门维度的用户活跃和功能使用数据，即IM（即时通讯）、日历、云文档、音视频会议功能的使用数据。\n         *\n         * - 只有企业自建应用才有权限调用此接口;;- 当天的数据会在第二天的早上九点半产出（UTC+8）\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/admin_dept_stats`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户维度的数据报表\n       */\n      adminUserStat: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=admin_user_stat&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/admin_user_stat/list document }\n         *\n         * 获取用户维度的用户活跃和功能使用数据\n         *\n         * 用于获取用户维度的用户活跃和功能使用数据，即IM（即时通讯）、日历、云文档、音视频会议功能的使用数据。\n         *\n         * - 只有企业自建应用才有权限调用此接口;;- 当天的数据会在第二天的早上九点半产出（UTC+8）\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/admin_user_stats`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 勋章\n       */\n      badge: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/create document }\n         *\n         * 创建勋章\n         *\n         * 使用该接口可以创建一枚完整的勋章信息，一个租户下最多可创建1000枚勋章。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/get document }\n         *\n         * 获取勋章详情\n         *\n         * 可以通过该接口查询勋章的详情\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/list document }\n         *\n         * 获取勋章列表\n         *\n         * 可以通过该接口列出租户下所有的勋章，勋章的排列顺序是按照创建时间倒序排列。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/update document }\n         *\n         * 修改勋章信息\n         *\n         * 通过该接口可以修改勋章的信息\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 勋章授予名单\n       */\n      badgeGrant: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/create document }\n         *\n         * 创建勋章的授予名单\n         *\n         * 通过该接口可以为特定勋章创建一份授予名单，一枚勋章下最多可创建1000份授予名单。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/delete document }\n         *\n         * 删除授予名单\n         *\n         * 通过该接口可以删除特定授予名单的信息\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants/:grant_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/get document }\n         *\n         * 获取授予名单的信息\n         *\n         * 通过该接口可以获取特定授予名单的信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants/:grant_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/list document }\n         *\n         * 获取勋章的授予名单列表\n         *\n         * 通过该接口可以获取特定勋章下的授予名单列表，授予名单的排列顺序按照创建时间倒序排列。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/update document }\n         *\n         * 修改授予名单\n         *\n         * 通过该接口可以修改特定授予名单的相关信息\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants/:grant_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 勋章图片\n       */\n      badgeImage: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge_image&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge_image/create document }\n         *\n         * 上传勋章图片\n         *\n         * 通过该接口可以上传勋章详情图、挂饰图的文件，获取对应的文件key\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badge_images`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        })\n      },\n      /**\n       * 登录密码管理\n       */\n      password: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=admin&resource=password&apiName=reset&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/password/reset document }\n         *\n         * 重置密码\n         *\n         * 重置用户的企业邮箱密码，仅当用户的邮箱和企业邮箱(别名)一致时生效，可用于处理飞书企业邮箱登录死锁的问题。;;邮箱死锁：当用户的登录凭证与飞书企业邮箱一致时，目前飞书登录流程要求用户输入验证码，由于飞书邮箱无单独的帐号体系，则未登录时无法收取邮箱验证码，即陷入死锁\n         */\n        reset: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/admin/v1/password/reset`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 应用信息\n     */\n    this.application = {\n      /**\n       * 我的常用推荐规则\n       */\n      appRecommendRule: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/application/v6/app_recommend_rules`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=app_recommend_rule&apiName=list&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/app_recommend_rule/list document }\n         *\n         * 获取当前设置的推荐规则列表\n         *\n         * 获取当前设置的推荐规则列表。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/app_recommend_rules`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 应用使用情况\n       */\n      applicationAppUsage: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_usage&apiName=overview&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_usage/overview document }\n         *\n         * 获取应用使用概览\n         *\n         * 查看应用在某一天/某一周/某一个月的使用数据，可以查看租户整体对应用的使用情况，也可以分部门查看。\n         *\n         * 1. 仅支持企业版/旗舰版租户使用;2. 一般每天早上10点产出前一天的数据;3. 已经支持的指标包括：应用的活跃用户数、累计用户数、新增用户数、访问页面数、打开次数;4. 数据从飞书4.10版本开始统计，使用飞书版本4.10及以下版本的用户数据不会被统计到;5. 按照部门查看数据时，会展示当前部门以及其子部门的整体使用情况;6. 调用频控为100次/分\n         */\n        overview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_usage/overview`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 事件\n       */\n      applicationAppVersion: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=contacts_range_suggest&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=contacts_range_suggest&project=application&resource=application.app_version&version=v6 document }\n         *\n         * 获取应用版本通讯录权限范围建议\n         */\n        contactsRangeSuggest: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions/:version_id/contacts_range_suggest`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=get&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_version/get document }\n         *\n         * 获取应用版本信息\n         *\n         * 根据应用 ID 和应用版本 ID 来获取同租户下的应用版本的信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions/:version_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=list&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_version/list document }\n         *\n         * 获取应用版本列表\n         *\n         * 根据 app_id 获取对应应用版本列表。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=patch&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_version/patch document }\n         *\n         * 更新应用审核状态\n         *\n         * 通过接口来更新应用版本的审核结果：通过后应用可以直接上架；拒绝后则开发者可以看到拒绝理由，并在修改后再次申请发布。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions/:version_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 应用\n       */\n      application: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=contacts_range_configuration&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=contacts_range_configuration&project=application&resource=application&version=v6 document }\n         */\n        contactsRangeConfiguration: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/contacts_range_configuration`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=get&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application/get document }\n         *\n         * 获取应用信息\n         *\n         * 根据app_id获取应用的基础信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=patch&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application/patch document }\n         *\n         * 更新应用分组信息\n         *\n         * 更新应用的分组信息（分组会影响应用在工作台中的分类情况，请谨慎更新）\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        underauditlistWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/underauditlist`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=underauditlist&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application/underauditlist document }\n         *\n         * 查看待审核的应用列表\n         *\n         * 查看本企业下所有待审核的自建应用列表\n         */\n        underauditlist: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/underauditlist`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 应用反馈\n       */\n      applicationFeedback: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.feedback&apiName=list&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-feedback/list document }\n         *\n         * 获取应用反馈列表\n         *\n         * 查询应用的反馈数据\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/feedbacks`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.feedback&apiName=patch&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-feedback/patch document }\n         *\n         * 更新应用反馈\n         *\n         * 更新应用的反馈数据\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/feedbacks/:feedback_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 事件\n       */\n      applicationVisibility: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.visibility&apiName=check_white_black_list&version=v6 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=check_white_black_list&project=application&resource=application.visibility&version=v6 document }\n         */\n        checkWhiteBlackList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/visibility/check_white_black_list`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 审批\n     */\n    this.approval = {\n      /**\n       * 原生审批定义\n       */\n      approval: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/create document }\n         *\n         * 创建审批定义\n         *\n         * 用于通过接口创建简单的审批定义，可以灵活指定定义的基础信息、表单和流程等。创建成功后，不支持从审批管理后台删除该定义。不推荐企业自建应用使用，如有需要尽量联系管理员在审批管理后台创建定义。\n         *\n         * 接口谨慎调用，创建后的审批定义无法停用/删除\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=get&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/get document }\n         *\n         * 查看审批定义\n         *\n         * 根据 Approval Code 获取某个审批定义的详情，用于构造创建审批实例的请求。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals/:approval_code`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=subscribe&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/subscribe document }\n         *\n         * 订阅审批事件\n         *\n         * 应用订阅 approval_code 后，该应用就可以收到该审批定义对应实例的事件通知。同一应用只需要订阅一次，无需重复订阅。;;当应用不希望再收到审批事件时，可以使用取消订阅接口进行取消，取消后将不再给应用推送消息。;;订阅和取消订阅都是应用维度的，多个应用可以同时订阅同一个 approval_code，每个应用都能收到审批事件。\n         */\n        subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals/:approval_code/subscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=unsubscribe&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/unsubscribe document }\n         *\n         * 取消订阅审批事件\n         *\n         * 取消订阅 approval_code 后，无法再收到该审批定义对应实例的事件通知\n         */\n        unsubscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals/:approval_code/unsubscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 三方审批定义\n       */\n      externalApproval: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_approval&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_approval/create document }\n         *\n         * 三方审批定义创建\n         *\n         * 审批定义是审批的描述，包括审批名称、图标、描述等基础信息。创建好审批定义，用户就可以在审批应用的发起页中看到审批，如果用户点击发起，则会跳转到配置的发起三方系统地址去发起审批。;;另外，审批定义还配置了审批操作时的回调地址：审批人在待审批列表中进行【同意】【拒绝】操作时，审批中心会调用回调地址通知三方系统。\n         *\n         * 注意，审批中心不负责审批流程的流转，只负责展示、操作、消息通知。因此审批定义创建时没有审批流程的信息。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_approvals`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 三方审批实例\n       */\n      externalInstance: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_instance&apiName=check&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_instance/check document }\n         *\n         * 三方审批实例校验\n         *\n         * 校验三方审批实例数据，用于判断服务端数据是否为最新的。用户提交实例最新更新时间，如果服务端不存在该实例，或者服务端实例更新时间不是最新的，则返回对应实例 id。;;例如，用户可以每隔5分钟，将最近5分钟产生的实例使用该接口进行对比。\n         */\n        check: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_instances/check`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_instance&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_instance/create document }\n         *\n         * 三方审批实例同步\n         *\n         * 审批中心不负责审批的流转，审批的流转在三方系统，三方系统在审批流转后生成的审批实例、审批任务、审批抄送数据同步到审批中心。;;用户可以在审批中心中浏览三方系统同步过来的实例、任务、抄送信息，并且可以跳转回三方系统进行更详细的查看和操作，其中实例信息在【已发起】列表，任务信息在【待审批】和【已审批】列表，抄送信息在【抄送我】列表;;:::html;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/9dff4434afbeb0ef69de7f36b9a6e995_z5iwmTzEgg.png\" alt=\"\" style=\"zoom:17%;\" />;;;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/ca6e0e984a7a6d64e1b16a0bac4bf868_tfqjCiaJQM.png\" alt=\"\" style=\"zoom:17%;\" />;;;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/529377e238df78d391bbd22e962ad195_T7eefLI1GA.png\" alt=\"\" style=\"zoom:17%;\" />;:::;;对于审批任务，三方系统也可以配置审批任务的回调接口，这样审批人可以在审批中心中直接进行审批操作，审批中心会回调三方系统，三方系统收到回调后更新任务信息，并将新的任务信息同步回审批中心，形成闭环。;;:::html;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/721c35428bc1187db3318c572f9979ad_je75QpElcg.png\" alt=\"\"  style=\"zoom:25%;\" />;:::;<br>\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_instances`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 三方审批任务\n       */\n      externalTask: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_tasks`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_task&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_task/list document }\n         *\n         * 获取三方审批任务状态\n         *\n         * 该接口用于获取三方审批的状态。用户传入查询条件，接口返回满足条件的审批实例的状态。该接口支持多种参数的组合，包括如下组合：;;1.通过 instance_ids 获取指定实例的任务状态;;2.通过 user_ids 获取指定用户的任务状态;;3.通过 status 获取指定状态的所有任务;;4.通过page_token获取下一批数据\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_tasks`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 原生审批实例\n       */\n      instance: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=add_sign&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/ukTM5UjL5ETO14SOxkTN/approval-task-addsign document }\n         */\n        addSign: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/add_sign`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=cancel&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/cancel document }\n         *\n         * 审批实例撤回\n         *\n         * 对于状态为“审批中”的单个审批实例进行撤销操作，撤销后审批流程结束\n         */\n        cancel: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/cancel`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=cc&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/cc document }\n         *\n         * 审批实例抄送\n         *\n         * 通过接口可以将当前审批实例抄送给其他人。\n         */\n        cc: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/cc`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/create document }\n         *\n         * 创建审批实例\n         *\n         * 创建一个审批实例，调用方需对审批定义的表单有详细了解，将按照定义的表单结构，将表单 Value 通过接口传入\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=get&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/get document }\n         *\n         * 获取单个审批实例详情\n         *\n         * 通过审批实例 Instance Code  获取审批实例详情。Instance Code 由 [批量获取审批实例](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/list) 接口获取。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/list document }\n         *\n         * 批量获取审批实例ID\n         *\n         * 根据 approval_code 批量获取审批实例的 instance_code，用于拉取租户下某个审批定义的全部审批实例。默认以审批创建时间先后顺序排列\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=preview&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/ukTM5UjL5ETO14SOxkTN/approval-preview document }\n         */\n        preview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/preview`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        queryWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/query`, path),\n              method: \"POST\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=query&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/query document }\n         *\n         * 查询实例列表\n         *\n         * 该接口通过不同条件查询审批系统中符合条件的审批实例列表。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=search_cc&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/search_cc document }\n         *\n         * 查询抄送列表\n         *\n         * 该接口通过不同条件查询审批系统中符合条件的审批抄送列表。\n         */\n        searchCc: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/search_cc`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=specified_rollback&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/specified_rollback document }\n         *\n         * 审批任务退回\n         *\n         * 从当前审批任务，退回到已审批的一个或多个任务节点。退回后，已审批节点重新生成审批任务\n         */\n        specifiedRollback: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/specified_rollback`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 原生审批评论\n       */\n      instanceComment: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/create document }\n         *\n         * 创建评论\n         *\n         * 在某审批实例下创建、修改评论或评论回复（不包含审批同意、拒绝、转交等附加的理由或意见）。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/delete document }\n         *\n         * 删除评论\n         *\n         * 逻辑删除某审批实例下的一条评论或评论回复（不包含审批同意、拒绝、转交等附加的理由或意见）。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments/:comment_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/list document }\n         *\n         * 获取评论\n         *\n         * 根据 Instance Code 获取某个审批实例下的全部评论与评论回复（不包含审批同意、拒绝、转交等附加的理由或意见）。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=remove&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/remove document }\n         *\n         * 清空评论\n         *\n         * 删除某审批实例下的全部评论与评论回复。\n         */\n        remove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments/remove`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 原生审批任务\n       */\n      task: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=approve&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/approve document }\n         *\n         * 审批任务同意\n         *\n         * 对于单个审批任务进行同意操作。同意后审批流程会流转到下一个审批人。\n         */\n        approve: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/approve`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        queryWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/query`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=query&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/query document }\n         *\n         * 用户角度列出任务\n         *\n         * 根据用户和任务分组查询任务列表\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=reject&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/reject document }\n         *\n         * 审批任务拒绝\n         *\n         * 对于单个审批任务进行拒绝操作。拒绝后审批流程结束。\n         */\n        reject: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/reject`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=resubmit&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/resubmit document }\n         *\n         * 审批任务重新提交\n         *\n         * 对于单个退回到发起人的审批任务进行重新发起操作。发起后审批流程会流转到下一个审批人。\n         */\n        resubmit: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/resubmit`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=search&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/search document }\n         *\n         * 查询任务列表\n         *\n         * 该接口通过不同条件查询审批系统中符合条件的审批任务列表\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=transfer&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/transfer document }\n         *\n         * 审批任务转交\n         *\n         * 对于单个审批任务进行转交操作。转交后审批流程流转给被转交人。\n         */\n        transfer: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/transfer`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 打卡\n     */\n    this.attendance = {\n      /**\n       * approval_info\n       */\n      approvalInfo: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=approval_info&apiName=process&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/approval_info/process document }\n         *\n         * 通知审批状态更新\n         *\n         * 对于只使用飞书考勤系统而未使用飞书审批系统的企业，可以通过该接口更新写入飞书考勤系统中的三方系统审批状态，例如请假、加班、外出、出差、补卡等审批，状态包括通过、不通过、撤销等。\n         *\n         * 发起状态的审批才可以被更新为通过、不通过，已经通过的审批才可以被更新为撤销。\n         */\n        process: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/approval_infos/process`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 文件\n       */\n      file: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=file&apiName=download&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/file/download document }\n         *\n         * 下载文件\n         *\n         * 通过文件 ID 下载指定的文件。\n         */\n        download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/files/:file_id/download`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=file&apiName=upload&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/file/upload document }\n         *\n         * 上传文件\n         *\n         * 上传文件并获取文件 ID，可用于“修改用户设置”接口中的 face_key 参数。\n         */\n        upload: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/files/upload`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        })\n      },\n      /**\n       * 考勤组管理\n       */\n      group: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/create document }\n         *\n         * 创建或修改考勤组\n         *\n         * 考勤组，是对部门或者员工在某个特定场所及特定时间段内的出勤情况（包括上下班、迟到、早退、病假、婚假、丧假、公休、工作时间、加班情况等）的一种规则设定。;;通过设置考勤组，可以从部门、员工两个维度，来设定考勤方式、考勤时间、考勤地点等考勤规则。\n         *\n         * 出于安全考虑，目前通过该接口只允许修改自己创建的考勤组。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/delete document }\n         *\n         * 删除考勤组\n         *\n         * 通过班次 ID 删除班次。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups/:group_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/get document }\n         *\n         * 获取考勤组详情\n         *\n         * 通过考勤组 ID 获取考勤组详情。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups/:group_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/list document }\n         *\n         * 获取考勤组列表\n         *\n         * 翻页获取所有考勤组列表。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=search&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/search document }\n         *\n         * 按名称查询考勤组\n         *\n         * 按考勤组名称查询考勤组摘要信息。查询条件支持名称精确匹配和模糊匹配两种方式。查询结果按考勤组修改时间 desc 排序，且最大记录数为 10 条。\n         *\n         * 该接口依赖的数据和考勤组主数据间存在数据同步延时（正常数据同步 2 秒以内），因此在使用该接口时需注意评估数据延迟潜在风险。\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 考勤班次\n       */\n      shift: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/create document }\n         *\n         * 创建班次\n         *\n         * 班次是描述一次考勤任务时间规则的统称，比如一天打多少次卡，每次卡的上下班时间，晚到多长时间算迟到，晚到多长时间算缺卡等。\n         *\n         * - 创建一个考勤组前，必须先创建一个或者多个班次。;- 一个公司内的班次是共享的，你可以直接引用他人创建的班次，但是需要注意的是，若他人修改了班次，会影响到你的考勤组及其考勤结果。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/delete document }\n         *\n         * 删除班次\n         *\n         * 通过班次 ID 删除班次。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts/:shift_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/get document }\n         *\n         * 获取班次详情\n         *\n         * 通过班次 ID 获取班次详情。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts/:shift_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/list document }\n         *\n         * 获取班次列表\n         *\n         * 翻页获取所有班次列表。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/query document }\n         *\n         * 按名称查询班次\n         *\n         * 通过班次的名称查询班次信息。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 假勤审批\n       */\n      userApproval: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_approval&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_approval/create document }\n         *\n         * 写入审批结果\n         *\n         * 由于部分企业使用的是自己的审批系统，而不是飞书审批系统，因此员工的请假、加班等数据无法流入到飞书考勤系统中，导致员工在请假时间段内依然收到打卡提醒，并且被记为缺卡。;;对于这些只使用飞书考勤系统，而未使用飞书审批系统的企业，可以通过考勤开放接口的形式，将三方审批结果数据回写到飞书考勤系统中。\n         *\n         * 目前支持写入加班、请假、出差和外出这四种审批结果，写入只会追加(insert)，不会覆盖(update)（开放接口导入的加班假期记录，在管理后台的假期加班里查不到，只能通过[获取审批通过数据](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_approval/query)来查询）\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_approvals`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_approval&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_approval/query document }\n         *\n         * 获取审批通过数据\n         *\n         * 获取员工在某段时间内的请假、加班、外出和出差四种审批的通过数据。\n         *\n         * 请假的假期时长字段，暂未开放提供，待后续提供。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_approvals/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 考勤排班\n       */\n      userDailyShift: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_daily_shift&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_daily_shift/batch_create document }\n         *\n         * 创建或修改班表\n         *\n         * 班表是用来描述考勤组内人员每天按哪个班次进行上班。目前班表支持按一个整月对一位或多位人员进行排班。\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_daily_shifts/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_daily_shift&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_daily_shift/query document }\n         *\n         * 查询班表信息\n         *\n         * 支持查询多个用户的排班情况，查询的时间跨度不能超过 30 天。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_daily_shifts/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * user_flow\n       */\n      userFlow: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_flow&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_flow/batch_create document }\n         *\n         * 导入打卡流水记录\n         *\n         * 导入授权内员工的打卡流水记录。导入后，会根据员工所在的考勤组班次规则，计算最终的打卡状态与结果。\n         *\n         * 适用于考勤机数据导入等场景。\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_flows/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_flow&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_flow/get document }\n         *\n         * 获取打卡流水记录\n         *\n         * 通过打卡记录 ID 获取用户的打卡流水记录。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_flows/:user_flow_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_flow&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_flow/query document }\n         *\n         * 批量查询打卡流水记录\n         *\n         * 批量查询授权内员工的实际打卡流水记录。例如，企业给一个员工设定的班次是上午 9 点和下午 6 点各打一次上下班卡，但是该员工在这期间打了多次卡，该接口会把所有的打卡记录都返回。\n         *\n         * 如果只需获取打卡结果，而不需要详细的打卡数据，可使用“获取打卡结果”的接口。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_flows/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户设置\n       */\n      userSetting: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_setting&apiName=modify&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_setting/modify document }\n         *\n         * 修改用户设置\n         *\n         * 修改授权内员工的用户设置信息，包括人脸照片文件 ID。\n         */\n        modify: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_settings/modify`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_setting&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_setting/query document }\n         *\n         * 批量查询用户设置\n         *\n         * 批量查询授权内员工的用户设置信息，包括人脸照片文件 ID、人脸照片更新时间。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_settings/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 考勤统计\n       */\n      userStatsData: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_data&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_data/query document }\n         *\n         * 查询统计数据\n         *\n         * 查询日度统计或月度统计的统计数据。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_datas/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * user_stats_field\n       */\n      userStatsField: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_field&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_field/query document }\n         *\n         * 查询统计表头\n         *\n         * 查询考勤统计支持的日度统计或月度统计的统计表头。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_fields/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * user_stats_view\n       */\n      userStatsView: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_view&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_view/query document }\n         *\n         * 查询统计设置\n         *\n         * 查询开发者定制的日度统计或月度统计的统计报表表头设置信息。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_views/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_view&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_view/update document }\n         *\n         * 更新统计设置\n         *\n         * 更新开发者定制的日度统计或月度统计的统计报表表头设置信息。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_views/:user_stats_view_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 考勤记录\n       */\n      userTask: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task/query document }\n         *\n         * 获取打卡结果\n         *\n         * 获取企业内员工的实际打卡结果，包括上班打卡结果和下班打卡结果。\n         *\n         * - 如果企业给一个员工设定的班次是上午 9 点和下午 6 点各打一次上下班卡，即使员工在这期间打了多次卡，该接口也只会返回 1 条记录。;- 如果要获取打卡的详细数据，如打卡位置等信息，可使用“获取打卡流水记录”或“批量查询打卡流水记录”的接口。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_tasks/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 考勤补卡\n       */\n      userTaskRemedy: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task_remedy&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task_remedy/create document }\n         *\n         * 通知补卡审批发起\n         *\n         * 对于只使用飞书考勤系统而未使用飞书审批系统的企业，可以通过该接口，将在三方审批系统中发起的补卡审批数据，写入到飞书考勤系统中，状态为审批中。写入后可以由[通知审批状态更新](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/approval_info/process) 进行状态更新\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_task_remedys`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task_remedy&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task_remedy/query document }\n         *\n         * 获取补卡记录\n         *\n         * 获取授权内员工的补卡记录。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_task_remedys/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task_remedy&apiName=query_user_allowed_remedys&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task_remedy/query_user_allowed_remedys document }\n         *\n         * 获取用户可补卡时间\n         *\n         * 获取用户某天可以补的第几次上 / 下班卡的时间。\n         */\n        queryUserAllowedRemedys: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_task_remedys/query_user_allowed_remedys`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.auth = {\n      /**\n       * app_access_token\n       */\n      appAccessToken: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=auth&resource=app_access_token&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=auth&resource=app_access_token&version=v3 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/auth/v3/app_access_token`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=auth&resource=app_access_token&apiName=internal&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=internal&project=auth&resource=app_access_token&version=v3 document }\n         */\n        internal: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/auth/v3/app_access_token/internal`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * app_ticket\n       */\n      appTicket: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=auth&resource=app_ticket&apiName=resend&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=resend&project=auth&resource=app_ticket&version=v3 document }\n         */\n        resend: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/auth/v3/app_ticket/resend`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * tenant_access_token\n       */\n      tenantAccessToken: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=auth&resource=tenant_access_token&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=auth&resource=tenant_access_token&version=v3 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/auth/v3/tenant_access_token`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=auth&resource=tenant_access_token&apiName=internal&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=internal&project=auth&resource=tenant_access_token&version=v3 document }\n         */\n        internal: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/auth/v3/tenant_access_token/internal`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.authen = {\n      /**\n       * access_token\n       */\n      accessToken: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=authen&resource=access_token&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=authen&resource=access_token&version=v1 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/authen/v1/access_token`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * refresh_access_token\n       */\n      refreshAccessToken: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=authen&resource=refresh_access_token&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=authen&resource=refresh_access_token&version=v1 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/authen/v1/refresh_access_token`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * user_info\n       */\n      userInfo: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=authen&resource=user_info&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=authen&resource=user_info&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/authen/v1/user_info`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.aweme_ecosystem = {};\n    /**\n     * 企业百科\n     */\n    this.baike = {\n      /**\n       * 分类\n       */\n      classification: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/baike/v1/classifications`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=classification&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/classification/list document }\n         *\n         * 获取百科分类\n         *\n         * 获取企业百科当前分类。;企业百科目前为二级分类体系，每个词条可添加多个二级分类，但每个一级分类下只能添加一个分类。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/classifications`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 草稿\n       */\n      draft: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=draft&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/draft/create document }\n         *\n         * 创建草稿\n         *\n         * 草稿并非百科词条，而是指通过 API 发起创建新词条或更新现有词条的申请。百科管理员审核通过后，草稿将变为新的词条或覆盖已有词条。\n         *\n         * · 创建新的百科词条时，无需传入 entity_id 字段;· 更新已有百科词条时，请传入对应词条的 entity_id 或 outer_info\n         *\n         * 以用户身份创建草稿（即 Authorization 使用 user_access_token），对应用户将收到由企业百科 Bot 发送的审核结果；以应用身份创建草稿（即 Authorization 使用 tenant_access_toke），不会收到任何通知。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/drafts`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=draft&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/draft/update document }\n         *\n         * 更新草稿\n         *\n         * 根据 draft_id 更新草稿内容，已审批的草稿无法编辑\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/drafts/:draft_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 词条\n       */\n      entity: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/create document }\n         *\n         * 创建免审词条\n         *\n         * 通过此接口创建的词条，不需要百科管理员审核可直接写入词库，请慎重使用【租户管理员请慎重审批】。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=extract&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/extract document }\n         *\n         * 提取潜在的百科词条\n         *\n         * 提取文本中可能成为百科词条的词语，且不会过滤已经成为百科词条的词语。同时，会返回推荐的别名。\n         */\n        extract: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/extract`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/get document }\n         *\n         * 获取词条详情\n         *\n         * 通过词条 id 拉取对应的词条详情信息。\n         *\n         * 也支持通过 provider 和 outer_id 返回对应实体的详情数据。此时路径中的 entity_id 为固定的 enterprise_0\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/:entity_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=highlight&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/highlight document }\n         *\n         * 词条高亮\n         *\n         * 传入一句话，智能识别句中对应的词条，并返回词条位置和 entity_id，可在外部系统中快速实现百科词条智能高亮。\n         */\n        highlight: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/highlight`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/list document }\n         *\n         * 获取词条列表\n         *\n         * 分页拉取词条列表数据，支持拉取租户内的全部词条。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=match&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/match document }\n         *\n         * 精准搜索词条\n         *\n         * 将关键词与词条名、别名精准匹配，并返回对应的 词条 ID。\n         */\n        match: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/match`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/search`, path),\n              method: \"POST\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=search&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/search document }\n         *\n         * 模糊搜索词条\n         *\n         * 传入关键词，与词条名、别名、释义等信息进行模糊匹配，返回搜到的词条信息。\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/update document }\n         *\n         * 更新免审词条\n         *\n         * 通过此接口更新已有的词条，不需要百科管理员审核可直接写入词库，请慎重使用【租户管理员请慎重审批】。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/:entity_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 文件\n       */\n      file: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=file&apiName=download&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/file/download document }\n         *\n         * 图片下载\n         *\n         * 通过 file_token 下载原图片\n         */\n        download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/files/:file_token/download`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=baike&resource=file&apiName=upload&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/file/upload document }\n         *\n         * 图片上传\n         *\n         * 百科词条图片资源上传。\n         */\n        upload: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/baike/v1/files/upload`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        })\n      }\n    };\n    /**\n     * 云文档-多维表格\n     */\n    this.bitable = {\n      /**\n       * 多维表格\n       */\n      app: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=copy&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=copy&project=bitable&resource=app&version=v1 document }\n         */\n        copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/copy`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=bitable&resource=app&version=v1 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app/get document }\n         *\n         * 获取多维表格元数据\n         *\n         * 获取指定多维表格的元数据信息，包括多维表格名称，多维表格版本号，多维表格是否开启高级权限等。\n         *\n         * 该接口支持调用频率上限为 20 QPS（Query Per Second，每秒请求率）\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app/update document }\n         *\n         * 更新多维表格元数据\n         *\n         * 通过 app_token 更新多维表格元数据\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         *\n         * - 飞书文档、飞书表格、知识库中的多维表格不支持开启高级权限;- 此接口非原子操作，先修改多维表格名字，后开关高级权限。可能存在部分成功的情况\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 仪表盘\n       */\n      appDashboard: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.dashboard&apiName=copy&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-dashboard/copy document }\n         *\n         * 复制仪表盘\n         *\n         * 该接口用于根据现有仪表盘复制出新的仪表盘\n         */\n        copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/dashboards/:block_id/copy`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/dashboards`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.dashboard&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-dashboard/list document }\n         *\n         * 列出仪表盘\n         *\n         * 根据 app_token，获取多维表格下的所有仪表盘\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/dashboards`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 自定义角色\n       */\n      appRole: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/create document }\n         *\n         * 新增自定义角色\n         *\n         * 新增自定义角色\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/delete document }\n         *\n         * 删除自定义角色\n         *\n         * 删除自定义角色\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/list document }\n         *\n         * 列出自定义角色\n         *\n         * 列出自定义角色\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/update document }\n         *\n         * 更新自定义角色\n         *\n         * 更新自定义角色\n         *\n         * 更新自定义角色是全量更新，会完全覆盖旧的自定义角色设置\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 协作者\n       */\n      appRoleMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/batch_create document }\n         *\n         * 批量新增协作者\n         *\n         * 批量新增自定义角色的协作者\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/batch_delete document }\n         *\n         * 批量删除协作者\n         *\n         * 批量删除自定义角色的协作者\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members/batch_delete`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/create document }\n         *\n         * 新增协作者\n         *\n         * 新增自定义角色的协作者\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/delete document }\n         *\n         * 删除协作者\n         *\n         * 删除自定义角色的协作者\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members/:member_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/list document }\n         *\n         * 列出协作者\n         *\n         * 列出自定义角色的协作者\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 数据表\n       */\n      appTable: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/batch_create document }\n         *\n         * 新增多个数据表\n         *\n         * 新增多个数据表\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/batch_delete document }\n         *\n         * 删除多个数据表\n         *\n         * 删除多个数据表\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/batch_delete`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/create document }\n         *\n         * 新增数据表\n         *\n         * 新增一个数据表\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/delete document }\n         *\n         * 删除数据表\n         *\n         * 删除一个数据表\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/list document }\n         *\n         * 列出数据表\n         *\n         * 根据  app_token，获取多维表格下的所有数据表\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/patch document }\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 字段\n       */\n      appTableField: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/create document }\n         *\n         * 新增字段\n         *\n         * 该接口用于在数据表中新增一个字段\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/delete document }\n         *\n         * 删除字段\n         *\n         * 该接口用于在数据表中删除一个字段\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields/:field_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/list document }\n         *\n         * 列出字段\n         *\n         * 根据 app_token 和 table_id，获取数据表的所有字段\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/update document }\n         *\n         * 更新字段\n         *\n         * 该接口用于在数据表中更新一个字段\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields/:field_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 表单\n       */\n      appTableFormField: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id/fields`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form.field&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form-field/list document }\n         *\n         * 列出表单问题\n         *\n         * 列出表单的所有问题项\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id/fields`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form.field&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form-field/patch document }\n         *\n         * 更新表单问题\n         *\n         * 该接口用于更新表单中的问题项\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id/fields/:field_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 表单\n       */\n      appTableForm: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form/get document }\n         *\n         * 获取表单元数据\n         *\n         * 获取表单的所有元数据项\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form/patch document }\n         *\n         * 更新表单元数据\n         *\n         * 该接口用于更新表单中的元数据项\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 记录\n       */\n      appTableRecord: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_create document }\n         *\n         * 新增多条记录\n         *\n         * 该接口用于在数据表中新增多条记录，单次调用最多新增 500 条记录。\n         *\n         * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_delete document }\n         *\n         * 删除多条记录\n         *\n         * 该接口用于删除数据表中现有的多条记录，单次调用中最多删除 500 条记录。\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/batch_delete`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=batch_update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_update document }\n         *\n         * 更新多条记录\n         *\n         * 该接口用于更新数据表中的多条记录，单次调用最多更新 500 条记录。\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        batchUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/batch_update`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/create document }\n         *\n         * 新增记录\n         *\n         * 该接口用于在数据表中新增一条记录\n         *\n         * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/delete document }\n         *\n         * 删除记录\n         *\n         * 该接口用于删除数据表中的一条记录\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/:record_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/get document }\n         *\n         * 检索记录\n         *\n         * 该接口用于根据 record_id 的值检索现有记录\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/:record_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/list document }\n         *\n         * 列出记录\n         *\n         * 该接口用于列出数据表中的现有记录，单次最多列出 500 行记录，支持分页获取。\n         *\n         * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率），1000 QPM（Query Per Minute，每分钟请求率）\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/update document }\n         *\n         * 更新记录\n         *\n         * 该接口用于更新数据表中的一条记录\n         *\n         * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/:record_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 视图\n       */\n      appTableView: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/create document }\n         *\n         * 新增视图\n         *\n         * 在数据表中新增一个视图\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/delete document }\n         *\n         * 删除视图\n         *\n         * 删除数据表中的视图\n         *\n         * 该接口支持调用频率上限为 10 QPS\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views/:view_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/get document }\n         *\n         * 检索视图\n         *\n         * 该接口根据 view_id 检索现有视图\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views/:view_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/list document }\n         *\n         * 列出视图\n         *\n         * 根据 app_token 和 table_id，获取数据表的所有视图\n         *\n         * 该接口支持调用频率上限为 20 QPS\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/patch document }\n         *\n         * 更新视图\n         *\n         * 该接口用于增量修改视图信息\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views/:view_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 小组件\n     */\n    this.block = {\n      /**\n       * 服务端 API\n       */\n      entity: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=block&resource=entity&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/block-v2/entity/create document }\n         *\n         * 创建 BlockEntity\n         *\n         * 开发者可以通过该接口将部分或全部数据存放于 BlockEntity。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/block/v2/entities`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=block&resource=entity&apiName=update&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/block-v2/entity/update document }\n         *\n         * 更新BlockEntity\n         *\n         * 开发者通过该接口可以更新存储在BlockEntity中的数据，并实时推送到端侧。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/block/v2/entities/:block_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 服务端 API\n       */\n      message: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=block&resource=message&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/block-v2/message/create document }\n         *\n         * Block协同数据推送\n         *\n         * 根据BlockID向指定用户列表推送协同数据。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/block/v2/message`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 日历\n     */\n    this.calendar = {\n      /**\n       * 日历访问控制\n       */\n      calendarAcl: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/create document }\n         *\n         * 创建访问控制\n         *\n         * 该接口用于以当前身份（应用 / 用户）给日历添加访问控制权限，即日历成员。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份需要有日历的 owner 权限，并且日历的类型只能为 primary 或 shared。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/delete document }\n         *\n         * 删除访问控制\n         *\n         * 该接口用于以当前身份（应用 / 用户）删除日历的控制权限，即日历成员。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份需要有日历的 owner 权限，并且日历的类型只能为 primary 或 shared。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls/:acl_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/list document }\n         *\n         * 获取访问控制列表\n         *\n         * 该接口用于以当前身份（应用 / 用户）获取日历的控制权限列表。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份需要有日历的 owner 权限，并且日历的类型只能为 primary 或 shared。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=subscription&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/subscription document }\n         *\n         * 订阅日历访问控制变更事件;\n         *\n         * 该接口用于以用户身份订阅指定日历下的日历成员变更事件。\n         *\n         * 用户必须对日历有访问权限。\n         */\n        subscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls/subscription`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=unsubscription&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/unsubscription document }\n         *\n         * 取消订阅日历访问控制变更事件\n         *\n         * 该接口用于以用户身份取消订阅指定日历下的日历成员变更事件。\n         *\n         * 用户必须对日历有访问权限。\n         */\n        unsubscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls/unsubscription`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 日历管理\n       */\n      calendar: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/create document }\n         *\n         * 创建共享日历\n         *\n         * 该接口用于为当前身份（应用 / 用户）创建一个共享日历。;;身份由 Header Authorization 的 Token 类型决定。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/delete document }\n         *\n         * 删除共享日历\n         *\n         * 该接口用于以当前身份（应用 / 用户）删除一个共享日历。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份必须对日历具有 owner 权限。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=get&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get document }\n         *\n         * 查询日历信息\n         *\n         * 该接口用于以当前身份（应用 / 用户）根据日历 ID 获取日历信息。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份必须对日历有访问权限。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/list document }\n         *\n         * 查询日历列表\n         *\n         * 该接口用于分页获得当前身份（应用 / 用户）的日历列表。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 调用时首先使用 page_token 分页拉取存量数据，之后使用 sync_token 增量同步变更数据。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=patch&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/patch document }\n         *\n         * 更新日历信息\n         *\n         * 该接口用于以当前身份（应用 / 用户）修改日历信息。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份对日历有 owner 权限时，可修改全局字段：summary, description, permission。;;当前身份对日历不具有 owner 权限时，仅可修改对自己生效的字段：color, summary_alias。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=primary&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/primary document }\n         *\n         * 查询主日历信息\n         *\n         * 获取当前身份的主日历信息。\n         */\n        primary: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/primary`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/search`, path),\n              method: \"POST\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=search&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/search document }\n         *\n         * 搜索日历\n         *\n         * 该接口用于通过关键字查询公共日历或用户主日历。\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=subscribe&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/subscribe document }\n         *\n         * 订阅日历\n         *\n         * 该接口用于以当前身份（应用 / 用户）订阅某个日历。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * - 仅可订阅类型为 primary 或 shared 的公开日历。;- 可订阅日历数量上限为1000。\n         */\n        subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/subscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=subscription&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/subscription document }\n         *\n         * 订阅日历变更事件\n         *\n         * 该接口用于以用户身份订阅当前身份下日历列表中的所有日历变更。\n         */\n        subscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/subscription`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=unsubscribe&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/unsubscribe document }\n         *\n         * 取消订阅日历\n         *\n         * 该接口用于以当前身份（应用 / 用户）取消对某日历的订阅状态。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 仅可操作已经被当前身份订阅的日历。\n         */\n        unsubscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/unsubscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=unsubscription&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/unsubscription document }\n         *\n         * 取消订阅日历变更事件\n         *\n         * 该接口用于以用户身份取消订阅当前身份下日历列表中的日历变更事件。\n         */\n        unsubscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/unsubscription`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 日程参与人\n       */\n      calendarEventAttendee: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee&apiName=batch_delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee/batch_delete document }\n         *\n         * 删除日程参与人\n         *\n         * 批量删除日程的参与人。\n         *\n         * - 当前身份需要有日历的 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;- 当前身份需要是日程的组织者。\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees/batch_delete`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee/create document }\n         *\n         * 创建日程参与人;\n         *\n         * 批量给日程添加参与人。\n         *\n         * - 当前身份需要有日历的 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;- 当前身份需要是日程的组织者，或日程设置了「参与人可邀请其它参与人」权限。;;- 新添加的日程参与人必须与日程组织者在同一个企业内。;;- 使用该接口添加会议室后，会议室会进入异步的预约流程，请求结束不代表会议室预约成功，需后续再查询预约状态。;;- 每个日程最多只能有 3000 名参与人。;;- 开启管理员能力后预约会议室可不受会议室预约范围的限制（当前不支持用管理员身份给其他人的日程预约会议室）\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee/list document }\n         *\n         * 获取日程参与人列表\n         *\n         * 获取日程的参与人列表，若参与者列表中有群组，请使用 [获取参与人群成员列表](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee-chat_member/list) 。\n         *\n         * - 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。;;- 当前身份必须有权限查看日程的参与人列表。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 日程参与人群成员\n       */\n      calendarEventAttendeeChatMember: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees/:attendee_id/chat_members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee.chat_member&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee-chat_member/list document }\n         *\n         * 获取日程参与群成员列表\n         *\n         * 获取日程的群参与人的群成员列表。\n         *\n         * - 当前身份必须有权限查看日程的参与人列表。;;- 当前身份必须在群聊中，或有权限查看群成员列表。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees/:attendee_id/chat_members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 日程\n       */\n      calendarEvent: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/create document }\n         *\n         * 创建日程\n         *\n         * 该接口用于以当前身份（应用 / 用户）在日历上创建一个日程。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份必须对日历有 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/delete document }\n         *\n         * 删除日程\n         *\n         * 该接口用于以当前身份（应用 / 用户）删除日历上的一个日程。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份必须对日历有 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;当前身份必须是日程的组织者。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=get&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/get document }\n         *\n         * 获取日程\n         *\n         * 该接口用于以当前身份（应用 / 用户）获取日历上的一个日程。;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * - 当前身份必须对日历有reader、writer或owner权限才会返回日程详细信息（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。;- [例外日程](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/introduction#71c5ec78)可通过event_id的非0时间戳后缀，来获取修改的重复性日程的哪一天日程的时间信息。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/list document }\n         *\n         * 获取日程列表\n         *\n         * 该接口用于以当前身份（应用 / 用户）获取日历下的日程列表。;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * - 当前身份必须对日历有reader、writer或owner权限才会返回日程详细信息（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。;;- 仅支持primary、shared和resource类型的日历获取日程列表。;;- page_token 分页拉取存量数据，sync_token 增量同步变更数据；目前仅传anchor_time时，会返回page_token。;;- 为了确保调用方日程同步数据的一致性，在使用sync_token时，不能同时使用start_time和end_time，否则可能造成日程数据缺失。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=patch&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/patch document }\n         *\n         * 更新日程\n         *\n         * 该接口用于以当前身份（应用 / 用户）更新日历上的一个日程。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份必须对日历有 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;当前身份为日程组织者时，可修改所有可编辑字段。;;当前身份为日程参与者时，仅可编辑部分字段。（如：visibility, free_busy_status, color, reminders）\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/search`, path),\n              method: \"POST\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=search&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/search document }\n         *\n         * 搜索日程\n         *\n         * 该接口用于以用户身份搜索某日历下的相关日程。;;身份由 Header Authorization 的 Token 类型决定。\n         *\n         * 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=subscription&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/subscription document }\n         *\n         * 订阅日程变更事件\n         *\n         * 该接口用于以用户身份订阅指定日历下的日程变更事件。\n         *\n         * 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。\n         */\n        subscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/subscription`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=unsubscription&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/unsubscription document }\n         *\n         * 取消订阅日程变更事件\n         *\n         * 该接口用于以用户身份取消订阅指定日历下的日程变更事件。\n         *\n         * 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。\n         */\n        unsubscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/unsubscription`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * Exchange绑定\n       */\n      exchangeBinding: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=exchange_binding&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/exchange_binding/create document }\n         *\n         * 创建Exchange绑定关系\n         *\n         * 本接口将Exchange账户绑定到飞书账户，进而支持Exchange日历的导入\n         *\n         * 操作用户需要是企业超级管理员\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/exchange_bindings`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=exchange_binding&apiName=delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/exchange_binding/delete document }\n         *\n         * 解除Exchange绑定关系\n         *\n         * 本接口解除Exchange账户和飞书账户的绑定关系，Exchange账户解除绑定后才能绑定其他飞书账户\n         *\n         * 操作用户需要是企业超级管理员\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/exchange_bindings/:exchange_binding_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=exchange_binding&apiName=get&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/exchange_binding/get document }\n         *\n         * 获取绑定状态\n         *\n         * 本接口获取Exchange账户的绑定状态，包括exchange日历是否同步完成。\n         *\n         * 操作用户需要是企业超级管理员\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/exchange_bindings/:exchange_binding_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * freebusy\n       */\n      freebusy: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=freebusy&apiName=list&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/freebusy/list document }\n         *\n         * 查询主日历忙闲信息\n         *\n         * 查询用户主日历或会议室的忙闲信息。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/freebusy/list`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 日历设置\n       */\n      setting: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=setting&apiName=generate_caldav_conf&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/setting/generate_caldav_conf document }\n         *\n         * 生成CalDAV配置\n         *\n         * 用于为当前用户生成一个CalDAV账号密码，用于将飞书日历信息同步到本地设备日历。\n         */\n        generateCaldavConf: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/settings/generate_caldav_conf`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 请假\n       */\n      timeoffEvent: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=timeoff_event&apiName=create&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/timeoff_event/create document }\n         *\n         * 创建请假日程\n         *\n         * 为指定用户创建一个请假日程，可以是一个普通请假日程，也可以是一个全天日程。;创建请假日程后，会在相应时间内，在用户个人签名页展示请假信息。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/timeoff_events`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=timeoff_event&apiName=delete&version=v4 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/timeoff_event/delete document }\n         *\n         * 删除请假日程\n         *\n         * 删除一个指定的请假日程，请假日程删除，用户个人签名页的请假信息也会消失。;一个应用只能删除自己创建的请假日程。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/timeoff_events/:timeoff_event_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.comment_sdk = {};\n    /**\n     * 通讯录\n     */\n    this.contact = {\n      /**\n       * 自定义用户字段\n       */\n      customAttr: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/custom_attrs`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=custom_attr&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/custom_attr/list document }\n         *\n         * 获取企业自定义用户字段\n         *\n         * 获取企业自定义的用户字段配置信息\n         *\n         * 调用该接口前，需要先确认[企业管理员](https://www.feishu.cn/hc/zh-CN/articles/360049067822)在[企业管理后台 - 组织架构 - 成员字段管理](http://www.feishu.cn/admin/contacts/employee-field-new/custom) 自定义字段管理栏开启了“允许开放平台API调用“。;;![通讯录.gif](//sf3-cn.feishucdn.com/obj/open-platform-opendoc/544738c94f13ef0b9ebaff53a5133cc7_E9EGMkXyzX.gif)\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/custom_attrs`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 部门\n       */\n      department: {\n        childrenWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id/children`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=children&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/children document }\n         *\n         * 获取子部门列表\n         *\n         * 通过部门ID获取部门的子部门列表。\n         *\n         * - 部门ID 必填，根部门的部门ID 为0。;- 使用 `user_access_token` 时，返回该用户组织架构可见性范围（[登陆企业管理后台进行权限配置](https://www.feishu.cn/admin/security/permission/visibility)）内的所有可见部门。当进行递归查询时，最多1000个部门对该用户可见。;;- 使用 ;`tenant_access_token` 则基于应用的通讯录权限范围进行权限校验与过滤。;如果部门ID为0，会检验应用是否有全员通讯录权限，如果是非0 部门ID，则会校验应用是否有该部门的通讯录权限。无部门权限返回无部门通讯录权限错误码，有权限则返回部门下子部门列表（根据fetch_child决定是否递归）。\n         */\n        children: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id/children`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/create document }\n         *\n         * 创建部门\n         *\n         * 该接口用于向通讯录中创建部门。\n         *\n         * 只可在应用的通讯录权限范围内的部门下创建部门。若需要在根部门下创建子部门，则应用通讯录权限范围需要设置为“全部成员”。应用商店应用无权限调用此接口。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/delete document }\n         *\n         * 删除部门\n         *\n         * 该接口用于从通讯录中删除部门。\n         *\n         * 应用需要同时拥有待删除部门及其父部门的通讯录授权。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/get document }\n         *\n         * 获取单个部门信息\n         *\n         * 该接口用于向通讯录获取单个部门信息。\n         *\n         * - 使用`tenant_access_token`时，应用需要拥有待查询部门的通讯录授权。如果需要获取根部门信息，则需要拥有全员权限。;- 使用`user_access_token`时，用户需要有待查询部门的可见性，如果需要获取根部门信息，则要求员工可见所有人。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=department&version=v3 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        parentWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/parent`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=parent&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/parent document }\n         *\n         * 获取父部门信息\n         *\n         * 该接口用来递归获取部门父部门的信息，并按照由子到父的顺序返回有权限的父部门信息列表。\n         *\n         * 使用`tenant_access_token`时,该接口只返回可见性范围内的父部门信息。;例如：A >>B>>C>>D四级部门，通讯录权限只到B，那么查询D部门的parent，会返回B和C两级部门。;使用user_access_token时,该接口只返回对于用户可见的父部门信息。\n         */\n        parent: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/parent`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/patch document }\n         *\n         * 修改部门部分信息\n         *\n         * 该接口用于更新通讯录中部门的信息。\n         *\n         * 调用该接口需要具有该部门以及更新操作涉及的部门的通讯录权限。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/search`, path),\n              method: \"POST\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=search&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/search document }\n         *\n         * 搜索部门\n         *\n         * 搜索部门，用户通过关键词查询可见的部门数据，部门可见性需要管理员在后台配置。\n         *\n         * 部门存在，但用户搜索不到并不一定是搜索有问题，可能是管理员在后台配置了权限控制，导致用户无法搜索到该部门。\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=unbind_department_chat&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/unbind_department_chat document }\n         *\n         * 部门群转为普通群\n         *\n         * 通过该接口将部门群转为普通群。\n         */\n        unbindDepartmentChat: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/unbind_department_chat`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/update document }\n         *\n         * 更新部门所有信息\n         *\n         * 该接口用于更新当前部门所有信息。\n         *\n         * - 调用该接口需要具有该部门与更新部门信息涉及的通讯录权限。;; - 没有填写的字段会被置为空值（order字段除外）。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 人员类型\n       */\n      employeeTypeEnum: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/create document }\n         *\n         * 新增人员类型\n         *\n         * 新增自定义人员类型\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/delete document }\n         *\n         * 删除人员类型\n         *\n         * 删除自定义人员类型\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums/:enum_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/list document }\n         *\n         * 查询人员类型\n         *\n         * 该接口用于获取员工的人员类型\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/update document }\n         *\n         * 更新人员类型\n         *\n         * 更新自定义人员类型\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums/:enum_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * functional_role\n       */\n      functionalRole: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=contact&resource=functional_role&version=v3 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=contact&resource=functional_role&version=v3 document }\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=contact&resource=functional_role&version=v3 document }\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * functional_role.member\n       */\n      functionalRoleMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=batch_create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=contact&resource=functional_role.member&version=v3 document }\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=batch_delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=contact&resource=functional_role.member&version=v3 document }\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/batch_delete`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=contact&resource=functional_role.member&version=v3 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/:member_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=functional_role.member&version=v3 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=scopes&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=scopes&project=contact&resource=functional_role.member&version=v3 document }\n         */\n        scopes: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/scopes`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户组\n       */\n      group: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/create document }\n         *\n         * 创建用户组\n         *\n         * 使用该接口创建用户组，请注意创建用户组时应用的通讯录权限范围需为“全部员工”，否则会创建失败，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/delete document }\n         *\n         * 删除用户组\n         *\n         * 通过该接口可删除企业中的用户组，请注意删除用户组时应用的通讯录权限范围需为“全部员工”，否则会删除失败，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/get document }\n         *\n         * 查询用户组\n         *\n         * 根据用户组 ID 查询某个用户组的基本信息，支持查询普通用户组和动态用户组。请确保应用的通讯录权限范围里包括该用户组或者是“全部员工”，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=member_belong&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/member_belong document }\n         *\n         * 查询用户所属用户组\n         *\n         * 通过该接口可查询该用户所属的用户组列表，可分别查询普通用户组和动态用户组。如果应用的通讯录权限范围是“全部员工”，则可获取该员工所属的全部用户组列表。如果应用的通讯录权限范围不是“全部员工”，则仅可获取通讯录权限范围内该员工所属的用户组。[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        memberBelong: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/member_belong`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/patch document }\n         *\n         * 更新用户组\n         *\n         * 使用该接口更新用户组信息，请注意更新用户组时应用的通讯录权限范围需为“全部员工”，否则会更新失败。[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        simplelistWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/simplelist`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=simplelist&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/simplelist document }\n         *\n         * 查询用户组列表\n         *\n         * 通过该接口可查询企业的用户组列表，可分别查询普通用户组或动态用户组。如果应用的通讯录权限范围是“全部员工”，则可获取企业全部用户组列表。如果应用的通讯录权限范围不是“全部员工”，则仅可获取通讯录权限范围内的用户组。[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        simplelist: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/simplelist`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户组成员\n       */\n      groupMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=add&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/add document }\n         *\n         * 添加用户组成员\n         *\n         * 向用户组中添加成员(目前成员仅支持用户，未来会支持部门)，如果应用的通讯录权限范围是“全部员工”，则可将任何成员添加到任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员添加到通讯录权限范围的用户组中，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        add: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/add`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=batch_add&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/batch_add document }\n         *\n         * 批量添加用户组成员\n         *\n         * 向普通用户组中批量添加成员(目前仅支持添加用户，暂不支持添加部门），如果应用的通讯录权限范围是“全部员工”，则可将任何成员添加到任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员添加到通讯录权限范围的用户组中，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         *\n         * 请求体中的member_type，目前仅支持user， 未来将支持department。\n         */\n        batchAdd: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/batch_add`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=batch_remove&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/batch_remove document }\n         *\n         * 批量移除用户组成员\n         *\n         * 从普通用户组中批量移除成员 (目前仅支持移除用户，暂不支持移除部门）。如果应用的通讯录权限范围是“全部员工”，则可将任何成员移出任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员从通讯录权限范围的用户组中移除， [点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         *\n         * 请求体中的member_type，目前仅支持user， 未来将支持department。\n         */\n        batchRemove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/batch_remove`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=remove&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/remove document }\n         *\n         * 移除用户组成员\n         *\n         * 从用户组中移除成员 (目前成员仅支持用户，未来会支持部门)，如果应用的通讯录权限范围是“全部员工”，则可将任何成员移出任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员从通讯录权限范围的用户组中移除， [点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        remove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/remove`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=simplelist&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/simplelist document }\n         *\n         * 查询用户组成员列表\n         *\n         * 通过该接口可查询某个用户组的成员列表（支持查询成员中的用户和部门）, 本接口支持普通用户组和动态用户组。如果应用的通讯录权限范围是“全部员工”，则可查询企业内任何用户组的成员列表。如果应用的通讯录权限范围不是“全部员工”，则仅可查询通讯录权限范围中的用户组的成员列表，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n         */\n        simplelist: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/simplelist`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * job_family\n       */\n      jobFamily: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=contact&resource=job_family&version=v3 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=contact&resource=job_family&version=v3 document }\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families/:job_family_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=contact&resource=job_family&version=v3 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families/:job_family_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=job_family&version=v3 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=contact&resource=job_family&version=v3 document }\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families/:job_family_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * job_level\n       */\n      jobLevel: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=contact&resource=job_level&version=v3 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=contact&resource=job_level&version=v3 document }\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels/:job_level_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=contact&resource=job_level&version=v3 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels/:job_level_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=job_level&version=v3 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=contact&resource=job_level&version=v3 document }\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels/:job_level_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 通讯录权限范围\n       */\n      scope: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/scopes`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=scope&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/scope/list document }\n         *\n         * 获取通讯录授权范围\n         *\n         * 该接口用于获取应用被授权可访问的通讯录范围，包括可访问的部门列表、用户列表和用户组列表。;授权范围为全员时，返回的部门列表为该企业所有的一级部门；否则返回的部门为管理员在设置授权范围时勾选的部门（不包含勾选部门的子部门）。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/scopes`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 单位\n       */\n      unit: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=bind_department&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/bind_department document }\n         *\n         * 建立部门与单位的绑定关系\n         *\n         * 通过该接口建立部门与单位的绑定关系。由于单位是旗舰版付费功能，企业需开通相关版本，否则会绑定失败，不同版本请参考[飞书版本对比](https://www.feishu.cn/service)\n         */\n        bindDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/bind_department`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/create document }\n         *\n         * 创建单位\n         *\n         * 该接口用于创建单位。注意：单位功能属于旗舰版付费功能，企业需开通对应版本才可以创建单位，不同版本请参考[飞书版本对比](https://www.feishu.cn/service)。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/delete document }\n         *\n         * 删除单位\n         *\n         * 使用该接口删除单位，需要有更新单位的权限。注意：如果单位的单位类型被其它的业务使用，不允许删除。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/:unit_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/get document }\n         *\n         * 获取单位信息\n         *\n         * 该接口用于获取单位信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/:unit_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/list document }\n         *\n         * 批量获取单位列表\n         *\n         * 通过该接口获取企业的单位列表，需获取单位的权限\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=list_department&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/list_department document }\n         *\n         * 获取单位绑定的部门列表\n         *\n         * 通过该接口获取单位绑定的部门列表，需具有获取单位的权限\n         */\n        listDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/list_department`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/patch document }\n         *\n         * 修改单位信息\n         *\n         * 调用该接口，需要有更新单位的权限。注意：单位功能属于旗舰版付费功能，企业需开通对应版本才可以修改单位\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/:unit_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=unbind_department&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/unbind_department document }\n         *\n         * 解除部门与单位的绑定关系\n         *\n         * 通过该接口解除部门与单位的绑定关系，需更新单位的权限，需对应部门的通讯录权限。由于单位是旗舰版付费功能，企业需开通相关功能，否则会解绑失败\n         */\n        unbindDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/unbind_department`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户\n       */\n      user: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=batch_get_id&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/batch_get_id document }\n         *\n         * 通过手机号或邮箱获取用户 ID\n         *\n         * 通过该接口，可使用手机号/邮箱获取用户的 ID 信息，具体获取支持的 ID 类型包括 open_id、user_id、union_id，可通过查询参数指定。\n         *\n         * 如果查询的手机号、邮箱不存在，或者无权限查看对应的用户，则返回的用户ID列表为空。\n         */\n        batchGetId: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/batch_get_id`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/create document }\n         *\n         * 创建用户\n         *\n         * 使用该接口向通讯录创建一个用户，可以理解为员工入职。创建用户后只返回有数据权限的数据。具体的数据权限的与字段的对应关系请参照[应用权限](https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN)。\n         *\n         * - 新增用户的所有部门必须都在当前应用的通讯录授权范围内才允许新增用户，如果想要在根部门下新增用户，必须要有全员权限。;- 应用商店应用无权限调用此接口。;- 创建用户后，会给用户发送邀请短信/邮件，用户在操作同意后才可访问团队。;- 返回数据中不返回手机号，如果需要请重新查询用户信息获取手机号。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/delete document }\n         *\n         * 删除用户\n         *\n         * 该接口用于从通讯录删除一个用户信息，可以理解为员工离职。\n         *\n         * - 若用户归属部门A、部门B，应用的通讯录权限范围必须包括部门A和部门B才可以删除用户。;- 用户可以在删除员工时设置删除员工数据（如文档）的接收者，如果不设置则由其leader接收，如果该员工没有leader，则会将该员工的数据删除。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        findByDepartmentWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/find_by_department`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=find_by_department&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/find_by_department document }\n         *\n         * 获取部门直属用户列表\n         *\n         * 基于部门ID获取部门直属用户列表。\n         *\n         * - 部门ID 必填，根部门的部门ID为0。;- 使用 `user_access_token` 情况下根据个人组织架构的通讯录可见范围进行权限过滤，返回个人组织架构通讯录范围（[登录企业管理后台进行权限配置](https://www.feishu.cn/admin/security/permission/visibility)）内可见的用户数据。;- 使用`tenant_access_token`会根据应用通讯录的范围进行权限过滤。 如果请求的部门ID为0，则校验应用是否具有全员通讯录权限； 如果是非0的部门ID，则会验证应用是否具有该部门的通讯录权限。 无权限返回无权限错误码，有权限则返回对应部门下的直接用户列表。\n         */\n        findByDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/find_by_department`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/get document }\n         *\n         * 获取单个用户信息\n         *\n         * 该接口用于获取通讯录中单个用户的信息。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/contact/v3/users`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=list&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=user&version=v3 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/patch document }\n         *\n         * 修改用户部分信息\n         *\n         * 该接口用于更新通讯录中用户的字段，未传递的参数不会更新。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=resurrect&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/resurrect document }\n         *\n         * 恢复已删除用户\n         *\n         * 该接口用于恢复已删除用户（已离职的成员），仅自建应用可申请，应用商店应用无权调用接口。\n         *\n         * - 仅支持恢复离职 30 天内的成员。恢复后，部分用户数据仍不可恢复，请谨慎调用。;- 待恢复成员的用户 ID 不能被企业内其他成员使用。如有重复，请先离职对应的成员，否则接口会报错。;- 待恢复成员的手机号和邮箱不能被企业内其他成员使用。如有重复，请先修改对应成员的信息，否则接口会报错。\n         */\n        resurrect: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id/resurrect`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/update document }\n         *\n         * 更新用户所有信息\n         *\n         * 该接口用于更新通讯录中用户的字段。\n         *\n         * 应用需要拥有待更新用户的通讯录授权，如果涉及到用户部门变更，还需要同时拥有变更前、后所有新部门的通讯录授权。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.content_check = {};\n    /**\n         \n         */\n    this.contract = {};\n    /**\n     * CoreHR\n     */\n    this.corehr = {\n      /**\n       * 休假管理\n       */\n      leave: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=corehr&resource=leave&apiName=leave_request_history&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/leave/leave_request_history document }\n         *\n         * 批量查询员工请假记录\n         *\n         * 批量获取员工的请假记录数据\n         */\n        leaveRequestHistory: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/corehr/v1/leaves/leave_request_history`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.docs_tool = {};\n    /**\n     * 云文档-文档\n     */\n    this.docx = {\n      /**\n       * 块\n       */\n      documentBlock: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=batch_update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/batch_update document }\n         *\n         * 批量更新块\n         *\n         * 批量更新块的富文本内容。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 3 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnMiwAKCiE6oQEkPyhvmmQEe)，了解相关规则及约束。\n         */\n        batchUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/batch_update`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/get document }\n         *\n         * 获取块\n         *\n         * 获取指定块的富文本内容。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 5 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnamKaccZKqIMopnREJCZUMe#doxcnWEMWYAg2YMkEq0SZXHzaih)，了解相关规则及约束。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/list document }\n         *\n         * 获取文档所有块\n         *\n         * 获取文档所有块的富文本内容并分页返回。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 5 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnamKaccZKqIMopnREJCZUMe#doxcn6AkCE2AUUm2WwxID7lS7Xc)，了解相关规则及约束。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/patch document }\n         *\n         * 更新块\n         *\n         * 更新指定的块。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 3 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnEeyS0I8MMqoieIMpK7jm8g)，了解相关规则及约束。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * document.block.children\n       */\n      documentBlockChildren: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block.children&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block-children/batch_delete document }\n         *\n         * 删除块\n         *\n         * 指定需要操作的块，删除其指定范围的子块。如果操作成功，接口将返回应用删除操作后的文档版本号。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 3 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcngCsscGk0WacO258mYDgM6b)，了解相关规则及约束。\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children/batch_delete`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block.children&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block-children/create document }\n         *\n         * 创建块\n         *\n         * 指定需要操作的块，为其创建一批子块，并插入到指定位置。如果操作成功，接口将返回新创建子块的富文本内容。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 3 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnm0ooUe0s20GwwVB3a05rtb)，了解相关规则及约束。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block.children&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block-children/get document }\n         *\n         * 获取所有子块\n         *\n         * 给定一个指定版本的文档，并指定需要操作的块，分页遍历其所有子块富文本内容 。如果不指定版本，则会默认查询最新版本。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 5 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnE2UK2yY0gEGK8nBMPtB0vd)，了解相关规则及约束。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 文档\n       */\n      document: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document/create document }\n         *\n         * 创建文档\n         *\n         * 创建新版文档，文档标题和目录可选。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 3 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnyoyCgwS8ywWwMtQr9yjZ2f)，了解相关规则及约束。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document/get document }\n         *\n         * 获取文档基本信息\n         *\n         * 获取文档最新版本号、标题等\n         *\n         * 频率限制：单个应用调用频率上限为每秒 5 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnWKAE4aSaIU4GcdLInSaVde)，了解相关规则及约束。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document&apiName=raw_content&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document/raw_content document }\n         *\n         * 获取文档纯文本内容\n         *\n         * 获取文档的纯文本内容。\n         *\n         * 频率限制：单个应用调用频率上限为每秒 5 次。\n         *\n         * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnQeqI4wiKIMis6GNvCOBuqg)，了解相关规则及约束。\n         */\n        rawContent: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/raw_content`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 云文档-文件管理\n     */\n    this.drive = {\n      /**\n       * 导出\n       */\n      exportTask: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=export_task&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/create document }\n         *\n         * 创建导出任务\n         *\n         * 创建导出任务，将云文件导出为指定格式的本地文件。该接口为异步接口，需要通过轮询 [查询导出任务结果](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/get) 接口获取任务结果。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/export_tasks`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=export_task&apiName=download&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/download document }\n         *\n         * 下载导出文件\n         *\n         * 根据任务导出结果的token，下载导出文件\n         */\n        download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/export_tasks/file/:file_token/download`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=export_task&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/get document }\n         *\n         * 查询导出任务结果\n         *\n         * 根据[创建导出任务](/ssl::ttdoc//uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/create)的ticket查询导出任务的结果，前提条件需要先调用创建导出任务接口。;;通过该接口获取到下载文件的 token 后调用[下载导出文件接口](/ssl::ttdoc//uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/download)将文件进行下载\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/export_tasks/:ticket`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 评论\n       */\n      fileComment: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=batch_query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/batch_query document }\n         *\n         * 批量获取评论\n         *\n         * 该接口用于根据评论 ID 列表批量获取评论。\n         */\n        batchQuery: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/batch_query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/create document }\n         *\n         * 添加评论\n         *\n         * 往云文档添加一条全局评论。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/get document }\n         *\n         * 获取评论\n         *\n         * 获取云文档中的某条评论。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/list document }\n         *\n         * 分页获取文档评论\n         *\n         * 该接口用于根据文档 token 分页获取文档评论。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/patch document }\n         *\n         * 解决/恢复 评论\n         *\n         * 解决或恢复云文档中的评论。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 评论\n       */\n      fileCommentReply: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment.reply&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment-reply/delete document }\n         *\n         * 删除回复\n         *\n         * 删除云文档中的某条回复。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id/replies/:reply_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment.reply&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment-reply/update document }\n         *\n         * 更新回复\n         *\n         * 更新云文档中的某条回复。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id/replies/:reply_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 异步任务状态\n       */\n      file: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=copy&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/copy document }\n         *\n         * 复制文件\n         *\n         * 将文件复制到用户云空间的其他文件夹中。不支持复制文件夹。;;如果目标文件夹是我的空间，则复制的文件会在「**我的空间**」的「**归我所有**」列表里。\n         *\n         * 该接口不支持并发拷贝多个文件，且调用频率上限为 5QPS 且 10000次/天\n         */\n        copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/copy`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=create_folder&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/create_folder document }\n         *\n         * 新建文件夹\n         *\n         * 在用户云空间的指定文件夹中创建一个新的空文件夹。\n         *\n         * 该接口不支持并发创建，且调用频率上限为 5QPS 以及 10000次/天\n         */\n        createFolder: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/create_folder`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=create_shortcut&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create_shortcut&project=drive&resource=file&version=v1 document }\n         */\n        createShortcut: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/create_shortcut`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/delete document }\n         *\n         * 删除文件\n         *\n         * 删除用户在云空间内的文件或者文件夹。文件或者文件夹被删除后，会进入用户回收站里。\n         *\n         * 该接口不支持并发调用，且调用频率上限为5QPS。删除文件夹会异步执行并返回一个task_id，可以使用[task_check](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/task_check)接口查询任务执行状态。\n         *\n         * 要删除文件需要确保应用具有下述两种权限之一：;1. 该应用是文件所有者并且具有该文件所在父文件夹的编辑权限。;2. 该应用并非文件所有者，但是是该文件所在父文件夹的所有者或者拥有该父文件夹的所有权限（full access）。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=download&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/download document }\n         *\n         * 下载文件\n         *\n         * 使用该接口可以下载在云空间目录下的文件（不含飞书文档/表格/思维导图等在线文档）。支持range下载。\n         *\n         * 该接口支持调用频率上限为5QPS\n         */\n        download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/download`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/drive/v1/files`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/list document }\n         *\n         * 获取文件夹下的清单\n         *\n         * 获取用户云空间中指定文件夹下的文件清单。清单类型包括文件、各种在线文档（文档、电子表格、多维表格、思维笔记）、文件夹和快捷方式。该接口支持分页，但是不会递归的获取子文件夹的清单。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=move&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/move document }\n         *\n         * 移动文件\n         *\n         * 将文件或者文件夹移动到用户云空间的其他位置。\n         */\n        move: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/move`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=subscribe&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/subscribe document }\n         *\n         * 订阅云文档事件\n         *\n         * 该接口仅支持**文档拥有者**订阅自己文档的通知事件，可订阅的文档类型为**旧版文档**、**新版文档**、**电子表格**和**多维表格**。在调用该接口之前请确保正确[配置事件回调网址和订阅事件类型](https://open.feishu.cn/document/ukTMukTMukTM/uUTNz4SN1MjL1UzM#2eb3504a)(暂不支持单独订阅文档维度的某类事件)，事件类型参考[事件列表](https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-list)。\n         */\n        subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=task_check&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/task_check document }\n         *\n         * 查询异步任务状态\n         *\n         * 查询删除文件夹等异步任务的状态信息。\n         */\n        taskCheck: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/task_check`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_all&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_all document }\n         *\n         * 上传文件\n         *\n         * 向云空间指定目录下上传一个小文件。\n         *\n         * 该接口支持调用频率上限为5QPS\n         *\n         * 请不要使用这个接口上传大于20MB的文件，如果有这个需求可以尝试使用[分片上传接口](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/multipart-upload-file-/introduction)。\n         */\n        uploadAll: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_all`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_finish&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_finish document }\n         *\n         * 分片上传文件（完成上传）\n         *\n         * 触发完成上传。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         */\n        uploadFinish: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_finish`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_part&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_part document }\n         *\n         * 分片上传文件（上传分片）\n         *\n         * 上传对应的文件块。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         */\n        uploadPart: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_part`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_prepare&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_prepare document }\n         *\n         * 分片上传文件（预上传）\n         *\n         * 发送初始化请求获取上传事务ID和分块策略，目前是以4MB大小进行定长分片。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         *\n         * 你在24小时内可保存上传事务ID和上传进度，以便可以恢复上传\n         */\n        uploadPrepare: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_prepare`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * file.statistics\n       */\n      fileStatistics: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.statistics&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-statistics/get document }\n         *\n         * 获取文件统计信息\n         *\n         * 此接口用于获取文件统计信息，包括文档阅读人数、次数和点赞数。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/statistics`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 订阅\n       */\n      fileSubscription: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.subscription&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-subscription/create document }\n         *\n         * 创建订阅\n         *\n         * 订阅文档中的变更事件，当前支持文档评论订阅，订阅后文档评论更新会有“云文档助手”推送给订阅的用户\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscriptions`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.subscription&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-subscription/get document }\n         *\n         * 获取订阅状态\n         *\n         * 根据订阅ID获取该订阅的状态\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscriptions/:subscription_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.subscription&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-subscription/patch document }\n         *\n         * 更新订阅状态\n         *\n         * 根据订阅ID更新订阅状态\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscriptions/:subscription_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 文档版本\n       */\n      fileVersion: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/create document }\n         *\n         * 创建文档版本\n         *\n         * 创建文档版本。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/delete document }\n         *\n         * 删除文档版本\n         *\n         * 删除文档版本。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions/:version_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions/:version_id`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/get document }\n         *\n         * 获取文档版本\n         *\n         * 获取文档版本。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions/:version_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/list document }\n         *\n         * 获取文档版本列表\n         *\n         * 获取文档所有版本。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导入\n       */\n      importTask: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=import_task&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/import_task/create document }\n         *\n         * 创建导入任务\n         *\n         * 创建导入任务。支持导入为 doc、docx、sheet、bitable，参考[导入用户指南](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/import_task/import-user-guide)\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/import_tasks`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=import_task&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/import_task/get document }\n         *\n         * 查询导入结果\n         *\n         * 根据创建导入任务返回的 ticket 查询导入结果。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/import_tasks/:ticket`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 素材\n       */\n      media: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=batch_get_tmp_download_url&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/batch_get_tmp_download_url document }\n         *\n         * 获取素材临时下载链接\n         *\n         * 通过file_token获取素材临时下载链接，链接时效性是24小时，过期失效。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         */\n        batchGetTmpDownloadUrl: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/batch_get_tmp_download_url`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=download&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/download document }\n         *\n         * 下载素材\n         *\n         * 使用该接口可以下载素材。素材表示在各种创作容器里的文件，如Doc文档内的图片，文件均属于素材。支持range下载。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         */\n        download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/:file_token/download`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_all&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_all document }\n         *\n         * 上传素材\n         *\n         * 将文件、图片、视频等素材文件上传到指定云文档中。素材文件在云空间中不会显示，只会显示在对应云文档中。\n         *\n         * 该接口支持调用频率上限为5QPS\n         *\n         * 请不要使用这个接口上传大于20MB的文件，如果有这个需求可以尝试使用[分片上传接口](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/multipart-upload-media/introduction)。\n         */\n        uploadAll: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_all`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_finish&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_finish document }\n         *\n         * 分片上传素材（完成上传）\n         *\n         * 触发完成上传。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         */\n        uploadFinish: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_finish`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_part&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_part document }\n         *\n         * 分片上传素材（上传分片）\n         *\n         * 上传对应的文件块。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         */\n        uploadPart: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_part`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_prepare&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_prepare document }\n         *\n         * 分片上传素材（预上传）\n         *\n         * 发送初始化请求获取上传事务ID和分块策略，目前是以4MB大小进行定长分片。\n         *\n         * 该接口不支持太高的并发，且调用频率上限为5QPS\n         *\n         * 您在24小时内可保存上传事务ID和上传进度，以便可以恢复上传\n         */\n        uploadPrepare: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_prepare`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * meta\n       */\n      meta: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=meta&apiName=batch_query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/meta/batch_query document }\n         *\n         * 获取文档元数据\n         *\n         * 该接口用于根据 token 获取各类文件的元数据\n         */\n        batchQuery: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/metas/batch_query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 成员\n       */\n      permissionMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=auth&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=auth&project=drive&resource=permission.member&version=v1 document }\n         */\n        auth: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/auth`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/create document }\n         *\n         * 增加协作者权限\n         *\n         * 该接口用于根据 filetoken 给用户增加文档的权限。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/delete document }\n         *\n         * 移除协作者权限\n         *\n         * 该接口用于根据 filetoken 移除文档协作者的权限。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/:member_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/list document }\n         *\n         * 获取协作者列表\n         *\n         * 该接口用于根据 filetoken 查询协作者\n         *\n         * - 你能获取到协作者列表的前提是你对该文档有分享权限;- 目前仅支持人、群、组织架构三种类型的协作者\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=transfer_owner&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=transfer_owner&project=drive&resource=permission.member&version=v1 document }\n         */\n        transferOwner: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/transfer_owner`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/update document }\n         *\n         * 更新协作者权限\n         *\n         * 该接口用于根据 filetoken 更新文档协作者的权限。\n         *\n         * 该接口要求文档协作者已存在，如还未对文档协作者授权请先调用[「增加权限」 ](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/create)接口进行授权。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/:member_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 设置\n       */\n      permissionPublic: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-public/get document }\n         *\n         * 获取云文档权限设置\n         *\n         * 该接口用于根据 filetoken 获取云文档的权限设置。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-public/patch document }\n         *\n         * 更新云文档权限设置\n         *\n         * 该接口用于根据 filetoken 更新云文档的权限设置。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * permission.public.password\n       */\n      permissionPublicPassword: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public.password&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=drive&resource=permission.public.password&version=v1 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public/password`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public.password&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=drive&resource=permission.public.password&version=v1 document }\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public/password`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public.password&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=drive&resource=permission.public.password&version=v1 document }\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public/password`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.edu = {};\n    /**\n     * 智能人事\n     */\n    this.ehr = {\n      /**\n       * 飞书人事（标准版)\n       */\n      attachment: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=ehr&resource=attachment&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/ehr/ehr-v1/attachment/get document }\n         *\n         * 下载附件\n         *\n         * 根据文件 token 下载文件。;;调用 「批量获取员工花名册信息」接口的返回值中，「文件」类型的字段 id，即是文件 token\n         *\n         * ![image.png](//sf1-ttcdn-tos.pstatp.com/obj/open-platform-opendoc/bed391d2a8ce6ed2d5985ea69bf92850_9GY1mnuDXP.png)\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/ehr/v1/attachments/:token`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        })\n      },\n      /**\n       * 飞书人事（标准版)\n       */\n      employee: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/ehr/v1/employees`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=ehr&resource=employee&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/ehr/ehr-v1/employee/list document }\n         *\n         * 批量获取员工花名册信息\n         *\n         * 根据员工飞书用户 ID / 员工状态 / 雇员类型等搜索条件 ，批量获取员工花名册字段信息。字段包括「系统标准字段 / system_fields」和「自定义字段 / custom_fields」\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/ehr/v1/employees`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.elearning = {};\n    /**\n     * 事件订阅\n     */\n    this.event = {\n      /**\n       * 事件订阅\n       */\n      outboundIp: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/event/v1/outbound_ip`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=event&resource=outbound_ip&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-v1/outbound_ip/list document }\n         *\n         * 获取事件出口 IP\n         *\n         * 飞书开放平台向应用配置的回调地址推送事件时，是通过特定的 IP 发送出去的，应用可以通过本接口获取所有相关的 IP 地址。\n         *\n         * IP 地址有变更可能，建议应用每隔 6 小时定时拉取最新的 IP 地址，以免由于企业防火墙设置，导致应用无法及时接收到飞书开放平台推送的事件。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/event/v1/outbound_ip`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.exam = {};\n    /**\n         \n         */\n    this.face_detection = {};\n    /**\n         \n         */\n    this.feelgood = {};\n    /**\n         \n         */\n    this.gray_test_open_sg = {\n      /**\n       * moto\n       */\n      moto: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=gray_test_open_sg&resource=moto&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=gray_test_open_sg&resource=moto&version=v1 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=gray_test_open_sg&resource=moto&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=gray_test_open_sg&resource=moto&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos/:moto_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=gray_test_open_sg&resource=moto&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=gray_test_open_sg&resource=moto&version=v1 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 服务台\n     */\n    this.helpdesk = {\n      /**\n       * 客服\n       */\n      agent: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent&apiName=agent_email&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent/agent_email document }\n         *\n         * 获取客服邮箱地址\n         *\n         * 该接口用于获取客服邮箱地址\n         */\n        agentEmail: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_emails`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent/patch document }\n         *\n         * 更新客服信息\n         *\n         * 更新客服状态等信息\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 客服工作日程\n       */\n      agentSchedules: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent.schedules&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent-schedules/delete document }\n         *\n         * 删除客服\n         *\n         * 该接口用于删除客服\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id/schedules`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent.schedules&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent-schedules/get document }\n         *\n         * 获取客服工作日程;\n         *\n         * 该接口用于获取客服信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id/schedules`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent.schedules&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent-schedules/patch document }\n         *\n         * 更新客服日程\n         *\n         * 该接口用于更新客服的日程\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id/schedules`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * agent_schedule\n       */\n      agentSchedule: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_schedule&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_schedule/create document }\n         *\n         * 创建客服\n         *\n         * 该接口用于创建客服\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_schedules`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_schedule&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_schedule/list document }\n         *\n         * 获取全部客服工作日程\n         *\n         * 该接口用于获取所有客服信息\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_schedules`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 客服技能\n       */\n      agentSkill: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/create document }\n         *\n         * 创建客服技能\n         *\n         * 该接口用于创建客服技能\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/delete document }\n         *\n         * 删除客服技能\n         *\n         * 该接口用于删除客服技能\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills/:agent_skill_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/get document }\n         *\n         * 获取客服技能\n         *\n         * 该接口用于获取客服技能\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills/:agent_skill_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/list document }\n         *\n         * 获取全部客服技能\n         *\n         * 获取全部客服技能\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/patch document }\n         *\n         * 更新客服技能\n         *\n         * 该接口用于更新客服技能\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills/:agent_skill_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 客服技能规则\n       */\n      agentSkillRule: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill_rule&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill_rule/list document }\n         *\n         * 获取客服技能列表\n         *\n         * 该接口用于获取全部客服技能。仅支持自建应用。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skill_rules`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 机器人消息\n       */\n      botMessage: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=bot.message&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/bot-message/create document }\n         *\n         * 服务台机器人发送消息\n         *\n         * 通过服务台机器人给指定用户的服务台专属群或私聊发送消息，支持文本、富文本、卡片、图片。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/message`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 知识库分类\n       */\n      category: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/create document }\n         *\n         * 创建知识库分类\n         *\n         * 该接口用于创建知识库分类。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/delete document }\n         *\n         * 删除知识库分类详情\n         *\n         * 该接口用于删除知识库分类详情。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories/:id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/get document }\n         *\n         * 获取知识库分类\n         *\n         * 该接口用于获取知识库分类。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories/:id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/list document }\n         *\n         * 获取全部知识库分类 - meta\n         *\n         * 该接口用于获取服务台知识库所有分类\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/patch document }\n         *\n         * 更新知识库分类详情\n         *\n         * 该接口用于更新知识库分类详情。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories/:id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 事件订阅\n       */\n      event: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=event&apiName=subscribe&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/event/subscribe document }\n         *\n         * 订阅服务台事件\n         *\n         * 用于订阅服务台事件\n         */\n        subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/events/subscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=event&apiName=unsubscribe&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/event/unsubscribe document }\n         *\n         * 取消订阅服务台事件\n         *\n         * 用于取消订阅服务台事件\n         */\n        unsubscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/events/unsubscribe`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 知识库\n       */\n      faq: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/create document }\n         *\n         * 创建知识库\n         *\n         * 该接口用于创建知识库。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/delete document }\n         *\n         * 删除知识库\n         *\n         * 该接口用于删除知识库。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=faq_image&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/faq_image document }\n         *\n         * 获取知识库图像\n         *\n         * 该接口用于获取知识库图像。\n         */\n        faqImage: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id/image/:image_key`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/get document }\n         *\n         * 获取知识库详情\n         *\n         * 该接口用于获取服务台知识库详情。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/list document }\n         *\n         * 获取全部知识库详情\n         *\n         * 该接口用于获取服务台知识库详情。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/patch document }\n         *\n         * 修改知识库\n         *\n         * 该接口用于修改知识库。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/search`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=search&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/search document }\n         *\n         * 搜索知识库\n         *\n         * 该接口用于搜索服务台知识库。\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/search`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 推送中心\n       */\n      notification: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=cancel_approve&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/cancel_approve document }\n         *\n         * 取消审核\n         *\n         * 提交审核后，如果需要取消审核，则调用此接口\n         */\n        cancelApprove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/cancel_approve`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=cancel_send&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/cancel_send document }\n         *\n         * 取消推送\n         *\n         * 取消推送接口，审核通过后待调度可以调用，发送过程中可以调用（会撤回已发送的消息），发送完成后可以需要推送（会撤回所有已发送的消息）\n         */\n        cancelSend: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/cancel_send`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/create document }\n         *\n         * 创建推送\n         *\n         * 调用接口创建推送，创建成功后为草稿状态\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=execute_send&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/execute_send document }\n         *\n         * 执行推送\n         *\n         * 审核通过后调用此接口设置推送时间，等待调度系统调度，发送消息\n         */\n        executeSend: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/execute_send`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/get document }\n         *\n         * 查询推送\n         *\n         * 查询推送详情\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/patch document }\n         *\n         * 更新推送\n         *\n         * 更新推送信息，只有在草稿状态下才可以调用此接口进行更新\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=preview&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/preview document }\n         *\n         * 预览推送内容\n         *\n         * 在正式执行推送之前是可以调用此接口预览设置的推送内容\n         */\n        preview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/preview`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=submit_approve&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/submit_approve document }\n         *\n         * 提交审核\n         *\n         * 正常情况下调用创建推送接口后，就可以调用提交审核接口，如果创建人是服务台owner则会自动审核通过，否则会通知服务台owner审核此推送信息\n         */\n        submitApprove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/submit_approve`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 工单\n       */\n      ticket: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=answer_user_query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/answer_user_query document }\n         *\n         * 回复用户提问结果至工单\n         *\n         * 该接口用于回复用户提问结果至工单，需要工单仍处于进行中且未接入人工状态。仅支持自建应用。\n         */\n        answerUserQuery: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id/answer_user_query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=customized_fields&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/customized_fields document }\n         *\n         * 获取服务台自定义字段详情\n         *\n         * 该接口用于获取服务台自定义字段详情。\n         */\n        customizedFields: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/customized_fields`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/get document }\n         *\n         * 获取工单详情\n         *\n         * 该接口用于获取单个服务台工单详情。仅支持自建应用。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/list document }\n         *\n         * 获取全部工单详情\n         *\n         * 该接口用于获取全部工单详情。仅支持自建应用。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=start_service&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/start_service document }\n         *\n         * 创建服务台对话\n         *\n         * 该接口用于创建服务台对话。\n         */\n        startService: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/start_service`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=ticket_image&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/ticket_image document }\n         *\n         * 获取服务台工单内消息图像\n         *\n         * 该接口用于获取服务台工单消息图象。仅支持自建应用。\n         */\n        ticketImage: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_images`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/update document }\n         *\n         * 更新工单详情\n         *\n         * 该接口用于更新服务台工单详情。只会更新数据，不会触发相关操作。如修改工单状态到关单，不会关闭聊天页面。仅支持自建应用。要更新的工单字段必须至少输入一项。\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 事件\n       */\n      ticketMessage: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket.message&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket-message/create document }\n         *\n         * 工单发送消息\n         *\n         * 该接口用于工单发送消息。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id/messages`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket.message&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket-message/list document }\n         *\n         * 获取服务台工单消息详情\n         *\n         * 该接口用于获取服务台工单消息详情。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id/messages`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 工单自定义字段\n       */\n      ticketCustomizedField: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/create document }\n         *\n         * 创建工单自定义字段\n         *\n         * 该接口用于创建自定义字段\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/delete document }\n         *\n         * 删除工单自定义字段\n         *\n         * 该接口用于删除工单自定义字段。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/get document }\n         *\n         * 获取工单自定义字段\n         *\n         * 该接口用于获取工单自定义字段详情。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/list document }\n         *\n         * 获取全部工单自定义字段\n         *\n         * 该接口用于获取全部工单自定义字段。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/patch document }\n         *\n         * 更新工单自定义字段\n         *\n         * 该接口用于更新自定义字段。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 招聘\n     */\n    this.hire = {\n      /**\n       * 入职\n       */\n      application: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/create document }\n         *\n         * 创建投递\n         *\n         * 根据人才 ID 和职位 ID 创建投递\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/get document }\n         *\n         * 获取投递信息\n         *\n         * 根据投递 ID 获取单个投递信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/list document }\n         *\n         * 获取投递列表\n         *\n         * 根据限定条件获取投递列表信息\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=offer&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/offer document }\n         *\n         * 获取 Offer 信息\n         *\n         * 根据投递 ID 获取 Offer 信息\n         */\n        offer: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/offer`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=terminate&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/terminate document }\n         *\n         * 终止投递\n         *\n         * 根据投递 ID 修改投递状态为「已终止」\n         */\n        terminate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/terminate`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=transfer_onboard&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/transfer_onboard document }\n         *\n         * 操作候选人入职\n         *\n         * 根据投递 ID 操作候选人入职并创建员工。投递须处于「待入职」阶段，可通过「转移阶段」接口变更投递状态\n         */\n        transferOnboard: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/transfer_onboard`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * application.interview\n       */\n      applicationInterview: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application.interview&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=hire&resource=application.interview&version=v1 document }\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/interviews`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 附件\n       */\n      attachment: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=attachment&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/attachment/get document }\n         *\n         * 获取附件信息\n         *\n         * 获取招聘系统中附件的元信息，比如文件名、创建时间、文件url等\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/attachments/:attachment_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=attachment&apiName=preview&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/attachment/preview document }\n         *\n         * 获取附件预览信息\n         *\n         * 根据附件 ID 获取附件预览信息\n         */\n        preview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/attachments/:attachment_id/preview`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导入 e-HR\n       */\n      ehrImportTask: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=ehr_import_task&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/ehr_import_task/patch document }\n         *\n         * 更新 e-HR 导入任务结果\n         *\n         * 在处理完导入 e-HR 事件后，可调用该接口，更新  e-HR 导入任务结果\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/ehr_import_tasks/:ehr_import_task_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 入职\n       */\n      employee: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=employee&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/employee/get document }\n         *\n         * 通过员工 ID 获取入职信息\n         *\n         * 通过员工 ID 获取入职信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/employees/:employee_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=employee&apiName=get_by_application&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/employee/get_by_application document }\n         *\n         * 通过投递 ID 获取入职信息\n         *\n         * 通过投递 ID 获取入职信息\n         */\n        getByApplication: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/employees/get_by_application`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=employee&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/employee/patch document }\n         *\n         * 更新入职状态\n         *\n         * 根据员工 ID 更新员工转正、离职状态\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/employees/:employee_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 评估（灰度租户可见）\n       */\n      evaluation: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/hire/v1/evaluations`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=evaluation&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/evaluation/list document }\n         *\n         * 获取简历评估信息\n         *\n         * 获取简历评估信息\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/evaluations`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导入外部系统信息（灰度租户可见）\n       */\n      externalApplication: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_application&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_application/create document }\n         *\n         * 创建外部投递\n         *\n         * 导入来自其他系统的投递信息，创建为外部投递\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_applications`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导入外部系统信息（灰度租户可见）\n       */\n      externalBackgroundCheck: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_background_check&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_background_check/create document }\n         *\n         * 创建外部背调\n         *\n         * 导入来自其他系统的背调信息，创建为外部背调\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_background_checks`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导入外部系统信息（灰度租户可见）\n       */\n      externalInterview: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_interview&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_interview/create document }\n         *\n         * 创建外部面试\n         *\n         * 导入来自其他系统的面试信息，创建为外部面试\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_interviews`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导入外部系统信息（灰度租户可见）\n       */\n      externalInterviewAssessment: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_interview_assessment&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_interview_assessment/create document }\n         *\n         * 创建外部面评\n         *\n         * 导入来自其他系统的面评信息，创建为外部面评\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_interview_assessments`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 职位\n       */\n      job: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=combined_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/combined_create document }\n         *\n         * 新建职位\n         *\n         * 新建职位，字段的是否必填，以系统中的「职位字段管理」中的设置为准。\n         */\n        combinedCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/combined_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=combined_update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/combined_update document }\n         *\n         * 更新职位\n         *\n         * 更新职位信息，该接口为全量更新，若字段没有返回值，则原有值将会被清空。字段的是否必填，将以系统中的「职位字段管理」中的设置为准。\n         */\n        combinedUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/combined_update`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=config&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/config document }\n         *\n         * 获取职位设置\n         *\n         * 获取职位设置\n         */\n        config: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/config`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/get document }\n         *\n         * 获取职位信息\n         *\n         * 根据职位 ID 获取职位信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=update_config&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/update_config document }\n         *\n         * 更新职位设置\n         *\n         * 更新职位设置，包括面试评价表、Offer 申请表等。接口将按照所选择的「更新选项」进行设置参数校验和更新。\n         */\n        updateConfig: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/update_config`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * job.manager\n       */\n      jobManager: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job.manager&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job-manager/get document }\n         *\n         * 获取职位上的招聘人员信息\n         *\n         * 根据职位 ID 获取职位上的招聘人员信息，如招聘负责人、用人经理\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/managers/:manager_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 流程\n       */\n      jobProcess: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job_process&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job_process/list document }\n         *\n         * 获取招聘流程信息\n         *\n         * 获取全部招聘流程信息\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/job_processes`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 备注\n       */\n      note: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/create document }\n         *\n         * 创建备注\n         *\n         * 创建备注信息\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/get document }\n         *\n         * 获取备注\n         *\n         * 根据备注 ID 获取备注信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes/:note_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/list document }\n         *\n         * 获取备注列表\n         *\n         * 获取备注列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/patch document }\n         *\n         * 更新备注\n         *\n         * 根据备注 ID 更新备注信息\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes/:note_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * Offer\n       */\n      offer: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/create document }\n         *\n         * 创建 Offer\n         *\n         * 创建 Offer 时，需传入本文档中标注为必传的参数，其余参数是否必传参考「获取 Offer 申请表模板信息」的参数定义\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/get document }\n         *\n         * 获取 Offer 详情\n         *\n         * 根据 Offer ID 获取 Offer 详细信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=intern_offer_status&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/intern_offer_status document }\n         *\n         * 更新实习 Offer 入/离职状态\n         *\n         * 对「实习待入职」状态的实习 Offer 确认入职、放弃入职，或对「实习已入职」状态的实习 Offer 操作离职\n         */\n        internOfferStatus: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id/intern_offer_status`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/list document }\n         *\n         * 获取 Offer 列表\n         *\n         * 根据人才 ID 获取 Offer 列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=offer_status&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=offer_status&project=hire&resource=offer&version=v1 document }\n         */\n        offerStatus: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id/offer_status`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/update document }\n         *\n         * 更新 Offer 信息\n         *\n         * 1. 更新 Offer 时，需传入本文档中标注为必传的参数，其余参数是否必传参考「获取 Offer 申请表模板信息」的参数定义；;2. 对系统中已存在的 offer 进行更新的，若更新 offer 中含有「修改需审批」的字段，更新后原 Offer 的审批会自动撤回，需要重新发起审批\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * offer_schema\n       */\n      offerSchema: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer_schema&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=hire&resource=offer_schema&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/offer_schemas/:offer_schema_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 问卷（灰度租户可见）\n       */\n      questionnaire: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=questionnaire&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/questionnaire/list document }\n         *\n         * 获取面试满意度问卷列表\n         *\n         * 获取面试满意度问卷列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/questionnaires`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 内推\n       */\n      referral: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=referral&apiName=get_by_application&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/referral/get_by_application document }\n         *\n         * 获取内推信息\n         *\n         * 根据投递 ID 获取内推信息\n         */\n        getByApplication: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/referrals/get_by_application`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 简历来源\n       */\n      resumeSource: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/hire/v1/resume_sources`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=resume_source&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/resume_source/list document }\n         *\n         * 获取简历来源列表\n         *\n         * 获取简历来源列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/resume_sources`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 人才\n       */\n      talent: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent&apiName=add_to_folder&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/add_to_folder document }\n         *\n         * 将人才加入指定文件夹\n         *\n         * 将人才加入指定文件夹\n         */\n        addToFolder: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/talents/add_to_folder`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent&apiName=batch_get_id&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/batch_get_id document }\n         *\n         * 通过人才信息获取人才 ID\n         *\n         * 通过人才信息获取人才 ID\n         */\n        batchGetId: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/talents/batch_get_id`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/get document }\n         *\n         * 获取人才信息\n         *\n         * 根据人才 ID 获取人才信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/talents/:talent_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * talent_folder\n       */\n      talentFolder: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/hire/v1/talent_folders`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent_folder&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent_folder/list document }\n         *\n         * 获取人才文件夹信息\n         *\n         * 用于获取招聘系统中人才文件夹信息\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/hire/v1/talent_folders`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 实名认证\n     */\n    this.human_authentication = {\n      /**\n       * 实名认证\n       */\n      identity: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=human_authentication&resource=identity&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/human_authentication-v1/identity/create document }\n         *\n         * 录入身份信息\n         *\n         * 该接口用于录入实名认证的身份信息，在唤起有源活体认证前，需要使用该接口进行实名认证。\n         *\n         * 实名认证接口会有计费管理，接入前请联系飞书开放平台工作人员，邮箱：openplatform@bytedance.com。;;仅通过计费申请的应用，才能在[开发者后台](https://open.feishu.cn/app)查找并申请该接口的权限。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/human_authentication/v1/identities`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 消息与群组\n     */\n    this.im = {\n      /**\n       * 消息 - 批量消息\n       */\n      batchMessage: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=batch_message&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/delete document }\n         *\n         * 批量撤回消息\n         *\n         * 批量撤回通过[批量发送消息](https://open.feishu.cn/document/ukTMukTMukTM/ucDO1EjL3gTNx4yN4UTM)接口发送的消息。\n         *\n         * 注意事项：;- 应用需要启用[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability) ;- 撤回单条发送的消息请使用[撤回消息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/delete)接口;- 不支持撤回发出时间超过1天的消息;- 一次调用涉及大量消息，所以为异步接口，会有一定延迟。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/batch_messages/:batch_message_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=batch_message&apiName=get_progress&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/get_progress document }\n         *\n         * 查询批量消息整体进度\n         *\n         * 该接口在[查询批量消息推送和阅读人数](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/read_user)查询结果的基础上，增加了批量请求中有效的userid数量以及消息撤回进度数据。\n         *\n         * 注意事项:;* 该接口返回的数据为查询时刻的快照数据\n         */\n        getProgress: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/batch_messages/:batch_message_id/get_progress`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=batch_message&apiName=read_user&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/read_user document }\n         *\n         * 查询批量消息推送和阅读人数\n         *\n         * 批量发送消息后，可以通过该接口查询批量消息推送的总人数和阅读人数。\n         *\n         * 注意事项：;- 只能查询通过[批量发送消息](https://open.feishu.cn/document/ukTMukTMukTM/ucDO1EjL3gTNx4yN4UTM)接口产生的消息;- 该接口返回的数据为查询时刻的快照数据\n         */\n        readUser: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/batch_messages/:batch_message_id/read_user`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 群组 - 群公告\n       */\n      chatAnnouncement: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.announcement&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-announcement/get document }\n         *\n         * 获取群公告信息\n         *\n         * 获取会话中的群公告信息，公告信息格式与[云文档](https://open.feishu.cn/document/ukTMukTMukTM/uAzM5YjLwMTO24CMzkjN)格式相同。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 获取内部群信息时，操作者须与群组在同一租户下\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/announcement`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.announcement&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-announcement/patch document }\n         *\n         * 更新群公告信息\n         *\n         * 更新会话中的群公告信息，更新公告信息的格式和更新[云文档](https://open.feishu.cn/document/ukTMukTMukTM/uAzM5YjLwMTO24CMzkjN)格式相同。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 操作者需要拥有群公告文档的阅读权限;- 获取内部群信息时，操作者须与群组在同一租户下;- 若群开启了 ==仅群主和群管理员可编辑群信息== 配置，群主/群管理员 或 创建群组且具备 ==更新应用所创建群的群信息== 权限的机器人，可更新群公告;- 若群未开启 ==仅群主和群管理员可编辑群信息== 配置，所有成员可以更新群公告\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/announcement`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 群组\n       */\n      chat: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/create document }\n         *\n         * 创建群\n         *\n         * 创建群并设置群头像、群名、群描述等。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 本接口支持在创建群的同时拉用户或机器人进群；如果仅需要拉用户或者机器人入群参考 [将用户或机器人拉入群聊](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/create)接口\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/delete document }\n         *\n         * 解散群\n         *\n         * 解散群组。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 如果使用tenant_access_token，需要机器人符合以下任一情况才可解散群：;    - 机器人是群主;    - 机器人是群的创建者且具备==更新应用所创建群的群信息==权限;- 如果使用user_access_token，需要对应的用户是群主才可解散群\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/get document }\n         *\n         * 获取群信息\n         *\n         * 获取群名称、群描述、群头像、群主 ID 等群基本信息。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群里（否则只会返回群名称、群头像等基本信息）;- 获取内部群信息时，操作者须与群组在同一租户下\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=link&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/link document }\n         *\n         * 获取群分享链接\n         *\n         * 获取指定群的分享链接。\n         *\n         * 注意事项:;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - access_token所对应的 **机器人** 或 **授权用户** 必须在`chat_id`参数指定的群组中;- 单聊、密聊、团队群不支持分享群链接;- 当Bot被停用或Bot退出群组时，Bot生成的群链接也将停用;- 当群聊开启了 ==仅群主和群管理员可添加群成员/分享群== 设置时，仅**群主**和**群管理员**可以获取群分享链接;- 获取内部群分享链接时，操作者须与群组在同一租户下\n         */\n        link: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/link`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/chats`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/list document }\n         *\n         * 获取用户或机器人所在的群列表\n         *\n         * 获取用户或者机器人所在群列表。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 请注意区分本接口和[获取群信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/get)的请求 URL;- 获取的群列表不包含P2P单聊\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/search`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=search&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/search document }\n         *\n         * 搜索对用户或机器人可见的群列表\n         *\n         * 搜索对用户或机器人可见的群列表，包括：用户或机器人所在的群、对用户或机器人公开的群。;搜索可获得的群信息包括：群ID（chat_id）、群名称、群描述等。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/search`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/update document }\n         *\n         * 更新群信息\n         *\n         * 更新群头像、群名称、群描述、群配置、转让群主等。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 对于群主/群管理员 或 创建群组且具备 ==更新应用所创建群的群信息== 权限的机器人，可更新所有信息;- 对于不满足上述权限条件的群成员或机器人：;    - 若未开启 ==仅群主和群管理员可编辑群信息== 配置，仅可更新群头像、群名称、群描述、群国际化名称信息;    - 若开启了 ==仅群主和群管理员可编辑群信息== 配置，任何群信息都不能修改;- 如果同时更新 ==邀请用户或机器人入群权限== 和 ==群分享权限== 这两项设置需要满足以下条件：;    - 若未开启 ==仅群主和管理员可以邀请用户或机器人入群==，需要设置 ==群分享权限== 为 ==允许分享==;    - 若开启了 ==仅群主和管理员可以邀请用户或机器人入群==，需要设置 ==群分享权限== 为 ==不允许分享==\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 群组 - 群成员\n       */\n      chatManagers: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.managers&apiName=add_managers&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-managers/add_managers document }\n         *\n         * 指定群管理员\n         *\n         * 将用户或机器人指定为群管理员。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 仅有群主可以指定群管理员\n         */\n        addManagers: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/managers/add_managers`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.managers&apiName=delete_managers&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-managers/delete_managers document }\n         *\n         * 删除群管理员\n         *\n         * 删除指定的群管理员（用户或机器人）。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 仅有群主可以删除群管理员\n         */\n        deleteManagers: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/managers/delete_managers`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 群组 - 群成员\n       */\n      chatMembers: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/create document }\n         *\n         * 将用户或机器人拉入群聊\n         *\n         * 将用户或机器人拉入群聊。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 如需拉用户进群，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability); - 机器人或授权用户必须在群组中;- 外部租户不能被加入到内部群中;- 操作内部群时，操作者须与群组在同一租户下; - 在开启 ==仅群主和群管理员可添加群成员== 的设置时，仅有群主/管理员 或 创建群组且具备 ==更新应用所创建群的群信息== 权限的机器人，可以拉用户或者机器人进群; - 在未开启 ==仅群主和群管理员可添加群成员== 的设置时，所有群成员都可以拉用户或机器人进群\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/delete document }\n         *\n         * 将用户或机器人移出群聊\n         *\n         * 将用户或机器人移出群聊。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 用户或机器人在任何条件下均可移除自己出群（即主动退群）;- 仅有群主/管理员 或 创建群组并且具备 ==更新应用所创建群的群信息== 权限的机器人，可以移除其他用户或者机器人;- 每次请求，最多移除50个用户或者5个机器人;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/get document }\n         *\n         * 获取群成员列表\n         *\n         * 获取用户/机器人所在群的群成员列表。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群组中; - 该接口不会返回群内的机器人成员; - 由于返回的群成员列表会过滤掉机器人成员，因此返回的群成员个数可能会小于指定的page_size; - 如果有同一时间加入群的群成员，会一次性返回，这会导致返回的群成员个数可能会大于指定的page_size;- 获取内部群信息时，操作者须与群组在同一租户下\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=is_in_chat&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/is_in_chat document }\n         *\n         * 判断用户或机器人是否在群里\n         *\n         * 根据使用的access_token判断对应的用户或者机器人是否在群里。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 获取内部群信息时，操作者须与群组在同一租户下\n         */\n        isInChat: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members/is_in_chat`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=me_join&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/me_join document }\n         *\n         * 用户或机器人主动加入群聊\n         *\n         * 用户或机器人主动加入群聊。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 目前仅支持加入公开群;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        meJoin: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members/me_join`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * chat.menu_item\n       */\n      chatMenuItem: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_item&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_item/patch document }\n         *\n         * 修改群菜单元信息\n         *\n         * 修改某个一级菜单或者二级菜单的元信息。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_items/:menu_item_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 群组 - 群菜单\n       */\n      chatMenuTree: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/create document }\n         *\n         * 添加群菜单\n         *\n         * 向群内添加群菜单。\n         *\n         * 注意事项：;- 该API是向群内追加菜单，群内原来存在的菜单并不会被覆盖。操作API后，将返回群内所有菜单。;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。;- 一个群内，一级菜单最多有3个，每个一级菜单最多有5个二级菜单。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/delete document }\n         *\n         * 删除群菜单。\n         *\n         * 删除群内菜单。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。;- 操作API后，将返回群内所有菜单。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/get document }\n         *\n         * 获取群内菜单\n         *\n         * 通过群ID获取群内菜单。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=sort&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/sort document }\n         *\n         * 排序群菜单\n         *\n         * 给一个群内的一级菜单排序。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。;- 操作API后，将返回群内所有菜单。\n         */\n        sort: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree/sort`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * chat.moderation\n       */\n      chatModeration: {\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/moderation`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.moderation&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-moderation/get document }\n         *\n         * 获取群成员发言权限\n         *\n         * 获取群发言模式、可发言用户名单等\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人 或 授权用户 必须在群里\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/moderation`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.moderation&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-moderation/update document }\n         *\n         * 更新群发言权限\n         *\n         * 更新群组的发言权限设置，可设置为全员可发言、仅管理员可发言  或 指定用户可发言。\n         *\n         * 注意事项：; - 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 若以用户授权调用接口，**当授权用户是群主**时，可更新群发言权限;- 若以租户授权调用接口(即以机器人身份调用接口)，当**机器人是群主** 或者 **机器人是群组创建者、具备==更新应用所创建群的群信息==权限且仍在群内**时，可更新群发言权限\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/moderation`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 群组 - 会话标签页\n       */\n      chatTab: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/create document }\n         *\n         * 添加会话标签页\n         *\n         * 添加自定义会话标签页。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 只允许添加类型为`doc`和`url`的会话标签页;- 添加doc类型时，操作者（access token对应的身份）需要拥有对应文档的权限;- tab_config字段当前只对`url`类型的会话标签页生效;- 在开启 ==仅群主和管理员可管理标签页== 的设置时，仅群主和群管理员可以添加会话标签页;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=delete_tabs&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/delete_tabs document }\n         *\n         * 删除会话标签页\n         *\n         * 删除会话标签页。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 只允许删除类型为`doc`和`url`的会话标签页;- 在开启 ==仅群主和管理员可管理标签页== 的设置时，仅群主和群管理员可以删除会话标签页;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        deleteTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/delete_tabs`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=list_tabs&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/list_tabs document }\n         *\n         * 拉取会话标签页\n         *\n         * 拉取会话标签页。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        listTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/list_tabs`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=sort_tabs&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/sort_tabs document }\n         *\n         * 会话标签页排序\n         *\n         * 会话标签页排序。\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 消息标签页强制固定为第一顺位，不参与排序，但是请求体中必须包含该标签页的Tab ID;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        sortTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/sort_tabs`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=update_tabs&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/update_tabs document }\n         *\n         * 更新会话标签页\n         *\n         * 更新会话标签页\n         *\n         * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 只允许更新类型为`doc`和`url`的会话标签页;- 更新doc类型时，操作者（access token对应的身份）需要拥有对应文档的权限;- 在开启 ==仅群主和管理员可管理标签页== 的设置时，仅群主和群管理员可以更新会话标签页;- 操作内部群时，操作者须与群组在同一租户下\n         */\n        updateTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/update_tabs`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * chat.top_notice\n       */\n      chatTopNotice: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.top_notice&apiName=delete_top_notice&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-top_notice/delete_top_notice document }\n         *\n         * 撤销群置顶\n         *\n         * 撤销会话中的置顶。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群组中;- 撤销内部群置顶时，操作者须与群组在同一租户下\n         */\n        deleteTopNotice: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/top_notice/delete_top_notice`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.top_notice&apiName=put_top_notice&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-top_notice/put_top_notice document }\n         *\n         * 更新群置顶\n         *\n         * 更新会话中的群置顶信息，可以将群中的某一条消息，或者群公告置顶显示。\n         *\n         * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群组中;- 更新内部群置顶时，操作者须与群组在同一租户下\n         */\n        putTopNotice: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/top_notice/put_top_notice`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 消息 - 文件信息\n       */\n      file: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=file&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/file/create document }\n         *\n         * 上传文件\n         *\n         * 上传文件，可以上传视频，音频和常见的文件类型。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 文件大小不得超过30M，且不允许上传空文件\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/files`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=file&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/file/get document }\n         *\n         * 下载文件\n         *\n         * 下载文件接口，只能下载应用自己上传的文件。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 只能下载机器人自己上传的文件;- 下载用户发送的资源，请使用[获取消息中的资源文件](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-resource/get)接口;- 下载的资源大小不能超过100M;- 如果需要Content-Disposition header，发起请求的时候需要在header中设置Content-Type为application/json\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/files/:file_key`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        })\n      },\n      /**\n       * 消息 - 图片信息\n       */\n      image: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=image&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/create document }\n         *\n         * 上传图片\n         *\n         * 上传图片接口，支持上传 JPEG、PNG、WEBP、GIF、TIFF、BMP、ICO格式图片。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 图片大小不得超过10M，且不支持上传大小为0的图片\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/images`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=image&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/get document }\n         *\n         * 下载图片\n         *\n         * 下载图片资源，只能下载当前应用所上传且图片类型为message的图片。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 只能下载机器人自己上传且图片类型为message的图片，avatar类型暂不支持下载;- 下载用户发送的资源，请使用[获取消息中的资源文件](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-resource/get)接口\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/images/:image_key`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        })\n      },\n      /**\n       * 消息\n       */\n      message: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/create document }\n         *\n         * 发送消息\n         *\n         * 给指定用户或者会话发送消息，支持文本、富文本、可交互的[消息卡片](https://open.feishu.cn/document/ukTMukTMukTM/uczM3QjL3MzN04yNzcDN)、群名片、个人名片、图片、视频、音频、文件、表情包。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 给用户发送消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 给群组发送消息，需要机器人在群组中\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/delete document }\n         *\n         * 撤回消息\n         *\n         * 机器人撤回机器人自己发送的消息或群主撤回群内消息。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ，撤回消息时机器人仍需要在会话内;- 机器人可以撤回单聊和群组内，自己发送 且 发送时间不超过1天(24小时)的消息;- 若机器人要撤回群内他人发送的消息，则机器人必须是该群的群主、管理员 或者 创建者，且消息发送时间不超过1年;- 无法撤回通过「[批量发送消息](https://open.feishu.cn/document/ukTMukTMukTM/ucDO1EjL3gTNx4yN4UTM)」接口发送的消息\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=forward&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=forward&project=im&resource=message&version=v1 document }\n         *\n         * 转发一条消息\n         */\n        forward: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/forward`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/get document }\n         *\n         * 获取指定消息的内容\n         *\n         * 通过 message_id 查询消息内容。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 机器人必须在群组中\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/list document }\n         *\n         * 获取会话历史消息\n         *\n         * 获取会话（包括单聊、群组）的历史消息（聊天记录）。\n         *\n         * - 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 获取消息时，机器人必须在群组中\n         *\n         * 接口级别权限默认只能获取单聊（p2p）消息，如果需要获取群组（group）消息，应用还必须拥有 **==获取群组中所有消息==** 权限\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=merge_forward&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=merge_forward&project=im&resource=message&version=v1 document }\n         *\n         * 合并转发多条消息\n         */\n        mergeForward: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/merge_forward`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/patch document }\n         *\n         * 更新应用发送的消息\n         *\n         * 更新应用已发送的消息卡片内容。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 若以user_access_token更新消息，该操作用户必须是卡片消息的发送者;- 仅支持对所有人更新**未撤回**的[「共享卡片」](ukTMukTMukTM/uAjNwUjLwYDM14CM2ATN)消息，需在卡片的config属性中，显式声明 ==\"update_multi\":true==。 ;- **不支持更新批量消息**;- 文本消息请求体最大不能超过150KB；卡片及富文本消息请求体最大不能超过30KB;- 仅支持修改14天内发送的消息;- 单条消息更新频控为**5QPS**\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=read_users&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/read_users document }\n         *\n         * 查询消息已读信息\n         *\n         * 查询消息的已读信息。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能查询机器人自己发送，且发送时间不超过7天的消息;- 查询消息已读信息时机器人仍需要在会话内;- 本接口不支持查询批量消息\n         */\n        readUsers: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/read_users`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=reply&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/reply document }\n         *\n         * 回复消息\n         *\n         * 回复指定消息，支持文本、富文本、卡片、群名片、个人名片、图片、视频、文件等多种消息类型。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 回复私聊消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 回复群组消息，需要机器人在群中\n         */\n        reply: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reply`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=urgent_app&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/urgent_app document }\n         *\n         * 发送应用内加急\n         *\n         * 对指定消息进行应用内加急。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 不支持加急批量消息;- 只能加急机器人自己发送的消息;- 加急时机器人需要在加急消息所在的群中;- 调用本接口需要用户已阅读加急的消息才可以继续加急（用户未读的加急上限为200条）\n         *\n         * 特别说明：;- 默认接口限流为50 QPS，请谨慎调用\n         */\n        urgentApp: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/urgent_app`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=urgent_phone&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/urgent_phone document }\n         *\n         * 发送电话加急\n         *\n         * 对指定消息进行应用内加急与电话加急。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能加急机器人自己发送的消息;- 加急时机器人需要在加急消息所在的群组中;- 需要用户阅读已加急的消息才可以继续加急（用户未读的加急上限为200条）\n         *\n         * 特别说明：;- 通过接口产生的电话加急将消耗企业的加急额度，请慎重调用;- 通过[租户管理后台](https://admin.feishu.cn/)-费用中心-短信/电话加急 可以查看当前额度;- 默认接口限流为50 QPS，请谨慎调用\n         */\n        urgentPhone: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/urgent_phone`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=urgent_sms&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/urgent_sms document }\n         *\n         * 发送短信加急\n         *\n         * 对指定消息进行应用内加急与短信加急。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能加急机器人自己发送的消息;- 加急时机器人仍需要在加急消息所在的群组中;- 调用本接口需要用户已阅读加急的消息才可以继续加急（用户未读的加急上限为200条）\n         *\n         * 特别说明：;- 通过接口产生的短信加急将消耗企业的加急额度，请慎重调用;- 通过[租户管理后台](https://admin.feishu.cn/)-费用中心-短信/电话加急 可以查看当前额度;- 默认接口限流为50 QPS，请谨慎调用\n         */\n        urgentSms: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/urgent_sms`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/create document }\n         *\n         * 通过模版消息卡片发送消息\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 给用户发送消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 给群组发送消息，需要机器人在群组中\n         */\n        createByCard: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const {\n              template_id,\n              template_variable\n            } = data,\n            rest = __rest(data, [\"template_id\", \"template_variable\"]);\n          const targetData = Object.assign({\n            msg_type: \"interactive\",\n            content: JSON.stringify({\n              type: \"template\",\n              data: {\n                template_id: template_id,\n                template_variable: template_variable\n              }\n            })\n          }, rest);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n            method: \"POST\",\n            data: targetData,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=reply&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/reply document }\n         *\n         * 通过模版消息卡片回复消息\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 回复私聊消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 回复群组消息，需要机器人在群中\n         */\n        replyByCard: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const {\n              template_id,\n              template_variable\n            } = data,\n            rest = __rest(data, [\"template_id\", \"template_variable\"]);\n          const targetData = Object.assign({\n            msg_type: \"interactive\",\n            content: JSON.stringify({\n              type: \"template\",\n              data: {\n                template_id: template_id,\n                template_variable: template_variable\n              }\n            })\n          }, rest);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reply`, path),\n            method: \"POST\",\n            data: targetData,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 消息 - 表情回复\n       */\n      messageReaction: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.reaction&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-reaction/create document }\n         *\n         * 添加消息表情回复\n         *\n         * 给指定消息添加指定类型的表情回复（reaction即表情回复，本文档统一用“reaction”代称）。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 待添加reaction的消息要真实存在，不能被撤回;- 给消息添加reaction，需要reaction的发送方（机器人或者用户）在消息所在的会话内\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.reaction&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-reaction/delete document }\n         *\n         * 删除消息表情回复\n         *\n         * 删除指定消息的表情回复（reaction即表情回复，本文档统一用“reaction”代称）。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能删除真实存在的reaction，并且删除reaction请求的操作者必须是reaction的原始添加者\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions/:reaction_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.reaction&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-reaction/list document }\n         *\n         * 获取消息表情回复\n         *\n         * 获取指定消息的特定类型表情回复列表（reaction即表情回复，本文档统一用“reaction”代称）。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 待获取reaction信息的消息要真实存在，不能被撤回;- 获取消息的reaction，需要request的授权主体（机器人或者用户）在消息所在的会话内\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * message.resource\n       */\n      messageResource: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.resource&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-resource/get document }\n         *\n         * 获取消息中的资源文件\n         *\n         * 获取消息中的资源文件，包括音频，视频，图片和文件，**暂不支持表情包资源下载**。当前仅支持 100M 以内的资源文件的下载。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人和消息需要在同一会话中;- 暂不支持获取合并转发消息中的子消息的资源文件\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/resources/:file_key`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        })\n      },\n      /**\n       * 消息 - Pin\n       */\n      pin: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=pin&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/pin/create document }\n         *\n         * Pin消息\n         *\n         * Pin一条指定的消息。\n         *\n         * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- Pin消息时，机器人必须在对应的群组中;- 若消息已经被Pin，返回该Pin的操作信息;- 不能Pin一条对操作者不可见的消息;- 对同一条消息的Pin操作不能超过==5 QPS==\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/pins`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=pin&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/pin/delete document }\n         *\n         * 移除Pin消息\n         *\n         * 移除一条指定消息的Pin。\n         *\n         * 注意事项：;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 移除Pin消息时，机器人必须在对应的群组中;- 若消息未被Pin或已被撤回，返回成功信息;- 不能移除一条对操作者不可见的Pin消息;- 对同一条消息移除Pin的操作不能超过==5 QPS==\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/pins/:message_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/im/v1/pins`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=im&resource=pin&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/pin/list document }\n         *\n         * 获取群内Pin消息\n         *\n         * 获取所在群内指定时间范围内的所有Pin消息。\n         *\n         * 注意事项：;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 获取Pin消息时，机器人必须在群组中;- 获取的Pin消息按Pin的创建时间降序排列;- 接口默认限流为==50 QPS==\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/im/v1/pins`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 邮箱\n     */\n    this.mail = {\n      /**\n       * 邮件组别名\n       */\n      mailgroupAlias: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.alias&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/create document }\n         *\n         * 创建邮件组别名\n         *\n         * 创建邮件组别名\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.alias&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/delete document }\n         *\n         * 删除邮件组别名\n         *\n         * 删除邮件组别名\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases/:alias_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.alias&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/list document }\n         *\n         * 获取邮件组所有别名\n         *\n         * 获取邮件组所有别名\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 邮件组\n       */\n      mailgroup: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/create document }\n         *\n         * 创建邮件组\n         *\n         * 创建一个邮件组\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/delete document }\n         *\n         * 删除邮件组\n         *\n         * 删除一个邮件组\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/get document }\n         *\n         * 获取邮件组\n         *\n         * 获取特定邮件组信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/list document }\n         *\n         * 批量获取邮件组\n         *\n         * 分页批量获取邮件组\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/patch document }\n         *\n         * 修改邮件组\n         *\n         * 更新邮件组部分字段，没有填写的字段不会被更新\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/update document }\n         *\n         * 更新邮件组\n         *\n         * 更新邮件组所有信息\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 邮件组成员\n       */\n      mailgroupMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=mail&resource=mailgroup.member&version=v1 document }\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=mail&resource=mailgroup.member&version=v1 document }\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/batch_delete`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/create document }\n         *\n         * 创建邮件组成员\n         *\n         * 向邮件组添加单个成员\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/delete document }\n         *\n         * 删除邮件组成员\n         *\n         * 删除邮件组单个成员\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/:member_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/get document }\n         *\n         * 获取邮件组成员信息\n         *\n         * 获取邮件组单个成员信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/:member_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/list document }\n         *\n         * 批量获取邮件组成员\n         *\n         * 分页批量获取邮件组成员列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 邮件组权限成员\n       */\n      mailgroupPermissionMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=mail&resource=mailgroup.permission_member&version=v1 document }\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=mail&resource=mailgroup.permission_member&version=v1 document }\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/batch_delete`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/create document }\n         *\n         * 创建邮件组权限成员\n         *\n         * 向邮件组添加单个自定义权限成员，添加后该成员可发送邮件到该邮件组\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/delete document }\n         *\n         * 删除邮件组权限成员\n         *\n         * 从自定义成员中删除单个成员，删除后该成员无法发送邮件到该邮件组\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/:permission_member_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/get document }\n         *\n         * 获取邮件组权限成员\n         *\n         * 获取邮件组单个权限成员信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/:permission_member_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/list document }\n         *\n         * 批量获取邮件组权限成员\n         *\n         * 分页批量获取邮件组权限成员列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 公共邮箱别名\n       */\n      publicMailboxAlias: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.alias&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-alias/create document }\n         *\n         * 创建公共邮箱别名\n         *\n         * 创建公共邮箱别名\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/aliases`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.alias&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-alias/delete document }\n         *\n         * 删除公共邮箱别名\n         *\n         * 删除公共邮箱别名\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/aliases/:alias_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.alias&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-alias/list document }\n         *\n         * 获取所有公共邮箱别名\n         *\n         * 获取所有公共邮箱别名\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/aliases`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 公共邮箱\n       */\n      publicMailbox: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/create document }\n         *\n         * 创建公共邮箱\n         *\n         * 创建一个公共邮箱\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/delete document }\n         *\n         * 释放公共邮箱地址\n         *\n         * 该接口会永久删除公共邮箱地址。可用于释放邮箱回收站的公共邮箱地址，一旦删除，该邮箱地址将无法恢复。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/get document }\n         *\n         * 获取公共邮箱\n         *\n         * 获取公共邮箱信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/list document }\n         *\n         * 批量获取公共邮箱\n         *\n         * 分页批量获取公共邮箱列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/patch document }\n         *\n         * 修改公共邮箱\n         *\n         * 更新公共邮箱部分字段，没有填写的字段不会被更新\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/update document }\n         *\n         * 更新公共邮箱\n         *\n         * 更新公共邮箱所有信息\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 公共邮箱成员\n       */\n      publicMailboxMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=batch_create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=mail&resource=public_mailbox.member&version=v1 document }\n         */\n        batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/batch_create`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=batch_delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=mail&resource=public_mailbox.member&version=v1 document }\n         */\n        batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/batch_delete`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=clear&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/clear document }\n         *\n         * 清空公共邮箱成员\n         *\n         * 删除公共邮箱所有成员\n         */\n        clear: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/clear`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/create document }\n         *\n         * 创建公共邮箱成员\n         *\n         * 向公共邮箱添加单个成员\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/delete document }\n         *\n         * 删除公共邮箱成员\n         *\n         * 删除公共邮箱单个成员\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/:member_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/get document }\n         *\n         * 获取公共邮箱成员信息\n         *\n         * 获取公共邮箱单个成员信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/:member_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/list document }\n         *\n         * 批量获取公共邮箱成员\n         *\n         * 分页批量获取公共邮箱成员列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 邮箱地址\n       */\n      user: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user/query document }\n         *\n         * 邮箱状态查询\n         *\n         * 使用邮箱状态查询接口，可以输入邮箱地址，查询出该邮箱地址对应的类型以及状态\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/users/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户邮箱别名\n       */\n      userMailboxAlias: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox.alias&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox-alias/create document }\n         *\n         * 创建用户邮箱别名\n         *\n         * 创建用户邮箱别名\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox.alias&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox-alias/delete document }\n         *\n         * 删除用户邮箱别名\n         *\n         * 删除用户邮箱别名\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases/:alias_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox.alias&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox-alias/list document }\n         *\n         * 获取用户邮箱所有别名\n         *\n         * 获取用户邮箱所有别名\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户邮箱\n       */\n      userMailbox: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox/delete document }\n         *\n         * 释放用户邮箱地址\n         *\n         * 该接口会永久删除用户邮箱地址。可用于删除位于邮箱回收站中的用户邮箱地址，一旦删除，将无法恢复。该接口支持邮件的转移，可以将被释放邮箱的邮件转移到另外一个可以使用的邮箱中。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.mdm = {};\n    /**\n         \n         */\n    this.meeting_room = {};\n    /**\n         \n         */\n    this.moments = {};\n    /**\n     * OKR\n     */\n    this.okr = {\n      /**\n       * 图片\n       */\n      image: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=image&apiName=upload&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/image/upload document }\n         *\n         * 上传图片\n         *\n         * 上传图片\n         */\n        upload: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/images/upload`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers: Object.assign(Object.assign({}, headers), {\n              \"Content-Type\": \"multipart/form-data\"\n            })\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return get(res, \"data\", null);\n        })\n      },\n      /**\n       * 指标库\n       */\n      metricSource: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source/list document }\n         *\n         * 获取指标库\n         *\n         * 获取租户下全部 OKR 指标库（仅限 OKR 企业版使用）\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 指标项\n       */\n      metricSourceTableItem: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=batch_update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/batch_update document }\n         *\n         * 批量更新指标项\n         *\n         * - 该接口用于批量更新多项指标，单次调用最多更新 100 条记录。接口仅限 OKR 企业版使用。;;  更新成功后 OKR 系统会给以下人员发送消息通知：;;    - 首次更新目标值的人员 ;;    - 已经将指标添加为 KR、且本次目标值/起始值/支撑的上级有变更的人员，不包含仅更新了进度值的人员\n         */\n        batchUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items/batch_update`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/get document }\n         *\n         * 获取指标项详情\n         *\n         * 获取某项指标的具体内容（仅限 OKR 企业版使用）\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items/:metric_item_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/list document }\n         *\n         * 获取指标项\n         *\n         * 获取指定指标表下的所有指标项（仅限 OKR 企业版使用）\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/patch document }\n         *\n         * 更新指标项\n         *\n         * - 该接口用于更新某项指标，接口仅限 OKR 企业版使用。;;    更新成功后 OKR 系统会给以下人员发送消息通知：;;    - 首次更新目标值的人员 ;;    - 已经将指标添加为 KR、且本次目标值/起始值/支撑的上级有变更的人员，不包含仅更新了进度值的人员\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items/:metric_item_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 指标表\n       */\n      metricSourceTable: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table/list document }\n         *\n         * 获取指标表\n         *\n         * 获取指定指标库下有哪些指标表（仅限 OKR 企业版使用）\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * OKR\n       */\n      okr: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=okr&apiName=batch_get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/okr/batch_get document }\n         *\n         * 批量获取OKR\n         *\n         * 根据OKR id批量获取OKR\n         *\n         * 使用<md-tag mode=\"inline\" type=\"token-tenant\">tenant_access_token</md-tag>需要额外申请权限<md-perm ;href=\"https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN\">以应用身份访问OKR信息</md-perm>\n         */\n        batchGet: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/okrs/batch_get`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * OKR周期\n       */\n      period: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=period&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/period/list document }\n         *\n         * 获取OKR周期列表\n         *\n         * 获取OKR周期列表\n         *\n         * 使用<md-tag mode=\"inline\" type=\"token-tenant\">tenant_access_token</md-tag>需要额外申请权限<md-perm ;href=\"https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN\">以应用身份访问OKR信息</md-perm>\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/periods`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * OKR进展记录\n       */\n      progressRecord: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/create document }\n         *\n         * 创建OKR进展记录\n         *\n         * 创建OKR进展记录\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/delete document }\n         *\n         * 删除OKR进展记录\n         *\n         * 根据ID删除OKR进展记录\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records/:progress_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/get document }\n         *\n         * 获取OKR进展记录\n         *\n         * 根据ID获取OKR进展记录详情\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records/:progress_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/update document }\n         *\n         * 更新OKR进展记录\n         *\n         * 根据OKR进展记录ID更新进展详情\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records/:progress_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 用户OKR\n       */\n      userOkr: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=okr&resource=user.okr&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/user-okr/list document }\n         *\n         * 获取用户的OKR列表\n         *\n         * 根据用户的id获取OKR列表\n         *\n         * 使用<md-tag mode=\"inline\" type=\"token-tenant\">tenant_access_token</md-tag>需要额外申请权限<md-perm ;href=\"https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN\">以应用身份访问OKR信息</md-perm>\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/okr/v1/users/:user_id/okrs`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * AI能力\n     */\n    this.optical_char_recognition = {\n      /**\n       * 图片识别\n       */\n      image: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=optical_char_recognition&resource=image&apiName=basic_recognize&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/optical_char_recognition-v1/image/basic_recognize document }\n         *\n         * 基础图片识别 (OCR)\n         *\n         * 可识别图片中的文字，按图片中的区域划分，分段返回文本列表\n         *\n         * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n         */\n        basicRecognize: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/optical_char_recognition/v1/image/basic_recognize`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 帐号\n     */\n    this.passport = {\n      /**\n       * 登录态\n       */\n      session: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=passport&resource=session&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/passport-v1/session/query document }\n         *\n         * 批量获取用户登录信息（脱敏）\n         *\n         * 该接口用于查询用户的登录信息\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/passport/v1/sessions/query`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.people_admin = {};\n    /**\n         \n         */\n    this.people_bytedance = {};\n    /**\n         \n         */\n    this.report = {};\n    /**\n         \n         */\n    this.search_in_app = {};\n    /**\n     * 搜索\n     */\n    this.search = {\n      /**\n       * app\n       */\n      app: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=app&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=search&resource=app&version=v2 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/app`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 数据源\n       */\n      dataSource: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/create document }\n         *\n         * 创建数据源\n         *\n         * 创建一个数据源\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=delete&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/delete document }\n         *\n         * 删除数据源\n         *\n         * 删除一个已存在的数据源\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=get&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/get document }\n         *\n         * 获取数据源\n         *\n         * 获取已经创建的数据源\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=list&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/list document }\n         *\n         * 批量获取数据源\n         *\n         * 批量获取创建的数据源信息\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=patch&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/patch document }\n         *\n         * 修改数据源\n         *\n         * 更新一个已经存在的数据源\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 数据项\n       */\n      dataSourceItem: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source.item&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source-item/create document }\n         *\n         * 索引数据项\n         *\n         * 索引一条数据记录\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id/items`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source.item&apiName=delete&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source-item/delete document }\n         *\n         * 删除数据项\n         *\n         * 删除数据项\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id/items/:item_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source.item&apiName=get&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source-item/get document }\n         *\n         * 获取数据项\n         *\n         * 获取单个数据记录\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id/items/:item_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * message\n       */\n      message: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=message&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=search&resource=message&version=v2 document }\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/message`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 数据范式\n       */\n      schema: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/create document }\n         *\n         * 创建数据范式\n         *\n         * 创建一个数据范式\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=delete&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/delete document }\n         *\n         * 删除数据范式\n         *\n         * 删除已存在的数据范式\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas/:schema_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=get&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/get document }\n         *\n         * 获取数据范式\n         *\n         * 获取单个数据范式\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas/:schema_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=patch&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/patch document }\n         *\n         * 修改数据范式\n         *\n         * 修改数据范式\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas/:schema_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.security_and_compliance = {};\n    /**\n     * 云文档-电子表格\n     */\n    this.sheets = {\n      /**\n       * 表格\n       */\n      spreadsheet: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/create document }\n         *\n         * 创建表格\n         *\n         * 在指定目录下创建表格\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/get document }\n         *\n         * 获取电子表格信息\n         *\n         * 该接口用于获取电子表格的基础信息。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/patch document }\n         *\n         * 修改电子表格属性\n         *\n         * 该接口用于修改电子表格的属性\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 筛选\n       */\n      spreadsheetSheetFilter: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/create document }\n         *\n         * 创建筛选\n         *\n         * 在子表内创建筛选。\n         *\n         * 参数值可参考[筛选指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/filter-user-guide)\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/delete document }\n         *\n         * 删除筛选\n         *\n         * 删除子表的筛选\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/get document }\n         *\n         * 获取筛选\n         *\n         * 获取子表的详细筛选信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/update document }\n         *\n         * 更新筛选\n         *\n         * 更新子表筛选范围中的列筛选条件。\n         *\n         * 参数值可参考[筛选指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/filter-user-guide)\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 筛选条件\n       */\n      spreadsheetSheetFilterViewCondition: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/create document }\n         *\n         * 创建筛选条件\n         *\n         * 在筛选视图的筛选范围的某一列创建筛选条件。\n         *\n         * 筛选条件参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/delete document }\n         *\n         * 删除筛选条件\n         *\n         * 删除筛选视图的筛选范围某一列的筛选条件。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/:condition_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/get document }\n         *\n         * 获取筛选条件\n         *\n         * 获取筛选视图某列的筛选条件信息。\n         *\n         * 筛选条件含义参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/:condition_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=query&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/query document }\n         *\n         * 查询筛选条件\n         *\n         * 查询一个筛选视图的所有筛选条件，返回筛选视图的筛选范围内的筛选条件。\n         *\n         * 筛选条件含义可参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=update&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/update document }\n         *\n         * 更新筛选条件\n         *\n         * 更新筛选视图范围的某列的筛选条件，condition id 即为列的字母号。\n         *\n         * 筛选条件参数可参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/:condition_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 筛选视图\n       */\n      spreadsheetSheetFilterView: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/create document }\n         *\n         * 创建筛选视图\n         *\n         * 根据传入的参数创建一个筛选视图。Id 和 名字可选，不填的话会默认生成；range 必填。Id 长度为10，由 0-9、a-z、A-Z 组合生成。名字长度不超过100。单个子表内的筛选视图个数不超过 150。\n         *\n         * 筛选范围的设置参考：[筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/delete document }\n         *\n         * 删除筛选视图\n         *\n         * 删除指定 id 对应的筛选视图。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/get document }\n         *\n         * 获取筛选视图\n         *\n         * 获取指定筛选视图 id 的名字和筛选范围。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/patch document }\n         *\n         * 更新筛选视图\n         *\n         * 更新筛选视图的名字或者筛选范围。名字长度不超过100，不能重复即子表内唯一；筛选范围不超过子表的最大范围。\n         *\n         * 筛选范围的设置参考：[筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=query&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/query document }\n         *\n         * 查询筛选视图\n         *\n         * 查询子表内所有的筛选视图基本信息，包括 id、name 和 range\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 单元格\n       */\n      spreadsheetSheet: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=find&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/find document }\n         *\n         * 查找单元格\n         *\n         * 在指定范围内查找符合查找条件的单元格。\n         */\n        find: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/find`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/get document }\n         *\n         * 查询工作表\n         *\n         * 该接口用于通过工作表ID查询工作表属性信息。\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=move_dimension&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/move_dimension document }\n         *\n         * 移动行列\n         *\n         * 该接口用于移动行列，行列被移动到目标位置后，原本在目标位置的行列会对应右移或下移。\n         */\n        moveDimension: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/move_dimension`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=query&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/query document }\n         *\n         * 获取工作表\n         *\n         * 该接口用于获取电子表格下所有工作表及其属性。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=replace&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/replace document }\n         *\n         * 替换单元格\n         *\n         * 按照指定的条件查找子表的某个范围内的数据符合条件的单元格并替换值，返回替换成功的单元格位置。一次请求最多允许替换5000个单元格，如果超过请将range缩小范围再操作。请求体中的 range、find、replaccement 字段必填。\n         */\n        replace: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/replace`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 浮动图片\n       */\n      spreadsheetSheetFloatImage: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=create&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/create document }\n         *\n         * 创建浮动图片\n         *\n         * 根据传入的参数创建一张浮动图片。Float_image_token （[上传图片至表格后得到](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_all)）和range（只支持一个单元格） 必填。Float_image_id 可选，不填的话会默认生成，长度为10，由 0-9、a-z、A-Z 组合生成。表格内不重复的图片（浮动图片+单元格图片）总数不超过4000。width 和 height 为图片展示的宽高，可选，不填的话会使用图片的真实宽高。offset_x 和 offset_y 为图片左上角距离所在单元格左上角的偏移，可选，默认为 0。\n         *\n         * 浮动图片的设置参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=delete&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/delete document }\n         *\n         * 删除浮动图片\n         *\n         * 删除 float_image_id 对应的浮动图片。\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/:float_image_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=get&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/get document }\n         *\n         * 获取浮动图片\n         *\n         * 根据 float_image_id 获取对应浮动图片的信息。\n         *\n         * 浮动图片参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/:float_image_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=patch&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/patch document }\n         *\n         * 更新浮动图片\n         *\n         * 更新已有的浮动图片位置和宽高，包括 range、width、height、offset_x 和 offset_y，不包括 float_image_id 和 float_image_token。\n         *\n         * 浮动图片更新参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/:float_image_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=query&version=v3 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/query document }\n         *\n         * 查询浮动图片\n         *\n         * 返回子表内所有的浮动图片信息。\n         *\n         * 浮动图片参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * AI能力\n     */\n    this.speech_to_text = {\n      /**\n       * 语音识别\n       */\n      speech: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=speech_to_text&resource=speech&apiName=file_recognize&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/speech_to_text-v1/speech/file_recognize document }\n         *\n         * 语音文件识别 (ASR)\n         *\n         * 语音文件识别接口，上传整段语音文件进行一次性识别。接口适合 60 秒以内音频识别\n         *\n         * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n         */\n        fileRecognize: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/speech_to_text/v1/speech/file_recognize`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=speech_to_text&resource=speech&apiName=stream_recognize&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/speech_to_text-v1/speech/stream_recognize document }\n         *\n         * 语音流式识别 (ASR)\n         *\n         * 语音流式接口，将整个音频文件分片进行传入模型。能够实时返回数据。建议每个音频分片的大小为 100-200ms\n         *\n         * 单租户限流：20 路（一个 stream_id 称为一路会话），同租户下的应用没有限流，共享本租户的 20路限流\n         */\n        streamRecognize: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/speech_to_text/v1/speech/stream_recognize`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.spend = {};\n    /**\n         \n         */\n    this.sup_project = {};\n    /**\n     * 任务\n     */\n    this.task = {\n      /**\n       * 任务\n       */\n      task: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=batch_delete_collaborator&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/batch_delete_collaborator document }\n         *\n         * 批量删除执行者\n         *\n         * 该接口用于批量删除执行者\n         */\n        batchDeleteCollaborator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/batch_delete_collaborator`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=batch_delete_follower&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/batch_delete_follower document }\n         *\n         * 批量删除关注人\n         *\n         * 该接口用于批量删除关注人\n         */\n        batchDeleteFollower: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/batch_delete_follower`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=complete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/complete document }\n         *\n         * 完成任务\n         *\n         * 该接口用于将任务状态修改为“已完成”。;完成任务是指整个任务全部完成，而不支持执行者分别完成任务，执行成功后，任务对所有关联用户都变为完成状态。\n         */\n        complete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/complete`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/create document }\n         *\n         * 创建任务\n         *\n         * 该接口可以创建一个任务，支持填写任务的基本信息，包括任务的标题，描述及协作者等。;在此基础上，创建任务时可以设置截止时间和重复规则，将任务设置为定期执行的重复任务。通过添加协作者，则可以让其他用户协同完成该任务。;此外，接口也提供了一些支持自定义内容的字段，调用方可以实现定制化效果，如完成任务后跳转到指定结束界面。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/delete document }\n         *\n         * 删除任务\n         *\n         * 该接口用于删除任务\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/get document }\n         *\n         * 获取任务详情\n         *\n         * 该接口用于获取任务详情，包括任务标题、描述、时间、来源等信息\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/list document }\n         *\n         * 获取任务列表\n         *\n         * 以分页的方式获取任务列表。当使用user_access_token时，获取与该用户身份相关的所有任务。当使用tenant_access_token时，获取以该应用身份通过“创建任务“接口创建的所有任务（并非获取该应用所在租户下所有用户创建的任务）。;本接口支持通过任务创建时间以及任务的完成状态对任务进行过滤。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/patch document }\n         *\n         * 更新任务\n         *\n         * 该接口用于修改任务的标题、描述、时间、来源等相关信息\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=uncomplete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/uncomplete document }\n         *\n         * 取消完成任务\n         *\n         * 该接口用于取消任务的已完成状态\n         */\n        uncomplete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/uncomplete`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 执行者\n       */\n      taskCollaborator: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.collaborator&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-collaborator/create document }\n         *\n         * 新增执行者\n         *\n         * 该接口用于新增任务执行者，一次性可以添加多个执行者。;只有任务的创建者和执行者才能添加执行者，关注人无权限添加。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.collaborator&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-collaborator/delete document }\n         *\n         * 删除执行者\n         *\n         * 该接口用于删除任务执行者\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators/:collaborator_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.collaborator&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-collaborator/list document }\n         *\n         * 获取一个任务的执行者列表\n         *\n         * 该接口用于查询任务执行者列表，支持分页，最大值为50\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 评论\n       */\n      taskComment: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/create document }\n         *\n         * 创建评论\n         *\n         * 该接口用于创建和回复任务的评论。当parent_id字段为0时，为创建评论；当parent_id不为0时，为回复某条评论\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/delete document }\n         *\n         * 删除评论\n         *\n         * 该接口用于通过评论ID删除评论\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments/:comment_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/get document }\n         *\n         * 获取评论详情\n         *\n         * 该接口用于通过评论ID获取评论详情\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments/:comment_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/list document }\n         *\n         * 获取评论列表\n         *\n         * 该接口用于查询任务评论列表，支持分页，最大值为100\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/update document }\n         *\n         * 更新评论\n         *\n         * 该接口用于更新评论内容\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments/:comment_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 关注人\n       */\n      taskFollower: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.follower&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-follower/create document }\n         *\n         * 新增关注人\n         *\n         * 该接口用于创建任务关注人。可以一次性添加多位关注人。关注人ID要使用表示用户的ID。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.follower&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-follower/delete document }\n         *\n         * 删除关注人\n         *\n         * 该接口用于删除任务关注人\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers/:follower_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.follower&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-follower/list document }\n         *\n         * 获取任务关注人列表\n         *\n         * 该接口用于查询任务关注人列表，支持分页，最大值为50\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 提醒\n       */\n      taskReminder: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.reminder&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/create document }\n         *\n         * 新增提醒时间\n         *\n         * 该接口用于创建任务的提醒时间。提醒时间在截止时间基础上做偏移，但是偏移后的结果不能早于当前时间。\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.reminder&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/delete document }\n         *\n         * 删除提醒时间\n         *\n         * 删除提醒时间，返回结果状态\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders/:reminder_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.reminder&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/list document }\n         *\n         * 查询提醒时间列表\n         *\n         * 返回提醒时间列表，支持分页，最大值为50\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 企业信息\n     */\n    this.tenant = {\n      /**\n       * tenant.product_assign_info\n       */\n      tenantProductAssignInfo: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=tenant&resource=tenant.product_assign_info&apiName=query&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=query&project=tenant&resource=tenant.product_assign_info&version=v2 document }\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/tenant/v2/tenant/assign_info_list/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 企业信息\n       */\n      tenant: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=tenant&resource=tenant&apiName=query&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/tenant-v2/tenant/query document }\n         *\n         * 获取企业信息\n         *\n         * 获取企业名称、企业编号等企业信息\n         *\n         * 如果ISV应用是企业创建时默认安装，并且180天内企业未打开或使用过此应用，则无法通过此接口获取到企业信息。\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/tenant/v2/tenant/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * AI能力\n     */\n    this.translation = {\n      /**\n       * 文本\n       */\n      text: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=translation&resource=text&apiName=detect&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/translation-v1/text/detect document }\n         *\n         * 文本语种识别\n         *\n         * 机器翻译 (MT)，支持 100 多种语言识别，返回符合 ISO 639-1 标准\n         *\n         * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n         */\n        detect: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/translation/v1/text/detect`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=translation&resource=text&apiName=translate&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/translation-v1/text/translate document }\n         *\n         * 文本翻译\n         *\n         * 机器翻译 (MT)，支持以下语种互译：;\"zh\": 汉语；;\"zh-Hant\": 繁体汉语；;\"en\": 英语；;\"ja\": 日语；;\"ru\": 俄语；;\"de\": 德语；;\"fr\": 法语；;\"it\": 意大利语；;\"pl\": 波兰语；;\"th\": 泰语；;\"hi\": 印地语；;\"id\": 印尼语；;\"es\": 西班牙语；;\"pt\": 葡萄牙语；;\"ko\": 朝鲜语；;\"vi\": 越南语；\n         *\n         * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n         */\n        translate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/translation/v1/text/translate`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.unified_kms_log = {};\n    /**\n     * 视频会议\n     */\n    this.vc = {\n      /**\n       * 告警中心\n       */\n      alert: {\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/alerts`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=alert&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/alert/list document }\n         *\n         * 获取告警记录\n         *\n         * 获取特定条件下租户的设备告警记录\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/alerts`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 导出\n       */\n      export: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=download&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/download document }\n         *\n         * 下载导出文件\n         *\n         * 下载导出文件\n         */\n        download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const res = yield this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/download`, path),\n            method: \"GET\",\n            headers,\n            data,\n            params,\n            responseType: \"stream\"\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n          return {\n            writeFile: filePath => __awaiter(this, void 0, void 0, function* () {\n              return new Promise((resolve, reject) => {\n                const writableStream = fs.createWriteStream(filePath);\n                writableStream.on(\"finish\", () => {\n                  resolve(filePath);\n                });\n                writableStream.on(\"error\", e => {\n                  reject(e);\n                });\n                res.pipe(writableStream);\n              });\n            })\n          };\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/get document }\n         *\n         * 查询导出任务结果\n         *\n         * 查看异步导出的进度\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/:task_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=meeting_list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/meeting_list document }\n         *\n         * 导出会议明细\n         *\n         * 导出会议明细，具体权限要求请参考「导出概述」\n         */\n        meetingList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/meeting_list`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=participant_list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/participant_list document }\n         *\n         * 导出参会人明细\n         *\n         * 导出某个会议的参会人详情列表，具体权限要求请参考「导出概述」\n         */\n        participantList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/participant_list`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=participant_quality_list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/participant_quality_list document }\n         *\n         * 导出参会人会议质量数据\n         *\n         * 导出某场会议某个参会人的音视频&共享质量数据;，具体权限要求请参考「导出概述」\n         */\n        participantQualityList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/participant_quality_list`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=resource_reservation_list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/resource_reservation_list document }\n         *\n         * 导出会议室预定数据\n         *\n         * 导出会议室预定数据，具体权限要求请参考「导出概述」\n         */\n        resourceReservationList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/resource_reservation_list`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 会议\n       */\n      meeting: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=end&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/end document }\n         *\n         * 结束会议\n         *\n         * 结束一个进行中的会议\n         *\n         * 会议正在进行中，且操作者须具有相应的权限（如果操作者为用户，必须是会中当前主持人）\n         */\n        end: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/end`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/get document }\n         *\n         * 获取会议详情\n         *\n         * 获取一个会议的详细数据\n         *\n         * 只能获取归属于自己的会议，支持查询最近90天内的会议\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=invite&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/invite document }\n         *\n         * 邀请参会人\n         *\n         * 邀请参会人进入会议\n         *\n         * 发起邀请的操作者必须具有相应的权限（如果操作者为用户，则必须在会中），如果会议被锁定、或参会人数如果达到上限，则会邀请失败\n         */\n        invite: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/invite`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=kickout&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/kickout document }\n         *\n         * 移除参会人\n         *\n         * 将参会人从会议中移除\n         */\n        kickout: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/kickout`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listByNoWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/list_by_no`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=list_by_no&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/list_by_no document }\n         *\n         * 获取与会议号相关联的会议列表\n         *\n         * 获取指定时间范围（90天内)会议号关联的会议简要信息列表\n         */\n        listByNo: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/list_by_no`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=set_host&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/set_host document }\n         *\n         * 设置主持人\n         *\n         * 设置会议的主持人\n         *\n         * 发起设置主持人的操作者必须具有相应的权限（如果操作者为用户，必须是会中当前主持人）；该操作使用CAS并发安全机制，需传入会中当前主持人，如果操作失败可使用返回的最新数据重试\n         */\n        setHost: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/set_host`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 录制\n       */\n      meetingRecording: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/get document }\n         *\n         * 获取录制文件\n         *\n         * 获取一个会议的录制文件。\n         *\n         * 会议结束后并且收到了\"录制完成\"的事件方可获取录制文件；只有会议owner（通过开放平台预约的会议即为预约人）有权限获取；录制时间太短(&lt;5s)有可能无法生成录制文件\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=set_permission&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/set_permission document }\n         *\n         * 授权录制文件\n         *\n         * 将一个会议的录制文件授权给组织、用户或公开到公网\n         *\n         * 会议结束后并且收到了\"录制完成\"的事件方可进行授权；会议owner（通过开放平台预约的会议即为预约人）才有权限操作\n         */\n        setPermission: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording/set_permission`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=start&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/start document }\n         *\n         * 开始录制\n         *\n         * 在会议中开始录制。\n         *\n         * 会议正在进行中，且操作者具有相应权限（如果操作者为用户，必须是会中当前主持人）\n         */\n        start: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording/start`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=stop&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/stop document }\n         *\n         * 停止录制\n         *\n         * 在会议中停止录制。\n         *\n         * 会议正在录制中，且操作者具有相应权限（如果操作者为用户，必须是会中当前主持人）\n         */\n        stop: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording/stop`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * meeting_list\n       */\n      meetingList: {\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/meeting_list`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting_list&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=meeting_list&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meeting_list`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * participant_list\n       */\n      participantList: {\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_list`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=participant_list&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=participant_list&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_list`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * participant_quality_list\n       */\n      participantQualityList: {\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_quality_list`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=participant_quality_list&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=participant_quality_list&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_quality_list`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 会议报告\n       */\n      report: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=report&apiName=get_daily&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/report/get_daily document }\n         *\n         * 获取会议报告\n         *\n         * 获取一段时间内组织的每日会议使用报告。\n         *\n         * 支持最近90天内的数据查询\n         */\n        getDaily: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reports/get_daily`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=report&apiName=get_top_user&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/report/get_top_user document }\n         *\n         * 获取top用户列表\n         *\n         * 获取一段时间内组织内会议使用的top用户列表。\n         *\n         * 支持最近90天内的数据查询；默认返回前10位，最多可查询前100位\n         */\n        getTopUser: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reports/get_top_user`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 预约\n       */\n      reserve: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=apply&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/apply document }\n         *\n         * 预约会议\n         *\n         * 创建一个会议预约。\n         *\n         * 支持预约最近30天内的会议（到期时间距离当前时间不超过30天），预约到期后会议号将被释放，如需继续使用可通过\"更新预约\"接口进行续期；预约会议时可配置参会人在会中的权限，以达到控制会议的目的\n         */\n        apply: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/apply`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/delete document }\n         *\n         * 删除预约\n         *\n         * 删除一个预约\n         *\n         * 只能删除归属于自己的预约；删除后数据不可恢复\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/get document }\n         *\n         * 获取预约\n         *\n         * 获取一个预约的详情\n         *\n         * 只能获取归属于自己的预约\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=get_active_meeting&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/get_active_meeting document }\n         *\n         * 获取活跃会议\n         *\n         * 获取一个预约的当前活跃会议\n         *\n         * 只能获取归属于自己的预约的活跃会议（一个预约最多有一个正在进行中的会议）\n         */\n        getActiveMeeting: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id/get_active_meeting`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=update&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/update document }\n         *\n         * 更新预约\n         *\n         * 更新一个预约\n         *\n         * 只能更新归属于自己的预约，不需要更新的字段不传（如果传空则会被更新为空）；可用于续期操作，到期时间距离当前时间不超过30天\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * reserve_config.admin\n       */\n      reserveConfigAdmin: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.admin&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=reserve_config.admin&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/admin`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.admin&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=patch&project=vc&resource=reserve_config.admin&version=v1 document }\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/admin`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * reserve_config.form\n       */\n      reserveConfigForm: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.form&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=reserve_config.form&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/form`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.form&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=patch&project=vc&resource=reserve_config.form&version=v1 document }\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/form`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * reserve_config\n       */\n      reserveConfig: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve_config/patch document }\n         *\n         * 更新会议室预定范围\n         *\n         * 更新会议室预定范围\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config&apiName=reserve_scope&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve_config/reserve_scope document }\n         *\n         * 获取会议室预定范围\n         *\n         * 获取会议室预定范围\n         */\n        reserveScope: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/reserve_scope`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * resource_reservation_list\n       */\n      resourceReservationList: {\n        getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/resource_reservation_list`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=resource_reservation_list&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=resource_reservation_list&version=v1 document }\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/resource_reservation_list`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 会议室\n       */\n      room: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/create document }\n         *\n         * 创建会议室\n         *\n         * 该接口用于创建会议室\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=delete&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/delete document }\n         *\n         * 删除会议室\n         *\n         * 该接口可以用来删除某个会议室\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/:room_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/get document }\n         *\n         * 查询会议室详情\n         *\n         * 该接口可以使用会议室ID查询会议室详情\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/:room_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/list document }\n         *\n         * 查询会议室列表\n         *\n         * 该接口可以用来查询某个会议室层级下会议室列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=mget&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/mget document }\n         *\n         * 批量查询会议室详情\n         *\n         * 该接口可以使用会议室ID批量查询会议室详情\n         */\n        mget: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/mget`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/patch document }\n         *\n         * 更新会议室\n         *\n         * 该接口可以用来更新某个会议室的信息\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/:room_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=search&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/search document }\n         *\n         * 搜索会议室\n         *\n         * 该接口可以用来搜索会议室，支持使用关键词进行搜索，也支持使用自定义会议室ID进行查询\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/search`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * room_config\n       */\n      roomConfig: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_config&apiName=query&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=query&project=vc&resource=room_config&version=v1 document }\n         */\n        query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_configs/query`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_config&apiName=set&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=set&project=vc&resource=room_config&version=v1 document }\n         */\n        set: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_configs/set`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 会议室层级\n       */\n      roomLevel: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/create document }\n         *\n         * 创建会议室层级\n         *\n         * 该接口用于创建会议室层级\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=del&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/del document }\n         *\n         * 删除会议室层级\n         *\n         * 该接口可以用来删除某个会议室层级\n         */\n        del: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/del`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/get document }\n         *\n         * 查询会议室层级详情\n         *\n         * 该接口可以使用会议室层级ID查询会议室层级详情\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/:room_level_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=list&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/list document }\n         *\n         * 查询会议室层级列表\n         *\n         * 该接口用来查询某个会议室层级下的子层级列表\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=mget&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/mget document }\n         *\n         * 批量查询会议室层级详情\n         *\n         * 该接口可以使用会议室层级ID批量查询会议室层级详情\n         */\n        mget: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/mget`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=patch&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/patch document }\n         *\n         * 更新会议室层级\n         *\n         * 该接口可以用来更新某个会议室层级的信息\n         */\n        patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/:room_level_id`, path),\n            method: \"PATCH\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=search&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/search document }\n         *\n         * 搜索会议室层级\n         *\n         * 该接口可以用来搜索会议室层级，支持使用自定义会议室层级ID进行查询\n         */\n        search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/search`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 会议室配置\n       */\n      scopeConfig: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=scope_config&apiName=create&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/scope_config/create document }\n         *\n         * 设置会议室配置\n         *\n         * 该接口可以用来设置某个会议层级范围下或者某个会议室的配置\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/scope_config`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=vc&resource=scope_config&apiName=get&version=v1 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/scope_config/get document }\n         *\n         * 查询会议室配置\n         *\n         * 该接口可以用来查询某个会议层级范围下或者某个会议室的配置\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/vc/v1/scope_config`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n     * 云文档-知识库\n     */\n    this.wiki = {\n      /**\n       * 知识空间\n       */\n      space: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/create document }\n         *\n         * 创建知识空间\n         *\n         * 此接口用于创建知识空间\n         *\n         * 此接口不支持tenant access token（应用身份访问）\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=get&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/get document }\n         *\n         * 获取知识空间信息\n         *\n         * 此接口用于根据知识空间ID来查询知识空间的信息。;;空间类型（type）：;- 个人空间：归个人管理。一人仅可拥有一个个人空间，无法添加其他管理员。;- 团队空间：归团队（多人)管理，可添加多个管理员。;;空间可见性（visibility）：;- 公开空间：租户所有用户可见，默认为成员权限。无法额外添加成员，但可以添加管理员。;- 私有空间：仅对知识空间管理员、成员可见，需要手动添加管理员、成员。\n         *\n         * 本接口要求知识库权限：;- 需要为知识空间成员（管理员）\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=get_node&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/get_node document }\n         *\n         * 获取知识空间节点信息\n         *\n         * 获取知识空间节点信息\n         *\n         * 知识库权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 节点阅读权限\n         */\n        getNode: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/get_node`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=list&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/list document }\n         *\n         * 获取知识空间列表\n         *\n         * 此接口用于获取有权限访问的知识空间列表。;;此接口为分页接口。由于权限过滤，可能返回列表为空，但分页标记（has_more）为true，可以继续分页请求。;;对于知识空间各项属性描述请参阅[获取知识空间信息](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/get)\n         *\n         * 使用tenant access token调用时，请确认应用/机器人拥有部分知识空间的访问权限，否则返回列表容易为空。\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 空间成员\n       */\n      spaceMember: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.member&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-member/create document }\n         *\n         * 添加知识空间成员\n         *\n         * 添加知识空间成员或管理员。\n         *\n         * 知识空间具有[类型](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)和[可见性](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)的概念。不同的类型或可见性可以对本操作做出限制：;- 可见性限制：公开知识空间（visibility为public）对租户所有用户可见，因此不支持再添加成员，但可以添加管理员。;- 类型限制：个人知识空间 （type为person）为个人管理的知识空间，不支持添加其他管理员（包括应用/机器人）。但可以添加成员。;;;知识空间权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 为知识空间管理员\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/members`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.member&apiName=delete&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-member/delete document }\n         *\n         * 删除知识空间成员\n         *\n         * 此接口用于删除知识空间成员或管理员。\n         *\n         * 知识空间具有[类型](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)和[可见性](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)的概念。不同的类型或可见性可以对本操作做出限制：;- 可见性限制：公开知识空间（visibility为public）对租户所有用户可见，因此不支持再删除成员，但可以删除管理员。;- 类型限制：个人知识空间 （type为person）为个人管理的知识空间，不支持删除管理员。但可以删除成员。;;;知识空间权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 为知识空间管理员\n         */\n        delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/members/:member_id`, path),\n            method: \"DELETE\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 节点\n       */\n      spaceNode: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=copy&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/copy document }\n         *\n         * 创建知识空间节点副本\n         *\n         * 此接口用于在知识空间创建节点副本到指定位置。\n         */\n        copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/:node_token/copy`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=create&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/create document }\n         *\n         * 创建知识空间节点\n         *\n         * 此接口用于在知识节点里创建[节点](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)到指定位置。\n         *\n         * 知识空间权限要求，当前使用的 access token 所代表的应用或用户拥有：;- **父节点**容器编辑权限\n         */\n        create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          const sendRequest = innerPayload => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.httpInstance.request({\n              url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes`, path),\n              method: \"GET\",\n              headers: pickBy(innerPayload.headers, identity),\n              params: pickBy(innerPayload.params, identity)\n            }).catch(e => {\n              this.logger.error(formatErrors(e));\n            });\n            return res;\n          });\n          const Iterable = {\n            [Symbol.asyncIterator]() {\n              return __asyncGenerator(this, arguments, function* _a() {\n                let hasMore = true;\n                let pageToken;\n                while (hasMore) {\n                  try {\n                    const res = yield __await(sendRequest({\n                      headers,\n                      params: Object.assign(Object.assign({}, params), {\n                        page_token: pageToken\n                      }),\n                      data\n                    }));\n                    const _b = get(res, \"data\") || {},\n                      {\n                        // @ts-ignore\n                        has_more,\n                        // @ts-ignore\n                        page_token,\n                        // @ts-ignore\n                        next_page_token\n                      } = _b,\n                      rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                    yield yield __await(rest);\n                    hasMore = Boolean(has_more);\n                    pageToken = page_token || next_page_token;\n                  } catch (e) {\n                    yield yield __await(null);\n                    break;\n                  }\n                }\n              });\n            }\n          };\n          return Iterable;\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=list&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/list document }\n         *\n         * 获取知识空间子节点列表\n         *\n         * 此接口用于分页获取Wiki节点的子节点列表。;;此接口为分页接口。由于权限过滤，可能返回列表为空，但分页标记（has_more）为true，可以继续分页请求。\n         *\n         * 知识库权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 父节点阅读权限\n         */\n        list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=move&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/move document }\n         *\n         * 移动知识空间节点\n         *\n         * 此方法用于在Wiki内移动节点，支持跨知识空间移动。如果有子节点，会携带子节点一起移动。\n         *\n         * 知识库权限要求：;- 节点编辑权限;- 原父节点容器编辑权限;- 目的父节点容器编辑权限\n         */\n        move: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/:node_token/move`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=move_docs_to_wiki&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/move_docs_to_wiki document }\n         *\n         * 移动云空间文档至知识空间\n         *\n         * 该接口允许移动云空间文档至知识空间，并挂载在指定位置\n         *\n         * 此接口为异步接口。若移动已完成（或文档已在Wiki中），则直接返回结果（Wiki token）。若尚未完成，则返回task id。请使用[获取任务结果](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/task/get)接口进行查询。;;知识库权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 文档可管理权限;- 原文件夹编辑权限;- 目标父节点容器编辑权限\n         *\n         * ### 移动操作 ###;移动后，文档将从“我的空间”或“共享空间”转移至“知识库”后，无法从下列入口查看到文档：;- 云空间主页：快速访问;- 我的空间;- 共享空间;;### 权限变更 ###;移动后，文档会向所有可查看“页面树”的用户显示，默认继承父页面的权限设置。;</md-alert\n         */\n        moveDocsToWiki: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/move_docs_to_wiki`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        }),\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=update_title&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/update_title document }\n         *\n         * 更新知识空间节点标题\n         *\n         * 此接口用于更新节点标题\n         *\n         * 此接口目前仅支持文档(doc)、新版文档(docx)和快捷方式。\n         */\n        updateTitle: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/:node_token/update_title`, path),\n            method: \"POST\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 空间设置\n       */\n      spaceSetting: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.setting&apiName=update&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-setting/update document }\n         *\n         * 更新知识空间设置\n         *\n         * 根据space_id更新知识空间公共设置\n         *\n         * 知识库权限要求：;- 为知识空间管理员\n         */\n        update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/setting`, path),\n            method: \"PUT\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      },\n      /**\n       * 云文档\n       */\n      task: {\n        /**\n         * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=task&apiName=get&version=v2 click to debug }\n         *\n         * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/task/get document }\n         *\n         * 获取任务结果\n         *\n         * 该方法用于获取wiki异步任务的结果\n         *\n         * 知识库权限要求，当前 access token 所代表的用户或应用（机器人）：;- 为任务创建者\n         */\n        get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n          const {\n            headers,\n            params,\n            data,\n            path\n          } = yield this.formatPayload(payload, options);\n          return this.httpInstance.request({\n            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/tasks/:task_id`, path),\n            method: \"GET\",\n            data,\n            params,\n            headers\n          }).catch(e => {\n            this.logger.error(formatErrors(e));\n            throw e;\n          });\n        })\n      }\n    };\n    /**\n         \n         */\n    this.workplace = {};\n  }\n}\nconst defaultLogger = {\n  error: function () {\n    for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n      msg[_key] = arguments[_key];\n    }\n    console.log('[error]:', ...msg);\n  },\n  warn: function () {\n    for (var _len2 = arguments.length, msg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      msg[_key2] = arguments[_key2];\n    }\n    console.warn('[warn]:', ...msg);\n  },\n  info: function () {\n    for (var _len3 = arguments.length, msg = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      msg[_key3] = arguments[_key3];\n    }\n    console.info('[info]:', ...msg);\n  },\n  debug: function () {\n    for (var _len4 = arguments.length, msg = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      msg[_key4] = arguments[_key4];\n    }\n    console.debug('[debug]:', ...msg);\n  },\n  trace: function () {\n    for (var _len5 = arguments.length, msg = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      msg[_key5] = arguments[_key5];\n    }\n    console.trace('[trace]:', ...msg);\n  }\n};\nclass LoggerProxy {\n  constructor(level, logger) {\n    this.level = level;\n    this.logger = logger;\n  }\n  error() {\n    if (this.level >= LoggerLevel.error) {\n      for (var _len6 = arguments.length, msg = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        msg[_key6] = arguments[_key6];\n      }\n      this.logger.error(msg);\n    }\n  }\n  warn() {\n    if (this.level >= LoggerLevel.warn) {\n      for (var _len7 = arguments.length, msg = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        msg[_key7] = arguments[_key7];\n      }\n      this.logger.warn(msg);\n    }\n  }\n  info() {\n    if (this.level >= LoggerLevel.info) {\n      for (var _len8 = arguments.length, msg = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        msg[_key8] = arguments[_key8];\n      }\n      this.logger.info(msg);\n    }\n  }\n  debug() {\n    if (this.level >= LoggerLevel.debug) {\n      for (var _len9 = arguments.length, msg = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        msg[_key9] = arguments[_key9];\n      }\n      this.logger.debug(msg);\n    }\n  }\n  trace() {\n    if (this.level >= LoggerLevel.trace) {\n      for (var _len10 = arguments.length, msg = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        msg[_key10] = arguments[_key10];\n      }\n      this.logger.trace(msg);\n    }\n  }\n}\nclass AppTicketManager {\n  constructor(params) {\n    this.appId = params.appId;\n    this.appSecret = params.appSecret;\n    this.cache = params.cache;\n    this.domain = params.domain;\n    this.logger = params.logger;\n    this.appType = params.appType;\n    this.httpInstance = params.httpInstance;\n    this.logger.debug('app ticket manager is ready');\n    this.checkAppTicket();\n  }\n  checkAppTicket() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.appType === AppType.ISV) {\n        const appTicket = yield (_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(CAppTicket, {\n          namespace: this.appId\n        });\n        if (!appTicket) {\n          this.requestAppTicket();\n        }\n      }\n    });\n  }\n  requestAppTicket() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.logger.debug('request app ticket');\n      yield this.httpInstance.post(`${this.domain}/open-apis/auth/v3/app_ticket/resend`, {\n        app_id: this.appId,\n        app_secret: this.appSecret\n      }).catch(e => {\n        this.logger.error(e);\n      });\n    });\n  }\n  getAppTicket() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const appTicket = yield (_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(CAppTicket, {\n        namespace: this.appId\n      });\n      if (appTicket) {\n        this.logger.debug('use cache app ticket');\n        return appTicket;\n      }\n      yield this.requestAppTicket();\n      return undefined;\n    });\n  }\n}\nclass TokenManager {\n  constructor(params) {\n    this.appId = params.appId;\n    this.appSecret = params.appSecret;\n    this.cache = params.cache;\n    this.domain = params.domain;\n    this.logger = params.logger;\n    this.appType = params.appType;\n    this.httpInstance = params.httpInstance;\n    this.appTicketManager = new AppTicketManager({\n      appId: this.appId,\n      appSecret: this.appSecret,\n      cache: this.cache,\n      domain: this.domain,\n      logger: this.logger,\n      appType: this.appType,\n      httpInstance: this.httpInstance\n    });\n    this.logger.debug('token manager is ready');\n  }\n  getCustomTenantAccessToken() {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      const cachedTenantAccessToken = yield (_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(CTenantAccessToken, {\n        namespace: this.appId\n      });\n      if (cachedTenantAccessToken) {\n        this.logger.debug('use cache token');\n        return cachedTenantAccessToken;\n      }\n      this.logger.debug('request token');\n      // @ts-ignore\n      const {\n        tenant_access_token,\n        expire\n      } = yield this.httpInstance.post(`${this.domain}/open-apis/auth/v3/tenant_access_token/internal`, {\n        app_id: this.appId,\n        app_secret: this.appSecret\n      }).catch(e => {\n        this.logger.error(e);\n      });\n      yield (_b = this.cache) === null || _b === void 0 ? void 0 : _b.set(CTenantAccessToken, tenant_access_token,\n      // Due to the time-consuming network, the expiration time needs to be 3 minutes earlier\n      new Date().getTime() + expire * 1000 - 3 * 60 * 1000, {\n        namespace: this.appId\n      });\n      return tenant_access_token;\n    });\n  }\n  getMarketTenantAccessToken(tenantKey) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!tenantKey) {\n        this.logger.error('market app request need tenant key');\n        return undefined;\n      }\n      const tenantAccessToken = yield (_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(`larkMarketAccessToken${tenantKey}`, {\n        namespace: this.appId\n      });\n      if (tenantAccessToken) {\n        this.logger.debug('use cache token');\n        return tenantAccessToken;\n      }\n      this.logger.debug('get app ticket');\n      const appTicket = yield this.appTicketManager.getAppTicket();\n      if (!appTicket) {\n        this.logger.warn('no app ticket');\n        return undefined;\n      }\n      this.logger.debug('get app access token');\n      // 获取app_access_token\n      // @ts-ignore\n      const {\n        app_access_token\n      } = yield this.httpInstance.post(`${this.domain}/open-apis/auth/v3/app_access_token`, {\n        app_id: this.appId,\n        app_secret: this.appSecret,\n        app_ticket: appTicket\n      }).catch(e => {\n        this.logger.error(e);\n      });\n      this.logger.debug('get tenant access token');\n      // 获取tenant_access_token\n      // @ts-ignore\n      const {\n        tenant_access_token,\n        expire\n      } = yield this.httpInstance.post(`${this.domain}/open-apis/auth/v3/tenant_access_token`, {\n        app_access_token,\n        tenant_key: tenantKey\n      }).catch(e => {\n        this.logger.error(e);\n      });\n      // 设置tenant_access_token\n      yield this.cache.set(`larkMarketAccessToken${tenantKey}`, tenant_access_token,\n      // Due to the time-consuming network, the expiration time needs to be 3 minutes earlier\n      new Date().getTime() + expire * 1000 - 3 * 60 * 1000, {\n        namespace: this.appId\n      });\n      return tenant_access_token;\n    });\n  }\n  getTenantAccessToken(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      assert(this.appType === AppType.SelfBuild, () => __awaiter(this, void 0, void 0, function* () {\n        this.logger.debug('get custom app token');\n      }));\n      assert(this.appType === AppType.ISV, () => __awaiter(this, void 0, void 0, function* () {\n        this.logger.debug('get market app token ');\n      }));\n      // prettier-ignore\n      const tenantAccessToken = this.appType === AppType.SelfBuild ? yield this.getCustomTenantAccessToken() : yield this.getMarketTenantAccessToken(get(params, CTenantKey));\n      return tenantAccessToken;\n    });\n  }\n}\nclass Client extends Client$1 {\n  constructor(params) {\n    super();\n    this.appId = '';\n    this.appSecret = '';\n    this.helpDeskId = '';\n    this.helpDeskToken = '';\n    this.appType = AppType.SelfBuild;\n    this.logger = new LoggerProxy(params.loggerLevel || LoggerLevel.info, params.logger || defaultLogger);\n    this.appId = params.appId;\n    this.appSecret = params.appSecret;\n    this.disableTokenCache = params.disableTokenCache;\n    assert(!this.appId, () => this.logger.error('appId is needed'));\n    assert(!this.appSecret, () => this.logger.error('appSecret is needed'));\n    this.helpDeskId = params.helpDeskId;\n    this.helpDeskToken = params.helpDeskToken;\n    this.appType = get(params, 'appType', AppType.SelfBuild);\n    this.domain = formatDomain(params.domain || Domain.Feishu);\n    this.logger.debug(`use domain url: ${this.domain}`);\n    this.cache = params.cache || internalCache;\n    this.httpInstance = params.httpInstance || defaultHttpInstance;\n    this.tokenManager = new TokenManager({\n      appId: this.appId,\n      appSecret: this.appSecret,\n      cache: this.cache,\n      domain: this.domain,\n      logger: this.logger,\n      appType: this.appType,\n      httpInstance: this.httpInstance\n    });\n    this.logger.info('client ready');\n  }\n  formatPayload(payload, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const targetOptions = ['lark', 'params', 'data', 'headers', 'path'].reduce((acc, key) => {\n        acc[key] = get(options, key, {});\n        return acc;\n      }, {});\n      const userAccessToken = get(targetOptions.lark, CWithUserAccessToken);\n      if (userAccessToken) {\n        this.logger.debug('use passed token');\n        targetOptions.headers.Authorization = `Bearer ${userAccessToken}`;\n      } else if (!this.disableTokenCache) {\n        const tenantAccessToken = yield this.tokenManager.getTenantAccessToken({\n          [CTenantKey]: get(targetOptions.lark, CTenantKey)\n        });\n        if (tenantAccessToken) {\n          targetOptions.headers.Authorization = `Bearer ${tenantAccessToken}`;\n        } else {\n          this.logger.warn('failed to obtain token');\n        }\n      }\n      // helpDeskCredential\n      const withHelpDeskCredential = get(targetOptions.lark, CWithHelpdeskAuthorization);\n      if (withHelpDeskCredential) {\n        this.logger.debug('generate help desk credential');\n        const helpDeskCredential = string2Base64(`${this.helpDeskId}:${this.helpDeskToken}`);\n        targetOptions.headers['X-Lark-Helpdesk-Authorization'] = `Bearer ${helpDeskCredential}`;\n      }\n      return {\n        params: Object.assign(Object.assign({}, get(payload, 'params', {})), targetOptions.params),\n        headers: Object.assign(Object.assign({}, get(payload, 'headers', {})), targetOptions.headers),\n        data: Object.assign(Object.assign({}, get(payload, 'data', {})), targetOptions.data),\n        path: Object.assign(Object.assign({}, get(payload, 'path', {})), targetOptions.path)\n      };\n    });\n  }\n  request(payload, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n          data,\n          params,\n          headers,\n          url\n        } = payload,\n        rest = __rest(payload, [\"data\", \"params\", \"headers\", \"url\"]);\n      const formatPayload = yield this.formatPayload({\n        data,\n        params,\n        headers\n      }, options);\n      this.logger.trace(`send request [${payload.method}]: ${payload.url}`);\n      const res = yield this.httpInstance.request(Object.assign(Object.assign({}, rest), {\n        url: /^http/.test(url) ? url : `${this.domain}/${formatUrl(url)}`,\n        headers: formatPayload.headers,\n        data: formatPayload.data,\n        params: formatPayload.params\n      })).catch(e => {\n        this.logger.error(e);\n        throw e;\n      });\n      return res;\n    });\n  }\n}\nconst withAll = withList => withList.reduce((acc, cur) => merge(acc, cur), {});\nconst withTenantKey = tenantKey => ({\n  lark: {\n    [CTenantKey]: tenantKey\n  }\n});\nconst withHelpDeskCredential = () => ({\n  lark: {\n    [CWithHelpdeskAuthorization]: true\n  }\n});\nconst withTenantToken = tenantAccessToken => ({\n  headers: {\n    Authorization: `Bearer ${tenantAccessToken}`\n  }\n});\nconst withUserAccessToken = userAccessToken => ({\n  lark: {\n    [CWithUserAccessToken]: userAccessToken\n  }\n});\nclass RequestHandle {\n  constructor(params) {\n    const {\n      encryptKey,\n      verificationToken,\n      logger\n    } = params;\n    this.verificationToken = verificationToken;\n    this.encryptKey = encryptKey;\n    this.logger = logger;\n    if (encryptKey) {\n      this.aesCipher = new AESCipher(encryptKey);\n    }\n  }\n  parse(data) {\n    const targetData = (() => {\n      var _a;\n      const _b = data || {},\n        {\n          encrypt\n        } = _b,\n        rest = __rest(_b, [\"encrypt\"]);\n      if (encrypt) {\n        try {\n          return Object.assign(Object.assign({}, JSON.parse((_a = this.aesCipher) === null || _a === void 0 ? void 0 : _a.decrypt(encrypt))), rest);\n        } catch (e) {\n          this.logger.error('parse encrypt data failed');\n          return {};\n        }\n      }\n      return rest;\n    })();\n    // v1和v2版事件的区别：https://open.feishu.cn/document/ukTMukTMukTM/uUTNz4SN1MjL1UzM\n    if ('schema' in targetData) {\n      const {\n          header,\n          event\n        } = targetData,\n        rest = __rest(targetData, [\"header\", \"event\"]);\n      return Object.assign(Object.assign(Object.assign({\n        [CEventType]: get(targetData, 'header.event_type')\n      }, rest), header), event);\n    }\n    const {\n        event\n      } = targetData,\n      rest = __rest(targetData, [\"event\"]);\n    return Object.assign(Object.assign({\n      [CEventType]: get(targetData, 'event.type')\n    }, event), rest);\n  }\n  checkIsCardEventValidated(data) {\n    const {\n      'x-lark-request-timestamp': timestamp,\n      'x-lark-request-nonce': nonce,\n      'x-lark-signature': signature\n    } = data.headers;\n    if (!this.verificationToken) {\n      return true;\n    }\n    const computedSignature = crypto.createHash('sha1').update(timestamp + nonce + this.verificationToken + JSON.stringify(data)).digest('hex');\n    return computedSignature === signature;\n  }\n  checkIsEventValidated(data) {\n    if (!this.encryptKey) {\n      return true;\n    }\n    const {\n      'x-lark-request-timestamp': timestamp,\n      'x-lark-request-nonce': nonce,\n      'x-lark-signature': signature\n    } = data.headers;\n    const content = timestamp + nonce + this.encryptKey + JSON.stringify(data);\n    const computedSignature = crypto.createHash('sha256').update(content).digest('hex');\n    return computedSignature === signature;\n  }\n}\nconst CAppTicketHandle = 'app_ticket';\nclass EventDispatcher {\n  constructor(params) {\n    this.verificationToken = '';\n    this.encryptKey = '';\n    this.handles = new Map();\n    const {\n      encryptKey,\n      verificationToken\n    } = params;\n    this.encryptKey = encryptKey || '';\n    this.verificationToken = verificationToken || '';\n    this.logger = new LoggerProxy(params.loggerLevel || LoggerLevel.info, params.logger || defaultLogger);\n    this.requestHandle = new RequestHandle({\n      encryptKey,\n      verificationToken,\n      logger: this.logger\n    });\n    this.cache = params.cache || internalCache;\n    this.registerAppTicketHandle();\n    this.logger.info('event-dispatch is ready');\n  }\n  registerAppTicketHandle() {\n    this.register({\n      app_ticket: data => __awaiter(this, void 0, void 0, function* () {\n        const {\n          app_ticket,\n          app_id\n        } = data;\n        if (app_ticket) {\n          yield this.cache.set(CAppTicket, app_ticket, undefined, {\n            namespace: app_id\n          });\n          this.logger.debug('set app ticket');\n        } else {\n          this.logger.warn('response not include app ticket');\n        }\n      })\n    });\n  }\n  register(handles) {\n    Object.keys(handles).forEach(key => {\n      if (this.handles.has(key) && key !== CAppTicketHandle) {\n        this.logger.error(`this ${key} handle is registered`);\n      }\n      this.handles.set(key, handles[key]);\n      this.logger.debug(`register ${key} handle`);\n    });\n    return this;\n  }\n  invoke(data) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!((_a = this.requestHandle) === null || _a === void 0 ? void 0 : _a.checkIsEventValidated(data))) {\n        this.logger.warn('verification failed event');\n        return undefined;\n      }\n      const targetData = (_b = this.requestHandle) === null || _b === void 0 ? void 0 : _b.parse(data);\n      const type = targetData[CEventType];\n      if (this.handles.has(type)) {\n        const ret = yield this.handles.get(type)(targetData);\n        this.logger.debug(`execute ${type} handle`);\n        return ret;\n      }\n      this.logger.warn(`no ${type} handle`);\n      return `no ${type} event handle`;\n    });\n  }\n}\nclass CardActionHandler {\n  constructor(params, cardHandler) {\n    this.verificationToken = '';\n    this.encryptKey = '';\n    this.handles = new Map();\n    const {\n      verificationToken,\n      encryptKey\n    } = params;\n    this.encryptKey = encryptKey || '';\n    this.verificationToken = verificationToken || '';\n    this.cardHandler = cardHandler;\n    this.logger = new LoggerProxy(params.loggerLevel || LoggerLevel.info, params.logger || defaultLogger);\n    this.requestHandle = new RequestHandle({\n      encryptKey,\n      verificationToken,\n      logger: this.logger\n    });\n    this.cache = params.cache || internalCache;\n    this.registerAppTicketHandle();\n    this.logger.info('card-action-handle is ready');\n  }\n  registerAppTicketHandle() {\n    this.register({\n      app_ticket: data => __awaiter(this, void 0, void 0, function* () {\n        const {\n          app_ticket,\n          app_id\n        } = data;\n        if (app_ticket) {\n          yield this.cache.set(CAppTicket, app_ticket, undefined, {\n            namespace: app_id\n          });\n          this.logger.debug('set app ticket');\n        } else {\n          this.logger.warn('response not include app ticket');\n        }\n      })\n    });\n  }\n  register(handles) {\n    Object.keys(handles).forEach(key => {\n      this.handles.set(key, handles[key]);\n      this.logger.debug(`register ${key} handle`);\n    });\n    return this;\n  }\n  invoke(data) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!((_a = this.requestHandle) === null || _a === void 0 ? void 0 : _a.checkIsCardEventValidated(data))) {\n        this.logger.warn('verification failed event');\n        return undefined;\n      }\n      const targetData = (_b = this.requestHandle) === null || _b === void 0 ? void 0 : _b.parse(data);\n      const type = targetData[CEventType];\n      if (this.handles.has(type)) {\n        try {\n          const ret = yield this.handles.get(type)(targetData);\n          return ret;\n        } catch (e) {\n          this.logger.error(e);\n          return undefined;\n        }\n      }\n      try {\n        const result = yield this.cardHandler(targetData);\n        this.logger.debug('execute card handle');\n        return result;\n      } catch (e) {\n        this.logger.error(e);\n      }\n      return undefined;\n    });\n  }\n}\nconst pickRequestData = req => new Promise(resolve => {\n  let chunks = '';\n  req.on('data', chunk => {\n    chunks += chunk;\n  });\n  req.on('end', () => {\n    try {\n      const data = JSON.parse(chunks);\n      resolve(data);\n    } catch (e) {\n      resolve('');\n    }\n  });\n});\nconst generateChallenge = (data, options) => {\n  if ('encrypt' in data && !options.encryptKey) {\n    throw new Error('auto-challenge need encryptKey, please check for missing in dispatcher');\n  }\n  const targetData = 'encrypt' in data ? JSON.parse(new AESCipher(options.encryptKey).decrypt(data.encrypt)) : data;\n  return {\n    isChallenge: targetData.type === 'url_verification',\n    challenge: {\n      challenge: targetData.challenge\n    }\n  };\n};\nconst adaptDefault = (path, dispatcher, options) => (req, res) => __awaiter(void 0, void 0, void 0, function* () {\n  if (req.url !== path) {\n    return;\n  }\n  const data = Object.assign(Object.create({\n    headers: req.headers\n  }), yield pickRequestData(req));\n  // 是否自动响应challange事件：\n  // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n  const autoChallenge = get(options, 'autoChallenge', false);\n  if (autoChallenge) {\n    const {\n      isChallenge,\n      challenge\n    } = generateChallenge(data, {\n      encryptKey: dispatcher.encryptKey\n    });\n    if (isChallenge) {\n      res.end(JSON.stringify(challenge));\n      return;\n    }\n  }\n  const value = yield dispatcher.invoke(data);\n  // event don't need response\n  if (dispatcher instanceof CardActionHandler) {\n    res.end(JSON.stringify(value));\n  }\n  res.end('');\n});\nconst adaptExpress = (dispatcher, options) => (req, res) => __awaiter(void 0, void 0, void 0, function* () {\n  const reqData = yield (() => __awaiter(void 0, void 0, void 0, function* () {\n    if (req.body) {\n      return req.body;\n    }\n    if (!req.complete) {\n      const incomingdata = yield pickRequestData(req);\n      return incomingdata;\n    }\n    get(options, 'logger', defaultLogger).error('unable to obtain request body, if parsed it in other middleware, please manually set in ctx.request.body');\n    return null;\n  }))();\n  const data = Object.assign(Object.create({\n    headers: req.headers\n  }), reqData);\n  // 是否自动响应challange事件：\n  // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n  const autoChallenge = get(options, 'autoChallenge', false);\n  if (autoChallenge) {\n    const {\n      isChallenge,\n      challenge\n    } = generateChallenge(data, {\n      encryptKey: dispatcher.encryptKey\n    });\n    if (isChallenge) {\n      res.json(challenge);\n      return;\n    }\n  }\n  const value = yield dispatcher.invoke(data);\n  // event don't need response\n  if (dispatcher instanceof CardActionHandler) {\n    res.json(value);\n  }\n  res.end('');\n});\nconst adaptKoa = (path, dispatcher, options) => (ctx, next) => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    originalUrl,\n    req,\n    request\n  } = ctx;\n  if (originalUrl === path) {\n    const reqData = yield (() => __awaiter(void 0, void 0, void 0, function* () {\n      if (request.body) {\n        return request.body;\n      }\n      if (!req.complete) {\n        const incomingdata = yield pickRequestData(req);\n        return incomingdata;\n      }\n      get(options, 'logger', defaultLogger).error('unable to obtain request body, if parsed it in other middleware, please manually set in ctx.request.body');\n      return null;\n    }))();\n    const data = Object.assign(Object.create({\n      headers: req.headers\n    }), reqData);\n    // 是否自动响应challange事件：\n    // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n    const autoChallenge = get(options, 'autoChallenge', false);\n    if (autoChallenge) {\n      const {\n        isChallenge,\n        challenge\n      } = generateChallenge(data, {\n        encryptKey: dispatcher.encryptKey\n      });\n      if (isChallenge) {\n        ctx.body = challenge;\n        yield next();\n        return;\n      }\n    }\n    const value = yield dispatcher.invoke(data);\n    // event don't need response\n    if (dispatcher instanceof CardActionHandler) {\n      ctx.body = JSON.stringify(value);\n    } else {\n      ctx.body = '';\n    }\n  }\n  yield next();\n});\nconst adaptKoaRouter = (dispatcher, options) => (ctx, next) => __awaiter(void 0, void 0, void 0, function* () {\n  const {\n    req,\n    request\n  } = ctx;\n  const reqData = yield (() => __awaiter(void 0, void 0, void 0, function* () {\n    if (request.body) {\n      return request.body;\n    }\n    if (!req.complete) {\n      const incomingdata = yield pickRequestData(req);\n      return incomingdata;\n    }\n    get(options, 'logger', defaultLogger).error('unable to obtain request body, if parsed it in other middleware, please manually set in ctx.request.body');\n    return null;\n  }))();\n  const data = Object.assign(Object.create({\n    headers: req.headers\n  }), reqData);\n  // 是否自动响应challange事件：\n  // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n  const autoChallenge = get(options, 'autoChallenge', false);\n  if (autoChallenge) {\n    const {\n      isChallenge,\n      challenge\n    } = generateChallenge(data, {\n      encryptKey: dispatcher.encryptKey\n    });\n    if (isChallenge) {\n      ctx.body = challenge;\n      yield next();\n      return;\n    }\n  }\n  const value = yield dispatcher.invoke(data);\n  // event don't need response\n  if (dispatcher instanceof CardActionHandler) {\n    ctx.body = JSON.stringify(value);\n  } else {\n    ctx.body = '';\n  }\n  yield next();\n});\nconst defaultCard = variables => {\n  const {\n    title,\n    content\n  } = variables;\n  return JSON.stringify({\n    \"config\": {\n      \"wide_screen_mode\": true\n    },\n    \"elements\": [{\n      \"tag\": \"markdown\",\n      \"content\": content\n    }],\n    \"header\": {\n      \"template\": \"blue\",\n      \"title\": {\n        \"content\": title,\n        \"tag\": \"plain_text\"\n      }\n    }\n  });\n};\nvar messageCard = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  defaultCard: defaultCard\n});\nexport { AESCipher, AppType, CAppTicket, CTenantAccessToken, CardActionHandler, Client, Domain, EventDispatcher, LoggerLevel, adaptDefault, adaptExpress, adaptKoa, adaptKoaRouter, defaultHttpInstance, generateChallenge, messageCard, withAll, withHelpDeskCredential, withTenantKey, withTenantToken, withUserAccessToken };","map":{"version":3,"names":["get","axios","AxiosError","crypto","identity","pickBy","fs","pick","merge","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","__await","v","__asyncGenerator","Symbol","asyncIterator","TypeError","g","q","verb","n","a","b","push","resume","settle","r","fulfill","f","shift","defaultHttpInstance","create","interceptors","request","use","req","headers","undefined","synchronous","response","resp","data","AppType","Domain","LoggerLevel","CEventType","CTenantKey","CAppTicket","CTenantAccessToken","CWithHelpdeskAuthorization","CWithUserAccessToken","string2Base64","content","Buffer","from","toString","DefaultCache","constructor","values","Map","getCacheKey","key","namespace","options","cacheKey","expiredTime","Date","getTime","set","internalCache","AESCipher","hash","createHash","update","digest","decrypt","encrypt","encryptBuffer","decipher","createDecipheriv","slice","decrypted","final","formatDomain","domain","Feishu","Lark","fillApiPath","apiPath","pathSupplement","arguments","replace","_","$1","Error","assert","predication","callback","isInvoke","formatUrl","url","formatErrors","message","config","filteredErrorInfo","errors","specificError","Client$1","acs","accessRecordAccessPhoto","payload","params","path","formatPayload","res","httpInstance","method","responseType","catch","logger","error","writeFile","filePath","writableStream","createWriteStream","on","pipe","accessRecord","listWithIterator","sendRequest","innerPayload","Iterable","_a","hasMore","pageToken","assign","page_token","_b","has_more","next_page_token","rest","Boolean","list","device","userFace","user","patch","admin","adminDeptStat","adminUserStat","badge","badgeGrant","delete","badgeImage","password","reset","application","appRecommendRule","applicationAppUsage","overview","applicationAppVersion","contactsRangeSuggest","contactsRangeConfiguration","underauditlistWithIterator","underauditlist","applicationFeedback","applicationVisibility","checkWhiteBlackList","approval","subscribe","unsubscribe","externalApproval","externalInstance","check","externalTask","instance","addSign","cancel","cc","preview","queryWithIterator","query","searchCc","specifiedRollback","instanceComment","remove","task","approve","resubmit","search","transfer","attendance","approvalInfo","process","file","download","upload","group","userApproval","userDailyShift","batchCreate","userFlow","userSetting","modify","userStatsData","userStatsField","userStatsView","userTask","userTaskRemedy","queryUserAllowedRemedys","auth","appAccessToken","internal","appTicket","resend","tenantAccessToken","authen","accessToken","refreshAccessToken","userInfo","aweme_ecosystem","baike","classification","draft","entity","extract","highlight","match","searchWithIterator","bitable","app","copy","appDashboard","appRole","appRoleMember","batchDelete","appTable","appTableField","appTableFormField","appTableForm","appTableRecord","batchUpdate","appTableView","block","calendar","calendarAcl","subscription","unsubscription","primary","calendarEventAttendee","calendarEventAttendeeChatMember","calendarEvent","exchangeBinding","freebusy","setting","generateCaldavConf","timeoffEvent","comment_sdk","contact","customAttr","department","childrenWithIterator","children","parentWithIterator","parent","unbindDepartmentChat","employeeTypeEnum","functionalRole","functionalRoleMember","scopes","memberBelong","simplelistWithIterator","simplelist","groupMember","add","batchAdd","batchRemove","jobFamily","jobLevel","scope","unit","bindDepartment","listDepartment","unbindDepartment","batchGetId","findByDepartmentWithIterator","findByDepartment","resurrect","content_check","contract","corehr","leave","leaveRequestHistory","docs_tool","docx","documentBlock","documentBlockChildren","getWithIterator","document","rawContent","drive","exportTask","fileComment","batchQuery","fileCommentReply","createFolder","createShortcut","move","taskCheck","uploadAll","uploadFinish","uploadPart","uploadPrepare","fileStatistics","fileSubscription","fileVersion","importTask","media","batchGetTmpDownloadUrl","meta","permissionMember","transferOwner","permissionPublic","permissionPublicPassword","edu","ehr","attachment","employee","elearning","event","outboundIp","exam","face_detection","feelgood","gray_test_open_sg","moto","helpdesk","agent","agentEmail","agentSchedules","agentSchedule","agentSkill","agentSkillRule","botMessage","category","faq","faqImage","notification","cancelApprove","cancelSend","executeSend","submitApprove","ticket","answerUserQuery","customizedFields","startService","ticketImage","ticketMessage","ticketCustomizedField","hire","offer","terminate","transferOnboard","applicationInterview","ehrImportTask","getByApplication","evaluation","externalApplication","externalBackgroundCheck","externalInterview","externalInterviewAssessment","job","combinedCreate","combinedUpdate","updateConfig","jobManager","jobProcess","note","internOfferStatus","offerStatus","offerSchema","questionnaire","referral","resumeSource","talent","addToFolder","talentFolder","human_authentication","im","batchMessage","getProgress","readUser","chatAnnouncement","chat","link","chatManagers","addManagers","deleteManagers","chatMembers","isInChat","meJoin","chatMenuItem","chatMenuTree","sort","chatModeration","chatTab","deleteTabs","listTabs","sortTabs","updateTabs","chatTopNotice","deleteTopNotice","putTopNotice","image","forward","mergeForward","readUsers","reply","urgentApp","urgentPhone","urgentSms","createByCard","template_id","template_variable","targetData","msg_type","JSON","stringify","type","replyByCard","messageReaction","messageResource","pin","mail","mailgroupAlias","mailgroup","mailgroupMember","mailgroupPermissionMember","publicMailboxAlias","publicMailbox","publicMailboxMember","clear","userMailboxAlias","userMailbox","mdm","meeting_room","moments","okr","metricSource","metricSourceTableItem","metricSourceTable","batchGet","period","progressRecord","userOkr","optical_char_recognition","basicRecognize","passport","session","people_admin","people_bytedance","report","search_in_app","dataSource","dataSourceItem","schema","security_and_compliance","sheets","spreadsheet","spreadsheetSheetFilter","spreadsheetSheetFilterViewCondition","spreadsheetSheetFilterView","spreadsheetSheet","find","moveDimension","spreadsheetSheetFloatImage","speech_to_text","speech","fileRecognize","streamRecognize","spend","sup_project","batchDeleteCollaborator","batchDeleteFollower","complete","uncomplete","taskCollaborator","taskComment","taskFollower","taskReminder","tenant","tenantProductAssignInfo","translation","text","detect","translate","unified_kms_log","vc","alert","export","meetingList","participantList","participantQualityList","resourceReservationList","meeting","end","invite","kickout","listByNoWithIterator","listByNo","setHost","meetingRecording","setPermission","start","stop","getDaily","getTopUser","reserve","getActiveMeeting","reserveConfigAdmin","reserveConfigForm","reserveConfig","reserveScope","room","mget","roomConfig","roomLevel","del","scopeConfig","wiki","space","getNode","spaceMember","spaceNode","moveDocsToWiki","updateTitle","spaceSetting","workplace","defaultLogger","_len","msg","Array","_key","console","log","warn","_len2","_key2","info","_len3","_key3","debug","_len4","_key4","trace","_len5","_key5","LoggerProxy","level","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","AppTicketManager","appId","appSecret","cache","appType","checkAppTicket","ISV","requestAppTicket","post","app_id","app_secret","getAppTicket","TokenManager","appTicketManager","getCustomTenantAccessToken","cachedTenantAccessToken","tenant_access_token","expire","getMarketTenantAccessToken","tenantKey","app_access_token","app_ticket","tenant_key","getTenantAccessToken","SelfBuild","Client","helpDeskId","helpDeskToken","loggerLevel","disableTokenCache","tokenManager","targetOptions","reduce","acc","userAccessToken","lark","Authorization","withHelpDeskCredential","helpDeskCredential","test","withAll","withList","cur","withTenantKey","withTenantToken","withUserAccessToken","RequestHandle","encryptKey","verificationToken","aesCipher","parse","header","checkIsCardEventValidated","timestamp","nonce","signature","computedSignature","checkIsEventValidated","CAppTicketHandle","EventDispatcher","handles","requestHandle","registerAppTicketHandle","register","keys","forEach","has","invoke","ret","CardActionHandler","cardHandler","pickRequestData","chunks","chunk","generateChallenge","isChallenge","challenge","adaptDefault","dispatcher","autoChallenge","adaptExpress","reqData","body","incomingdata","json","adaptKoa","ctx","originalUrl","adaptKoaRouter","defaultCard","variables","title","messageCard","freeze","__proto__"],"sources":["G:/230310pythonproject/230517-gpt-API/my-react-app/node_modules/@larksuiteoapi/node-sdk/es/index.js"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2022 Lark Technologies Pte. Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport get from 'lodash.get';\nimport axios, { AxiosError } from 'axios';\nimport crypto from 'crypto';\nimport identity from 'lodash.identity';\nimport pickBy from 'lodash.pickby';\nimport fs from 'fs';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\n\nconst defaultHttpInstance = axios.create();\ndefaultHttpInstance.interceptors.request.use((req) => {\n    if (req.headers) {\n        req.headers['User-Agent'] = 'oapi-node-sdk/1.0.0';\n    }\n    return req;\n}, undefined, { synchronous: true });\ndefaultHttpInstance.interceptors.response.use((resp) => resp.data);\n\nvar AppType;\n(function (AppType) {\n    AppType[AppType[\"SelfBuild\"] = 0] = \"SelfBuild\";\n    AppType[AppType[\"ISV\"] = 1] = \"ISV\";\n})(AppType || (AppType = {}));\nvar Domain;\n(function (Domain) {\n    Domain[Domain[\"Feishu\"] = 0] = \"Feishu\";\n    Domain[Domain[\"Lark\"] = 1] = \"Lark\";\n})(Domain || (Domain = {}));\nvar LoggerLevel;\n(function (LoggerLevel) {\n    LoggerLevel[LoggerLevel[\"fatal\"] = 0] = \"fatal\";\n    LoggerLevel[LoggerLevel[\"error\"] = 1] = \"error\";\n    LoggerLevel[LoggerLevel[\"warn\"] = 2] = \"warn\";\n    LoggerLevel[LoggerLevel[\"info\"] = 3] = \"info\";\n    LoggerLevel[LoggerLevel[\"debug\"] = 4] = \"debug\";\n    LoggerLevel[LoggerLevel[\"trace\"] = 5] = \"trace\";\n})(LoggerLevel || (LoggerLevel = {}));\n\nconst CEventType = Symbol('event-type');\nconst CTenantKey = Symbol('tenant-key');\nconst CAppTicket = Symbol('app-ticket');\nconst CTenantAccessToken = Symbol('tenant-access-token');\nconst CWithHelpdeskAuthorization = Symbol('with-helpdesk-authorization');\nconst CWithUserAccessToken = Symbol('with-user-access-token');\n\nconst string2Base64 = (content) => Buffer.from(content).toString('base64');\n\nclass DefaultCache {\n    constructor() {\n        this.values = new Map();\n    }\n    // When there is a namespace, splice the namespace and key to form a new key\n    getCacheKey(key, namespace) {\n        if (namespace) {\n            return `${namespace}/${key.toString()}`;\n        }\n        return key;\n    }\n    get(key, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cacheKey = this.getCacheKey(key, get(options, 'namespace'));\n            const data = this.values.get(cacheKey);\n            if (data) {\n                const { value, expiredTime } = data;\n                if (!expiredTime || expiredTime - new Date().getTime() > 0) {\n                    return value;\n                }\n            }\n            return undefined;\n        });\n    }\n    set(key, value, expiredTime, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cacheKey = this.getCacheKey(key, get(options, 'namespace'));\n            this.values.set(cacheKey, {\n                value,\n                expiredTime,\n            });\n            return true;\n        });\n    }\n}\nconst internalCache = new DefaultCache();\n\nclass AESCipher {\n    constructor(key) {\n        const hash = crypto.createHash('sha256');\n        hash.update(key);\n        this.key = hash.digest();\n    }\n    decrypt(encrypt) {\n        const encryptBuffer = Buffer.from(encrypt, 'base64');\n        const decipher = crypto.createDecipheriv('aes-256-cbc', this.key, encryptBuffer.slice(0, 16));\n        let decrypted = decipher.update(encryptBuffer.slice(16).toString('hex'), 'hex', 'utf8');\n        decrypted += decipher.final('utf8');\n        return decrypted;\n    }\n}\n\nconst formatDomain = (domain) => {\n    switch (domain) {\n        case Domain.Feishu:\n            return 'https://open.feishu.cn';\n        case Domain.Lark:\n            return 'https://open.larksuite.com';\n        default:\n            return domain;\n    }\n};\n\nconst fillApiPath = (apiPath, pathSupplement = {}) => apiPath.replace(/:([^/]+)/g, (_, $1) => {\n    if (pathSupplement[$1] !== undefined) {\n        return pathSupplement[$1];\n    }\n    throw new Error(`request miss ${$1} path argument`);\n});\n\nconst assert = (predication, callback) => __awaiter(void 0, void 0, void 0, function* () {\n    const isInvoke = typeof predication === 'function' ? predication() : predication;\n    if (isInvoke) {\n        yield callback();\n    }\n});\n\nconst formatUrl = (url) => (url ? url.replace(/^\\//, '') : '');\n\nconst formatErrors = (e) => {\n    if (e instanceof AxiosError) {\n        const { message, response, request, config } = pick(e, [\n            'message',\n            'response',\n            'request',\n            'config',\n        ]);\n        const filteredErrorInfo = {\n            message,\n            config: pick(config, ['data', 'url', 'params', 'method']),\n            request: pick(request, ['protocol', 'host', 'path', 'method']),\n            response: pick(response, ['data', 'status', 'statusText']),\n        };\n        const errors = [filteredErrorInfo];\n        const specificError = get(e, 'response.data');\n        if (specificError) {\n            errors.push(specificError);\n        }\n        return errors;\n    }\n    return [e];\n};\n\n// auto gen\nclass Client$1 {\n    constructor() {\n        /**\n         * 智能门禁\n         */\n        this.acs = {\n            /**\n             * access_record.access_photo\n             */\n            accessRecordAccessPhoto: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=access_record.access_photo&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/access_record-access_photo/get document }\n                 *\n                 * 下载开门时的人脸识别图片\n                 *\n                 * 用户在门禁考勤机上成功开门或打卡后，智能门禁应用都会生成一条门禁记录，对于使用人脸识别方式进行开门的识别记录，还会有抓拍图。;;可以用该接口下载开门时的人脸识别照片。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/access_records/:access_record_id/access_photo`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n            },\n            /**\n             * 门禁记录\n             */\n            accessRecord: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/acs/v1/access_records`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=access_record&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/access_record/list document }\n                 *\n                 * 获取门禁记录列表\n                 *\n                 * 用户在门禁考勤机上成功开门或打卡后，智能门禁应用都会生成一条门禁记录。;;该接口返回满足查询参数的识别记录。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/access_records`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 门禁设备\n             */\n            device: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=device&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/device/list document }\n                 *\n                 * 获取门禁设备列表\n                 *\n                 * 使用该接口获取租户内所有门禁设备。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/devices`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * user.face\n             */\n            userFace: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user.face&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user-face/get document }\n                 *\n                 * 下载人脸图片\n                 *\n                 * 对于已经录入人脸图片的用户，可以使用该接口下载用户人脸图片。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id/face`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user.face&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user-face/update document }\n                 *\n                 * 上传人脸图片\n                 *\n                 * 用户需要录入人脸图片才可以使用门禁考勤机。使用该 API 上传门禁用户的人脸图片。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id/face`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n            },\n            /**\n             * 用户管理\n             */\n            user: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user/get document }\n                 *\n                 * 获取单个用户信息\n                 *\n                 * 该接口用于获取智能门禁中单个用户的信息。\n                 *\n                 * 只能获取已加入智能门禁权限组的用户\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/acs/v1/users`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user/list document }\n                 *\n                 * 获取用户列表\n                 *\n                 * 使用该接口获取智能门禁中所有用户信息。\n                 *\n                 * 只能获取已加入智能门禁权限组的用户。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/users`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=acs&resource=user&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/acs-v1/user/patch document }\n                 *\n                 * 修改用户部分信息\n                 *\n                 * 飞书智能门禁在人脸识别成功后会有韦根信号输出，输出用户的卡号。;对于使用韦根协议的门禁系统，企业可使用该接口录入用户卡号。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/acs/v1/users/:user_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 管理后台-企业勋章\n         */\n        this.admin = {\n            /**\n             * 部门维度的数据报表\n             */\n            adminDeptStat: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=admin_dept_stat&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/admin_dept_stat/list document }\n                 *\n                 * 获取部门维度的用户活跃和功能使用数据\n                 *\n                 * 该接口用于获取部门维度的用户活跃和功能使用数据，即IM（即时通讯）、日历、云文档、音视频会议功能的使用数据。\n                 *\n                 * - 只有企业自建应用才有权限调用此接口;;- 当天的数据会在第二天的早上九点半产出（UTC+8）\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/admin_dept_stats`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户维度的数据报表\n             */\n            adminUserStat: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=admin_user_stat&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/admin_user_stat/list document }\n                 *\n                 * 获取用户维度的用户活跃和功能使用数据\n                 *\n                 * 用于获取用户维度的用户活跃和功能使用数据，即IM（即时通讯）、日历、云文档、音视频会议功能的使用数据。\n                 *\n                 * - 只有企业自建应用才有权限调用此接口;;- 当天的数据会在第二天的早上九点半产出（UTC+8）\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/admin_user_stats`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 勋章\n             */\n            badge: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/create document }\n                 *\n                 * 创建勋章\n                 *\n                 * 使用该接口可以创建一枚完整的勋章信息，一个租户下最多可创建1000枚勋章。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/get document }\n                 *\n                 * 获取勋章详情\n                 *\n                 * 可以通过该接口查询勋章的详情\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/list document }\n                 *\n                 * 获取勋章列表\n                 *\n                 * 可以通过该接口列出租户下所有的勋章，勋章的排列顺序是按照创建时间倒序排列。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge/update document }\n                 *\n                 * 修改勋章信息\n                 *\n                 * 通过该接口可以修改勋章的信息\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 勋章授予名单\n             */\n            badgeGrant: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/create document }\n                 *\n                 * 创建勋章的授予名单\n                 *\n                 * 通过该接口可以为特定勋章创建一份授予名单，一枚勋章下最多可创建1000份授予名单。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/delete document }\n                 *\n                 * 删除授予名单\n                 *\n                 * 通过该接口可以删除特定授予名单的信息\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants/:grant_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/get document }\n                 *\n                 * 获取授予名单的信息\n                 *\n                 * 通过该接口可以获取特定授予名单的信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants/:grant_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/list document }\n                 *\n                 * 获取勋章的授予名单列表\n                 *\n                 * 通过该接口可以获取特定勋章下的授予名单列表，授予名单的排列顺序按照创建时间倒序排列。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge.grant&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge-grant/update document }\n                 *\n                 * 修改授予名单\n                 *\n                 * 通过该接口可以修改特定授予名单的相关信息\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badges/:badge_id/grants/:grant_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 勋章图片\n             */\n            badgeImage: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=badge_image&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/badge_image/create document }\n                 *\n                 * 上传勋章图片\n                 *\n                 * 通过该接口可以上传勋章详情图、挂饰图的文件，获取对应的文件key\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/badge_images`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n            },\n            /**\n             * 登录密码管理\n             */\n            password: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=admin&resource=password&apiName=reset&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/admin-v1/password/reset document }\n                 *\n                 * 重置密码\n                 *\n                 * 重置用户的企业邮箱密码，仅当用户的邮箱和企业邮箱(别名)一致时生效，可用于处理飞书企业邮箱登录死锁的问题。;;邮箱死锁：当用户的登录凭证与飞书企业邮箱一致时，目前飞书登录流程要求用户输入验证码，由于飞书邮箱无单独的帐号体系，则未登录时无法收取邮箱验证码，即陷入死锁\n                 */\n                reset: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/admin/v1/password/reset`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 应用信息\n         */\n        this.application = {\n            /**\n             * 我的常用推荐规则\n             */\n            appRecommendRule: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/application/v6/app_recommend_rules`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=app_recommend_rule&apiName=list&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/app_recommend_rule/list document }\n                 *\n                 * 获取当前设置的推荐规则列表\n                 *\n                 * 获取当前设置的推荐规则列表。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/app_recommend_rules`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 应用使用情况\n             */\n            applicationAppUsage: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_usage&apiName=overview&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_usage/overview document }\n                 *\n                 * 获取应用使用概览\n                 *\n                 * 查看应用在某一天/某一周/某一个月的使用数据，可以查看租户整体对应用的使用情况，也可以分部门查看。\n                 *\n                 * 1. 仅支持企业版/旗舰版租户使用;2. 一般每天早上10点产出前一天的数据;3. 已经支持的指标包括：应用的活跃用户数、累计用户数、新增用户数、访问页面数、打开次数;4. 数据从飞书4.10版本开始统计，使用飞书版本4.10及以下版本的用户数据不会被统计到;5. 按照部门查看数据时，会展示当前部门以及其子部门的整体使用情况;6. 调用频控为100次/分\n                 */\n                overview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_usage/overview`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 事件\n             */\n            applicationAppVersion: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=contacts_range_suggest&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=contacts_range_suggest&project=application&resource=application.app_version&version=v6 document }\n                 *\n                 * 获取应用版本通讯录权限范围建议\n                 */\n                contactsRangeSuggest: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions/:version_id/contacts_range_suggest`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=get&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_version/get document }\n                 *\n                 * 获取应用版本信息\n                 *\n                 * 根据应用 ID 和应用版本 ID 来获取同租户下的应用版本的信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions/:version_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=list&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_version/list document }\n                 *\n                 * 获取应用版本列表\n                 *\n                 * 根据 app_id 获取对应应用版本列表。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.app_version&apiName=patch&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-app_version/patch document }\n                 *\n                 * 更新应用审核状态\n                 *\n                 * 通过接口来更新应用版本的审核结果：通过后应用可以直接上架；拒绝后则开发者可以看到拒绝理由，并在修改后再次申请发布。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/app_versions/:version_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 应用\n             */\n            application: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=contacts_range_configuration&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=contacts_range_configuration&project=application&resource=application&version=v6 document }\n                 */\n                contactsRangeConfiguration: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/contacts_range_configuration`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=get&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application/get document }\n                 *\n                 * 获取应用信息\n                 *\n                 * 根据app_id获取应用的基础信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=patch&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application/patch document }\n                 *\n                 * 更新应用分组信息\n                 *\n                 * 更新应用的分组信息（分组会影响应用在工作台中的分类情况，请谨慎更新）\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                underauditlistWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/underauditlist`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application&apiName=underauditlist&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application/underauditlist document }\n                 *\n                 * 查看待审核的应用列表\n                 *\n                 * 查看本企业下所有待审核的自建应用列表\n                 */\n                underauditlist: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/underauditlist`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 应用反馈\n             */\n            applicationFeedback: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.feedback&apiName=list&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-feedback/list document }\n                 *\n                 * 获取应用反馈列表\n                 *\n                 * 查询应用的反馈数据\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/feedbacks`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.feedback&apiName=patch&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/application-v6/application-feedback/patch document }\n                 *\n                 * 更新应用反馈\n                 *\n                 * 更新应用的反馈数据\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/feedbacks/:feedback_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 事件\n             */\n            applicationVisibility: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=application&resource=application.visibility&apiName=check_white_black_list&version=v6 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=check_white_black_list&project=application&resource=application.visibility&version=v6 document }\n                 */\n                checkWhiteBlackList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/application/v6/applications/:app_id/visibility/check_white_black_list`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 审批\n         */\n        this.approval = {\n            /**\n             * 原生审批定义\n             */\n            approval: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/create document }\n                 *\n                 * 创建审批定义\n                 *\n                 * 用于通过接口创建简单的审批定义，可以灵活指定定义的基础信息、表单和流程等。创建成功后，不支持从审批管理后台删除该定义。不推荐企业自建应用使用，如有需要尽量联系管理员在审批管理后台创建定义。\n                 *\n                 * 接口谨慎调用，创建后的审批定义无法停用/删除\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=get&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/get document }\n                 *\n                 * 查看审批定义\n                 *\n                 * 根据 Approval Code 获取某个审批定义的详情，用于构造创建审批实例的请求。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals/:approval_code`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=subscribe&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/subscribe document }\n                 *\n                 * 订阅审批事件\n                 *\n                 * 应用订阅 approval_code 后，该应用就可以收到该审批定义对应实例的事件通知。同一应用只需要订阅一次，无需重复订阅。;;当应用不希望再收到审批事件时，可以使用取消订阅接口进行取消，取消后将不再给应用推送消息。;;订阅和取消订阅都是应用维度的，多个应用可以同时订阅同一个 approval_code，每个应用都能收到审批事件。\n                 */\n                subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals/:approval_code/subscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=approval&apiName=unsubscribe&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/approval/unsubscribe document }\n                 *\n                 * 取消订阅审批事件\n                 *\n                 * 取消订阅 approval_code 后，无法再收到该审批定义对应实例的事件通知\n                 */\n                unsubscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/approvals/:approval_code/unsubscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 三方审批定义\n             */\n            externalApproval: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_approval&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_approval/create document }\n                 *\n                 * 三方审批定义创建\n                 *\n                 * 审批定义是审批的描述，包括审批名称、图标、描述等基础信息。创建好审批定义，用户就可以在审批应用的发起页中看到审批，如果用户点击发起，则会跳转到配置的发起三方系统地址去发起审批。;;另外，审批定义还配置了审批操作时的回调地址：审批人在待审批列表中进行【同意】【拒绝】操作时，审批中心会调用回调地址通知三方系统。\n                 *\n                 * 注意，审批中心不负责审批流程的流转，只负责展示、操作、消息通知。因此审批定义创建时没有审批流程的信息。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_approvals`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 三方审批实例\n             */\n            externalInstance: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_instance&apiName=check&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_instance/check document }\n                 *\n                 * 三方审批实例校验\n                 *\n                 * 校验三方审批实例数据，用于判断服务端数据是否为最新的。用户提交实例最新更新时间，如果服务端不存在该实例，或者服务端实例更新时间不是最新的，则返回对应实例 id。;;例如，用户可以每隔5分钟，将最近5分钟产生的实例使用该接口进行对比。\n                 */\n                check: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_instances/check`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_instance&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_instance/create document }\n                 *\n                 * 三方审批实例同步\n                 *\n                 * 审批中心不负责审批的流转，审批的流转在三方系统，三方系统在审批流转后生成的审批实例、审批任务、审批抄送数据同步到审批中心。;;用户可以在审批中心中浏览三方系统同步过来的实例、任务、抄送信息，并且可以跳转回三方系统进行更详细的查看和操作，其中实例信息在【已发起】列表，任务信息在【待审批】和【已审批】列表，抄送信息在【抄送我】列表;;:::html;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/9dff4434afbeb0ef69de7f36b9a6e995_z5iwmTzEgg.png\" alt=\"\" style=\"zoom:17%;\" />;;;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/ca6e0e984a7a6d64e1b16a0bac4bf868_tfqjCiaJQM.png\" alt=\"\" style=\"zoom:17%;\" />;;;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/529377e238df78d391bbd22e962ad195_T7eefLI1GA.png\" alt=\"\" style=\"zoom:17%;\" />;:::;;对于审批任务，三方系统也可以配置审批任务的回调接口，这样审批人可以在审批中心中直接进行审批操作，审批中心会回调三方系统，三方系统收到回调后更新任务信息，并将新的任务信息同步回审批中心，形成闭环。;;:::html;<img src=\"//sf3-cn.feishucdn.com/obj/open-platform-opendoc/721c35428bc1187db3318c572f9979ad_je75QpElcg.png\" alt=\"\"  style=\"zoom:25%;\" />;:::;<br>\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_instances`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 三方审批任务\n             */\n            externalTask: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_tasks`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=external_task&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/external_task/list document }\n                 *\n                 * 获取三方审批任务状态\n                 *\n                 * 该接口用于获取三方审批的状态。用户传入查询条件，接口返回满足条件的审批实例的状态。该接口支持多种参数的组合，包括如下组合：;;1.通过 instance_ids 获取指定实例的任务状态;;2.通过 user_ids 获取指定用户的任务状态;;3.通过 status 获取指定状态的所有任务;;4.通过page_token获取下一批数据\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/external_tasks`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 原生审批实例\n             */\n            instance: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=add_sign&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/ukTM5UjL5ETO14SOxkTN/approval-task-addsign document }\n                 */\n                addSign: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/add_sign`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=cancel&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/cancel document }\n                 *\n                 * 审批实例撤回\n                 *\n                 * 对于状态为“审批中”的单个审批实例进行撤销操作，撤销后审批流程结束\n                 */\n                cancel: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/cancel`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=cc&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/cc document }\n                 *\n                 * 审批实例抄送\n                 *\n                 * 通过接口可以将当前审批实例抄送给其他人。\n                 */\n                cc: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/cc`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/create document }\n                 *\n                 * 创建审批实例\n                 *\n                 * 创建一个审批实例，调用方需对审批定义的表单有详细了解，将按照定义的表单结构，将表单 Value 通过接口传入\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=get&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/get document }\n                 *\n                 * 获取单个审批实例详情\n                 *\n                 * 通过审批实例 Instance Code  获取审批实例详情。Instance Code 由 [批量获取审批实例](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/list) 接口获取。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/list document }\n                 *\n                 * 批量获取审批实例ID\n                 *\n                 * 根据 approval_code 批量获取审批实例的 instance_code，用于拉取租户下某个审批定义的全部审批实例。默认以审批创建时间先后顺序排列\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=preview&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/ukTM5UjL5ETO14SOxkTN/approval-preview document }\n                 */\n                preview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/preview`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                queryWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/query`, path),\n                            method: \"POST\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=query&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/query document }\n                 *\n                 * 查询实例列表\n                 *\n                 * 该接口通过不同条件查询审批系统中符合条件的审批实例列表。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=search_cc&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/search_cc document }\n                 *\n                 * 查询抄送列表\n                 *\n                 * 该接口通过不同条件查询审批系统中符合条件的审批抄送列表。\n                 */\n                searchCc: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/search_cc`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance&apiName=specified_rollback&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance/specified_rollback document }\n                 *\n                 * 审批任务退回\n                 *\n                 * 从当前审批任务，退回到已审批的一个或多个任务节点。退回后，已审批节点重新生成审批任务\n                 */\n                specifiedRollback: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/specified_rollback`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 原生审批评论\n             */\n            instanceComment: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/create document }\n                 *\n                 * 创建评论\n                 *\n                 * 在某审批实例下创建、修改评论或评论回复（不包含审批同意、拒绝、转交等附加的理由或意见）。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/delete document }\n                 *\n                 * 删除评论\n                 *\n                 * 逻辑删除某审批实例下的一条评论或评论回复（不包含审批同意、拒绝、转交等附加的理由或意见）。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments/:comment_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/list document }\n                 *\n                 * 获取评论\n                 *\n                 * 根据 Instance Code 获取某个审批实例下的全部评论与评论回复（不包含审批同意、拒绝、转交等附加的理由或意见）。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=instance.comment&apiName=remove&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/instance-comment/remove document }\n                 *\n                 * 清空评论\n                 *\n                 * 删除某审批实例下的全部评论与评论回复。\n                 */\n                remove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/instances/:instance_id/comments/remove`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 原生审批任务\n             */\n            task: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=approve&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/approve document }\n                 *\n                 * 审批任务同意\n                 *\n                 * 对于单个审批任务进行同意操作。同意后审批流程会流转到下一个审批人。\n                 */\n                approve: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/approve`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                queryWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/query`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=query&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/query document }\n                 *\n                 * 用户角度列出任务\n                 *\n                 * 根据用户和任务分组查询任务列表\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=reject&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/reject document }\n                 *\n                 * 审批任务拒绝\n                 *\n                 * 对于单个审批任务进行拒绝操作。拒绝后审批流程结束。\n                 */\n                reject: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/reject`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=resubmit&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/resubmit document }\n                 *\n                 * 审批任务重新提交\n                 *\n                 * 对于单个退回到发起人的审批任务进行重新发起操作。发起后审批流程会流转到下一个审批人。\n                 */\n                resubmit: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/resubmit`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=search&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/search document }\n                 *\n                 * 查询任务列表\n                 *\n                 * 该接口通过不同条件查询审批系统中符合条件的审批任务列表\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=approval&resource=task&apiName=transfer&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/approval-v4/task/transfer document }\n                 *\n                 * 审批任务转交\n                 *\n                 * 对于单个审批任务进行转交操作。转交后审批流程流转给被转交人。\n                 */\n                transfer: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/approval/v4/tasks/transfer`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 打卡\n         */\n        this.attendance = {\n            /**\n             * approval_info\n             */\n            approvalInfo: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=approval_info&apiName=process&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/approval_info/process document }\n                 *\n                 * 通知审批状态更新\n                 *\n                 * 对于只使用飞书考勤系统而未使用飞书审批系统的企业，可以通过该接口更新写入飞书考勤系统中的三方系统审批状态，例如请假、加班、外出、出差、补卡等审批，状态包括通过、不通过、撤销等。\n                 *\n                 * 发起状态的审批才可以被更新为通过、不通过，已经通过的审批才可以被更新为撤销。\n                 */\n                process: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/approval_infos/process`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 文件\n             */\n            file: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=file&apiName=download&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/file/download document }\n                 *\n                 * 下载文件\n                 *\n                 * 通过文件 ID 下载指定的文件。\n                 */\n                download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/files/:file_id/download`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=file&apiName=upload&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/file/upload document }\n                 *\n                 * 上传文件\n                 *\n                 * 上传文件并获取文件 ID，可用于“修改用户设置”接口中的 face_key 参数。\n                 */\n                upload: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/files/upload`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n            },\n            /**\n             * 考勤组管理\n             */\n            group: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/create document }\n                 *\n                 * 创建或修改考勤组\n                 *\n                 * 考勤组，是对部门或者员工在某个特定场所及特定时间段内的出勤情况（包括上下班、迟到、早退、病假、婚假、丧假、公休、工作时间、加班情况等）的一种规则设定。;;通过设置考勤组，可以从部门、员工两个维度，来设定考勤方式、考勤时间、考勤地点等考勤规则。\n                 *\n                 * 出于安全考虑，目前通过该接口只允许修改自己创建的考勤组。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/delete document }\n                 *\n                 * 删除考勤组\n                 *\n                 * 通过班次 ID 删除班次。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups/:group_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/get document }\n                 *\n                 * 获取考勤组详情\n                 *\n                 * 通过考勤组 ID 获取考勤组详情。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups/:group_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/list document }\n                 *\n                 * 获取考勤组列表\n                 *\n                 * 翻页获取所有考勤组列表。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=group&apiName=search&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/group/search document }\n                 *\n                 * 按名称查询考勤组\n                 *\n                 * 按考勤组名称查询考勤组摘要信息。查询条件支持名称精确匹配和模糊匹配两种方式。查询结果按考勤组修改时间 desc 排序，且最大记录数为 10 条。\n                 *\n                 * 该接口依赖的数据和考勤组主数据间存在数据同步延时（正常数据同步 2 秒以内），因此在使用该接口时需注意评估数据延迟潜在风险。\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/groups/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 考勤班次\n             */\n            shift: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/create document }\n                 *\n                 * 创建班次\n                 *\n                 * 班次是描述一次考勤任务时间规则的统称，比如一天打多少次卡，每次卡的上下班时间，晚到多长时间算迟到，晚到多长时间算缺卡等。\n                 *\n                 * - 创建一个考勤组前，必须先创建一个或者多个班次。;- 一个公司内的班次是共享的，你可以直接引用他人创建的班次，但是需要注意的是，若他人修改了班次，会影响到你的考勤组及其考勤结果。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/delete document }\n                 *\n                 * 删除班次\n                 *\n                 * 通过班次 ID 删除班次。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts/:shift_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/get document }\n                 *\n                 * 获取班次详情\n                 *\n                 * 通过班次 ID 获取班次详情。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts/:shift_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/list document }\n                 *\n                 * 获取班次列表\n                 *\n                 * 翻页获取所有班次列表。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=shift&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/shift/query document }\n                 *\n                 * 按名称查询班次\n                 *\n                 * 通过班次的名称查询班次信息。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/shifts/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 假勤审批\n             */\n            userApproval: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_approval&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_approval/create document }\n                 *\n                 * 写入审批结果\n                 *\n                 * 由于部分企业使用的是自己的审批系统，而不是飞书审批系统，因此员工的请假、加班等数据无法流入到飞书考勤系统中，导致员工在请假时间段内依然收到打卡提醒，并且被记为缺卡。;;对于这些只使用飞书考勤系统，而未使用飞书审批系统的企业，可以通过考勤开放接口的形式，将三方审批结果数据回写到飞书考勤系统中。\n                 *\n                 * 目前支持写入加班、请假、出差和外出这四种审批结果，写入只会追加(insert)，不会覆盖(update)（开放接口导入的加班假期记录，在管理后台的假期加班里查不到，只能通过[获取审批通过数据](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_approval/query)来查询）\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_approvals`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_approval&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_approval/query document }\n                 *\n                 * 获取审批通过数据\n                 *\n                 * 获取员工在某段时间内的请假、加班、外出和出差四种审批的通过数据。\n                 *\n                 * 请假的假期时长字段，暂未开放提供，待后续提供。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_approvals/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 考勤排班\n             */\n            userDailyShift: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_daily_shift&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_daily_shift/batch_create document }\n                 *\n                 * 创建或修改班表\n                 *\n                 * 班表是用来描述考勤组内人员每天按哪个班次进行上班。目前班表支持按一个整月对一位或多位人员进行排班。\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_daily_shifts/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_daily_shift&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_daily_shift/query document }\n                 *\n                 * 查询班表信息\n                 *\n                 * 支持查询多个用户的排班情况，查询的时间跨度不能超过 30 天。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_daily_shifts/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * user_flow\n             */\n            userFlow: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_flow&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_flow/batch_create document }\n                 *\n                 * 导入打卡流水记录\n                 *\n                 * 导入授权内员工的打卡流水记录。导入后，会根据员工所在的考勤组班次规则，计算最终的打卡状态与结果。\n                 *\n                 * 适用于考勤机数据导入等场景。\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_flows/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_flow&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_flow/get document }\n                 *\n                 * 获取打卡流水记录\n                 *\n                 * 通过打卡记录 ID 获取用户的打卡流水记录。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_flows/:user_flow_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_flow&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_flow/query document }\n                 *\n                 * 批量查询打卡流水记录\n                 *\n                 * 批量查询授权内员工的实际打卡流水记录。例如，企业给一个员工设定的班次是上午 9 点和下午 6 点各打一次上下班卡，但是该员工在这期间打了多次卡，该接口会把所有的打卡记录都返回。\n                 *\n                 * 如果只需获取打卡结果，而不需要详细的打卡数据，可使用“获取打卡结果”的接口。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_flows/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户设置\n             */\n            userSetting: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_setting&apiName=modify&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_setting/modify document }\n                 *\n                 * 修改用户设置\n                 *\n                 * 修改授权内员工的用户设置信息，包括人脸照片文件 ID。\n                 */\n                modify: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_settings/modify`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_setting&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_setting/query document }\n                 *\n                 * 批量查询用户设置\n                 *\n                 * 批量查询授权内员工的用户设置信息，包括人脸照片文件 ID、人脸照片更新时间。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_settings/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 考勤统计\n             */\n            userStatsData: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_data&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_data/query document }\n                 *\n                 * 查询统计数据\n                 *\n                 * 查询日度统计或月度统计的统计数据。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_datas/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * user_stats_field\n             */\n            userStatsField: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_field&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_field/query document }\n                 *\n                 * 查询统计表头\n                 *\n                 * 查询考勤统计支持的日度统计或月度统计的统计表头。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_fields/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * user_stats_view\n             */\n            userStatsView: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_view&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_view/query document }\n                 *\n                 * 查询统计设置\n                 *\n                 * 查询开发者定制的日度统计或月度统计的统计报表表头设置信息。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_views/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_stats_view&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_stats_view/update document }\n                 *\n                 * 更新统计设置\n                 *\n                 * 更新开发者定制的日度统计或月度统计的统计报表表头设置信息。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_stats_views/:user_stats_view_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 考勤记录\n             */\n            userTask: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task/query document }\n                 *\n                 * 获取打卡结果\n                 *\n                 * 获取企业内员工的实际打卡结果，包括上班打卡结果和下班打卡结果。\n                 *\n                 * - 如果企业给一个员工设定的班次是上午 9 点和下午 6 点各打一次上下班卡，即使员工在这期间打了多次卡，该接口也只会返回 1 条记录。;- 如果要获取打卡的详细数据，如打卡位置等信息，可使用“获取打卡流水记录”或“批量查询打卡流水记录”的接口。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_tasks/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 考勤补卡\n             */\n            userTaskRemedy: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task_remedy&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task_remedy/create document }\n                 *\n                 * 通知补卡审批发起\n                 *\n                 * 对于只使用飞书考勤系统而未使用飞书审批系统的企业，可以通过该接口，将在三方审批系统中发起的补卡审批数据，写入到飞书考勤系统中，状态为审批中。写入后可以由[通知审批状态更新](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/approval_info/process) 进行状态更新\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_task_remedys`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task_remedy&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task_remedy/query document }\n                 *\n                 * 获取补卡记录\n                 *\n                 * 获取授权内员工的补卡记录。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_task_remedys/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=attendance&resource=user_task_remedy&apiName=query_user_allowed_remedys&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/attendance-v1/user_task_remedy/query_user_allowed_remedys document }\n                 *\n                 * 获取用户可补卡时间\n                 *\n                 * 获取用户某天可以补的第几次上 / 下班卡的时间。\n                 */\n                queryUserAllowedRemedys: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/attendance/v1/user_task_remedys/query_user_allowed_remedys`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.auth = {\n            /**\n             * app_access_token\n             */\n            appAccessToken: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=auth&resource=app_access_token&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=auth&resource=app_access_token&version=v3 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/auth/v3/app_access_token`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=auth&resource=app_access_token&apiName=internal&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=internal&project=auth&resource=app_access_token&version=v3 document }\n                 */\n                internal: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/auth/v3/app_access_token/internal`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * app_ticket\n             */\n            appTicket: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=auth&resource=app_ticket&apiName=resend&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=resend&project=auth&resource=app_ticket&version=v3 document }\n                 */\n                resend: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/auth/v3/app_ticket/resend`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * tenant_access_token\n             */\n            tenantAccessToken: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=auth&resource=tenant_access_token&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=auth&resource=tenant_access_token&version=v3 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/auth/v3/tenant_access_token`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=auth&resource=tenant_access_token&apiName=internal&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=internal&project=auth&resource=tenant_access_token&version=v3 document }\n                 */\n                internal: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/auth/v3/tenant_access_token/internal`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.authen = {\n            /**\n             * access_token\n             */\n            accessToken: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=authen&resource=access_token&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=authen&resource=access_token&version=v1 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/authen/v1/access_token`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * refresh_access_token\n             */\n            refreshAccessToken: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=authen&resource=refresh_access_token&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=authen&resource=refresh_access_token&version=v1 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/authen/v1/refresh_access_token`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * user_info\n             */\n            userInfo: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=authen&resource=user_info&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=authen&resource=user_info&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/authen/v1/user_info`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.aweme_ecosystem = {};\n        /**\n         * 企业百科\n         */\n        this.baike = {\n            /**\n             * 分类\n             */\n            classification: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/baike/v1/classifications`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=classification&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/classification/list document }\n                 *\n                 * 获取百科分类\n                 *\n                 * 获取企业百科当前分类。;企业百科目前为二级分类体系，每个词条可添加多个二级分类，但每个一级分类下只能添加一个分类。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/classifications`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 草稿\n             */\n            draft: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=draft&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/draft/create document }\n                 *\n                 * 创建草稿\n                 *\n                 * 草稿并非百科词条，而是指通过 API 发起创建新词条或更新现有词条的申请。百科管理员审核通过后，草稿将变为新的词条或覆盖已有词条。\n                 *\n                 * · 创建新的百科词条时，无需传入 entity_id 字段;· 更新已有百科词条时，请传入对应词条的 entity_id 或 outer_info\n                 *\n                 * 以用户身份创建草稿（即 Authorization 使用 user_access_token），对应用户将收到由企业百科 Bot 发送的审核结果；以应用身份创建草稿（即 Authorization 使用 tenant_access_toke），不会收到任何通知。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/drafts`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=draft&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/draft/update document }\n                 *\n                 * 更新草稿\n                 *\n                 * 根据 draft_id 更新草稿内容，已审批的草稿无法编辑\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/drafts/:draft_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 词条\n             */\n            entity: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/create document }\n                 *\n                 * 创建免审词条\n                 *\n                 * 通过此接口创建的词条，不需要百科管理员审核可直接写入词库，请慎重使用【租户管理员请慎重审批】。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=extract&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/extract document }\n                 *\n                 * 提取潜在的百科词条\n                 *\n                 * 提取文本中可能成为百科词条的词语，且不会过滤已经成为百科词条的词语。同时，会返回推荐的别名。\n                 */\n                extract: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/extract`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/get document }\n                 *\n                 * 获取词条详情\n                 *\n                 * 通过词条 id 拉取对应的词条详情信息。\n                 *\n                 * 也支持通过 provider 和 outer_id 返回对应实体的详情数据。此时路径中的 entity_id 为固定的 enterprise_0\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/:entity_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=highlight&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/highlight document }\n                 *\n                 * 词条高亮\n                 *\n                 * 传入一句话，智能识别句中对应的词条，并返回词条位置和 entity_id，可在外部系统中快速实现百科词条智能高亮。\n                 */\n                highlight: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/highlight`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/list document }\n                 *\n                 * 获取词条列表\n                 *\n                 * 分页拉取词条列表数据，支持拉取租户内的全部词条。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=match&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/match document }\n                 *\n                 * 精准搜索词条\n                 *\n                 * 将关键词与词条名、别名精准匹配，并返回对应的 词条 ID。\n                 */\n                match: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/match`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/search`, path),\n                            method: \"POST\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=search&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/search document }\n                 *\n                 * 模糊搜索词条\n                 *\n                 * 传入关键词，与词条名、别名、释义等信息进行模糊匹配，返回搜到的词条信息。\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=entity&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/entity/update document }\n                 *\n                 * 更新免审词条\n                 *\n                 * 通过此接口更新已有的词条，不需要百科管理员审核可直接写入词库，请慎重使用【租户管理员请慎重审批】。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/entities/:entity_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 文件\n             */\n            file: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=file&apiName=download&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/file/download document }\n                 *\n                 * 图片下载\n                 *\n                 * 通过 file_token 下载原图片\n                 */\n                download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/files/:file_token/download`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=baike&resource=file&apiName=upload&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/baike-v1/file/upload document }\n                 *\n                 * 图片上传\n                 *\n                 * 百科词条图片资源上传。\n                 */\n                upload: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/baike/v1/files/upload`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n            },\n        };\n        /**\n         * 云文档-多维表格\n         */\n        this.bitable = {\n            /**\n             * 多维表格\n             */\n            app: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=copy&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=copy&project=bitable&resource=app&version=v1 document }\n                 */\n                copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/copy`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=bitable&resource=app&version=v1 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app/get document }\n                 *\n                 * 获取多维表格元数据\n                 *\n                 * 获取指定多维表格的元数据信息，包括多维表格名称，多维表格版本号，多维表格是否开启高级权限等。\n                 *\n                 * 该接口支持调用频率上限为 20 QPS（Query Per Second，每秒请求率）\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app/update document }\n                 *\n                 * 更新多维表格元数据\n                 *\n                 * 通过 app_token 更新多维表格元数据\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 *\n                 * - 飞书文档、飞书表格、知识库中的多维表格不支持开启高级权限;- 此接口非原子操作，先修改多维表格名字，后开关高级权限。可能存在部分成功的情况\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 仪表盘\n             */\n            appDashboard: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.dashboard&apiName=copy&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-dashboard/copy document }\n                 *\n                 * 复制仪表盘\n                 *\n                 * 该接口用于根据现有仪表盘复制出新的仪表盘\n                 */\n                copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/dashboards/:block_id/copy`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/dashboards`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.dashboard&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-dashboard/list document }\n                 *\n                 * 列出仪表盘\n                 *\n                 * 根据 app_token，获取多维表格下的所有仪表盘\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/dashboards`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 自定义角色\n             */\n            appRole: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/create document }\n                 *\n                 * 新增自定义角色\n                 *\n                 * 新增自定义角色\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/delete document }\n                 *\n                 * 删除自定义角色\n                 *\n                 * 删除自定义角色\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/list document }\n                 *\n                 * 列出自定义角色\n                 *\n                 * 列出自定义角色\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/update document }\n                 *\n                 * 更新自定义角色\n                 *\n                 * 更新自定义角色\n                 *\n                 * 更新自定义角色是全量更新，会完全覆盖旧的自定义角色设置\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 协作者\n             */\n            appRoleMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/batch_create document }\n                 *\n                 * 批量新增协作者\n                 *\n                 * 批量新增自定义角色的协作者\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/batch_delete document }\n                 *\n                 * 批量删除协作者\n                 *\n                 * 批量删除自定义角色的协作者\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members/batch_delete`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/create document }\n                 *\n                 * 新增协作者\n                 *\n                 * 新增自定义角色的协作者\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/delete document }\n                 *\n                 * 删除协作者\n                 *\n                 * 删除自定义角色的协作者\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members/:member_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.role.member&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/list document }\n                 *\n                 * 列出协作者\n                 *\n                 * 列出自定义角色的协作者\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/roles/:role_id/members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 数据表\n             */\n            appTable: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/batch_create document }\n                 *\n                 * 新增多个数据表\n                 *\n                 * 新增多个数据表\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/batch_delete document }\n                 *\n                 * 删除多个数据表\n                 *\n                 * 删除多个数据表\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/batch_delete`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/create document }\n                 *\n                 * 新增数据表\n                 *\n                 * 新增一个数据表\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/delete document }\n                 *\n                 * 删除数据表\n                 *\n                 * 删除一个数据表\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/list document }\n                 *\n                 * 列出数据表\n                 *\n                 * 根据  app_token，获取多维表格下的所有数据表\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/patch document }\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 字段\n             */\n            appTableField: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/create document }\n                 *\n                 * 新增字段\n                 *\n                 * 该接口用于在数据表中新增一个字段\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/delete document }\n                 *\n                 * 删除字段\n                 *\n                 * 该接口用于在数据表中删除一个字段\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields/:field_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/list document }\n                 *\n                 * 列出字段\n                 *\n                 * 根据 app_token 和 table_id，获取数据表的所有字段\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.field&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/update document }\n                 *\n                 * 更新字段\n                 *\n                 * 该接口用于在数据表中更新一个字段\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/fields/:field_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 表单\n             */\n            appTableFormField: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id/fields`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form.field&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form-field/list document }\n                 *\n                 * 列出表单问题\n                 *\n                 * 列出表单的所有问题项\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id/fields`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form.field&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form-field/patch document }\n                 *\n                 * 更新表单问题\n                 *\n                 * 该接口用于更新表单中的问题项\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id/fields/:field_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 表单\n             */\n            appTableForm: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form/get document }\n                 *\n                 * 获取表单元数据\n                 *\n                 * 获取表单的所有元数据项\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.form&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form/patch document }\n                 *\n                 * 更新表单元数据\n                 *\n                 * 该接口用于更新表单中的元数据项\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/forms/:form_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 记录\n             */\n            appTableRecord: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_create document }\n                 *\n                 * 新增多条记录\n                 *\n                 * 该接口用于在数据表中新增多条记录，单次调用最多新增 500 条记录。\n                 *\n                 * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_delete document }\n                 *\n                 * 删除多条记录\n                 *\n                 * 该接口用于删除数据表中现有的多条记录，单次调用中最多删除 500 条记录。\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/batch_delete`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=batch_update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_update document }\n                 *\n                 * 更新多条记录\n                 *\n                 * 该接口用于更新数据表中的多条记录，单次调用最多更新 500 条记录。\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                batchUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/batch_update`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/create document }\n                 *\n                 * 新增记录\n                 *\n                 * 该接口用于在数据表中新增一条记录\n                 *\n                 * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/delete document }\n                 *\n                 * 删除记录\n                 *\n                 * 该接口用于删除数据表中的一条记录\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/:record_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/get document }\n                 *\n                 * 检索记录\n                 *\n                 * 该接口用于根据 record_id 的值检索现有记录\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/:record_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/list document }\n                 *\n                 * 列出记录\n                 *\n                 * 该接口用于列出数据表中的现有记录，单次最多列出 500 行记录，支持分页获取。\n                 *\n                 * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率），1000 QPM（Query Per Minute，每分钟请求率）\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.record&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/update document }\n                 *\n                 * 更新记录\n                 *\n                 * 该接口用于更新数据表中的一条记录\n                 *\n                 * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/records/:record_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 视图\n             */\n            appTableView: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/create document }\n                 *\n                 * 新增视图\n                 *\n                 * 在数据表中新增一个视图\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/delete document }\n                 *\n                 * 删除视图\n                 *\n                 * 删除数据表中的视图\n                 *\n                 * 该接口支持调用频率上限为 10 QPS\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views/:view_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/get document }\n                 *\n                 * 检索视图\n                 *\n                 * 该接口根据 view_id 检索现有视图\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views/:view_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/list document }\n                 *\n                 * 列出视图\n                 *\n                 * 根据 app_token 和 table_id，获取数据表的所有视图\n                 *\n                 * 该接口支持调用频率上限为 20 QPS\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=bitable&resource=app.table.view&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/patch document }\n                 *\n                 * 更新视图\n                 *\n                 * 该接口用于增量修改视图信息\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/bitable/v1/apps/:app_token/tables/:table_id/views/:view_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 小组件\n         */\n        this.block = {\n            /**\n             * 服务端 API\n             */\n            entity: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=block&resource=entity&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/block-v2/entity/create document }\n                 *\n                 * 创建 BlockEntity\n                 *\n                 * 开发者可以通过该接口将部分或全部数据存放于 BlockEntity。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/block/v2/entities`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=block&resource=entity&apiName=update&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/block-v2/entity/update document }\n                 *\n                 * 更新BlockEntity\n                 *\n                 * 开发者通过该接口可以更新存储在BlockEntity中的数据，并实时推送到端侧。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/block/v2/entities/:block_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 服务端 API\n             */\n            message: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=block&resource=message&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/block-v2/message/create document }\n                 *\n                 * Block协同数据推送\n                 *\n                 * 根据BlockID向指定用户列表推送协同数据。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/block/v2/message`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 日历\n         */\n        this.calendar = {\n            /**\n             * 日历访问控制\n             */\n            calendarAcl: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/create document }\n                 *\n                 * 创建访问控制\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）给日历添加访问控制权限，即日历成员。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份需要有日历的 owner 权限，并且日历的类型只能为 primary 或 shared。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/delete document }\n                 *\n                 * 删除访问控制\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）删除日历的控制权限，即日历成员。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份需要有日历的 owner 权限，并且日历的类型只能为 primary 或 shared。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls/:acl_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/list document }\n                 *\n                 * 获取访问控制列表\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）获取日历的控制权限列表。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份需要有日历的 owner 权限，并且日历的类型只能为 primary 或 shared。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=subscription&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/subscription document }\n                 *\n                 * 订阅日历访问控制变更事件;\n                 *\n                 * 该接口用于以用户身份订阅指定日历下的日历成员变更事件。\n                 *\n                 * 用户必须对日历有访问权限。\n                 */\n                subscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls/subscription`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.acl&apiName=unsubscription&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-acl/unsubscription document }\n                 *\n                 * 取消订阅日历访问控制变更事件\n                 *\n                 * 该接口用于以用户身份取消订阅指定日历下的日历成员变更事件。\n                 *\n                 * 用户必须对日历有访问权限。\n                 */\n                unsubscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/acls/unsubscription`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 日历管理\n             */\n            calendar: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/create document }\n                 *\n                 * 创建共享日历\n                 *\n                 * 该接口用于为当前身份（应用 / 用户）创建一个共享日历。;;身份由 Header Authorization 的 Token 类型决定。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/delete document }\n                 *\n                 * 删除共享日历\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）删除一个共享日历。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份必须对日历具有 owner 权限。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=get&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get document }\n                 *\n                 * 查询日历信息\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）根据日历 ID 获取日历信息。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份必须对日历有访问权限。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/list document }\n                 *\n                 * 查询日历列表\n                 *\n                 * 该接口用于分页获得当前身份（应用 / 用户）的日历列表。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 调用时首先使用 page_token 分页拉取存量数据，之后使用 sync_token 增量同步变更数据。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=patch&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/patch document }\n                 *\n                 * 更新日历信息\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）修改日历信息。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份对日历有 owner 权限时，可修改全局字段：summary, description, permission。;;当前身份对日历不具有 owner 权限时，仅可修改对自己生效的字段：color, summary_alias。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=primary&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/primary document }\n                 *\n                 * 查询主日历信息\n                 *\n                 * 获取当前身份的主日历信息。\n                 */\n                primary: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/primary`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/search`, path),\n                            method: \"POST\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=search&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/search document }\n                 *\n                 * 搜索日历\n                 *\n                 * 该接口用于通过关键字查询公共日历或用户主日历。\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=subscribe&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/subscribe document }\n                 *\n                 * 订阅日历\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）订阅某个日历。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * - 仅可订阅类型为 primary 或 shared 的公开日历。;- 可订阅日历数量上限为1000。\n                 */\n                subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/subscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=subscription&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/subscription document }\n                 *\n                 * 订阅日历变更事件\n                 *\n                 * 该接口用于以用户身份订阅当前身份下日历列表中的所有日历变更。\n                 */\n                subscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/subscription`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=unsubscribe&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/unsubscribe document }\n                 *\n                 * 取消订阅日历\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）取消对某日历的订阅状态。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 仅可操作已经被当前身份订阅的日历。\n                 */\n                unsubscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/unsubscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar&apiName=unsubscription&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/unsubscription document }\n                 *\n                 * 取消订阅日历变更事件\n                 *\n                 * 该接口用于以用户身份取消订阅当前身份下日历列表中的日历变更事件。\n                 */\n                unsubscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/unsubscription`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 日程参与人\n             */\n            calendarEventAttendee: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee&apiName=batch_delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee/batch_delete document }\n                 *\n                 * 删除日程参与人\n                 *\n                 * 批量删除日程的参与人。\n                 *\n                 * - 当前身份需要有日历的 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;- 当前身份需要是日程的组织者。\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees/batch_delete`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee/create document }\n                 *\n                 * 创建日程参与人;\n                 *\n                 * 批量给日程添加参与人。\n                 *\n                 * - 当前身份需要有日历的 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;- 当前身份需要是日程的组织者，或日程设置了「参与人可邀请其它参与人」权限。;;- 新添加的日程参与人必须与日程组织者在同一个企业内。;;- 使用该接口添加会议室后，会议室会进入异步的预约流程，请求结束不代表会议室预约成功，需后续再查询预约状态。;;- 每个日程最多只能有 3000 名参与人。;;- 开启管理员能力后预约会议室可不受会议室预约范围的限制（当前不支持用管理员身份给其他人的日程预约会议室）\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee/list document }\n                 *\n                 * 获取日程参与人列表\n                 *\n                 * 获取日程的参与人列表，若参与者列表中有群组，请使用 [获取参与人群成员列表](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee-chat_member/list) 。\n                 *\n                 * - 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。;;- 当前身份必须有权限查看日程的参与人列表。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 日程参与人群成员\n             */\n            calendarEventAttendeeChatMember: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees/:attendee_id/chat_members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event.attendee.chat_member&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event-attendee-chat_member/list document }\n                 *\n                 * 获取日程参与群成员列表\n                 *\n                 * 获取日程的群参与人的群成员列表。\n                 *\n                 * - 当前身份必须有权限查看日程的参与人列表。;;- 当前身份必须在群聊中，或有权限查看群成员列表。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id/attendees/:attendee_id/chat_members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 日程\n             */\n            calendarEvent: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/create document }\n                 *\n                 * 创建日程\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）在日历上创建一个日程。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份必须对日历有 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/delete document }\n                 *\n                 * 删除日程\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）删除日历上的一个日程。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份必须对日历有 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;当前身份必须是日程的组织者。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=get&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/get document }\n                 *\n                 * 获取日程\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）获取日历上的一个日程。;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * - 当前身份必须对日历有reader、writer或owner权限才会返回日程详细信息（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。;- [例外日程](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/introduction#71c5ec78)可通过event_id的非0时间戳后缀，来获取修改的重复性日程的哪一天日程的时间信息。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/list document }\n                 *\n                 * 获取日程列表\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）获取日历下的日程列表。;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * - 当前身份必须对日历有reader、writer或owner权限才会返回日程详细信息（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。;;- 仅支持primary、shared和resource类型的日历获取日程列表。;;- page_token 分页拉取存量数据，sync_token 增量同步变更数据；目前仅传anchor_time时，会返回page_token。;;- 为了确保调用方日程同步数据的一致性，在使用sync_token时，不能同时使用start_time和end_time，否则可能造成日程数据缺失。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=patch&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/patch document }\n                 *\n                 * 更新日程\n                 *\n                 * 该接口用于以当前身份（应用 / 用户）更新日历上的一个日程。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份必须对日历有 writer 或 owner 权限，并且日历的类型只能为 primary 或 shared。;;当前身份为日程组织者时，可修改所有可编辑字段。;;当前身份为日程参与者时，仅可编辑部分字段。（如：visibility, free_busy_status, color, reminders）\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/:event_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/search`, path),\n                            method: \"POST\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=search&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/search document }\n                 *\n                 * 搜索日程\n                 *\n                 * 该接口用于以用户身份搜索某日历下的相关日程。;;身份由 Header Authorization 的 Token 类型决定。\n                 *\n                 * 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=subscription&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/subscription document }\n                 *\n                 * 订阅日程变更事件\n                 *\n                 * 该接口用于以用户身份订阅指定日历下的日程变更事件。\n                 *\n                 * 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。\n                 */\n                subscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/subscription`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=calendar.event&apiName=unsubscription&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar-event/unsubscription document }\n                 *\n                 * 取消订阅日程变更事件\n                 *\n                 * 该接口用于以用户身份取消订阅指定日历下的日程变更事件。\n                 *\n                 * 当前身份必须对日历有reader、writer或owner权限（调用[获取日历](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/calendar/get)接口，role字段可查看权限）。\n                 */\n                unsubscription: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/calendars/:calendar_id/events/unsubscription`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * Exchange绑定\n             */\n            exchangeBinding: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=exchange_binding&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/exchange_binding/create document }\n                 *\n                 * 创建Exchange绑定关系\n                 *\n                 * 本接口将Exchange账户绑定到飞书账户，进而支持Exchange日历的导入\n                 *\n                 * 操作用户需要是企业超级管理员\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/exchange_bindings`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=exchange_binding&apiName=delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/exchange_binding/delete document }\n                 *\n                 * 解除Exchange绑定关系\n                 *\n                 * 本接口解除Exchange账户和飞书账户的绑定关系，Exchange账户解除绑定后才能绑定其他飞书账户\n                 *\n                 * 操作用户需要是企业超级管理员\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/exchange_bindings/:exchange_binding_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=exchange_binding&apiName=get&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/exchange_binding/get document }\n                 *\n                 * 获取绑定状态\n                 *\n                 * 本接口获取Exchange账户的绑定状态，包括exchange日历是否同步完成。\n                 *\n                 * 操作用户需要是企业超级管理员\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/exchange_bindings/:exchange_binding_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * freebusy\n             */\n            freebusy: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=freebusy&apiName=list&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/freebusy/list document }\n                 *\n                 * 查询主日历忙闲信息\n                 *\n                 * 查询用户主日历或会议室的忙闲信息。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/freebusy/list`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 日历设置\n             */\n            setting: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=setting&apiName=generate_caldav_conf&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/setting/generate_caldav_conf document }\n                 *\n                 * 生成CalDAV配置\n                 *\n                 * 用于为当前用户生成一个CalDAV账号密码，用于将飞书日历信息同步到本地设备日历。\n                 */\n                generateCaldavConf: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/settings/generate_caldav_conf`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 请假\n             */\n            timeoffEvent: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=timeoff_event&apiName=create&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/timeoff_event/create document }\n                 *\n                 * 创建请假日程\n                 *\n                 * 为指定用户创建一个请假日程，可以是一个普通请假日程，也可以是一个全天日程。;创建请假日程后，会在相应时间内，在用户个人签名页展示请假信息。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/timeoff_events`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=calendar&resource=timeoff_event&apiName=delete&version=v4 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/calendar-v4/timeoff_event/delete document }\n                 *\n                 * 删除请假日程\n                 *\n                 * 删除一个指定的请假日程，请假日程删除，用户个人签名页的请假信息也会消失。;一个应用只能删除自己创建的请假日程。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/calendar/v4/timeoff_events/:timeoff_event_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.comment_sdk = {};\n        /**\n         * 通讯录\n         */\n        this.contact = {\n            /**\n             * 自定义用户字段\n             */\n            customAttr: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/custom_attrs`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=custom_attr&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/custom_attr/list document }\n                 *\n                 * 获取企业自定义用户字段\n                 *\n                 * 获取企业自定义的用户字段配置信息\n                 *\n                 * 调用该接口前，需要先确认[企业管理员](https://www.feishu.cn/hc/zh-CN/articles/360049067822)在[企业管理后台 - 组织架构 - 成员字段管理](http://www.feishu.cn/admin/contacts/employee-field-new/custom) 自定义字段管理栏开启了“允许开放平台API调用“。;;![通讯录.gif](//sf3-cn.feishucdn.com/obj/open-platform-opendoc/544738c94f13ef0b9ebaff53a5133cc7_E9EGMkXyzX.gif)\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/custom_attrs`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 部门\n             */\n            department: {\n                childrenWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id/children`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=children&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/children document }\n                 *\n                 * 获取子部门列表\n                 *\n                 * 通过部门ID获取部门的子部门列表。\n                 *\n                 * - 部门ID 必填，根部门的部门ID 为0。;- 使用 `user_access_token` 时，返回该用户组织架构可见性范围（[登陆企业管理后台进行权限配置](https://www.feishu.cn/admin/security/permission/visibility)）内的所有可见部门。当进行递归查询时，最多1000个部门对该用户可见。;;- 使用 ;`tenant_access_token` 则基于应用的通讯录权限范围进行权限校验与过滤。;如果部门ID为0，会检验应用是否有全员通讯录权限，如果是非0 部门ID，则会校验应用是否有该部门的通讯录权限。无部门权限返回无部门通讯录权限错误码，有权限则返回部门下子部门列表（根据fetch_child决定是否递归）。\n                 */\n                children: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id/children`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/create document }\n                 *\n                 * 创建部门\n                 *\n                 * 该接口用于向通讯录中创建部门。\n                 *\n                 * 只可在应用的通讯录权限范围内的部门下创建部门。若需要在根部门下创建子部门，则应用通讯录权限范围需要设置为“全部成员”。应用商店应用无权限调用此接口。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/delete document }\n                 *\n                 * 删除部门\n                 *\n                 * 该接口用于从通讯录中删除部门。\n                 *\n                 * 应用需要同时拥有待删除部门及其父部门的通讯录授权。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/get document }\n                 *\n                 * 获取单个部门信息\n                 *\n                 * 该接口用于向通讯录获取单个部门信息。\n                 *\n                 * - 使用`tenant_access_token`时，应用需要拥有待查询部门的通讯录授权。如果需要获取根部门信息，则需要拥有全员权限。;- 使用`user_access_token`时，用户需要有待查询部门的可见性，如果需要获取根部门信息，则要求员工可见所有人。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=department&version=v3 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                parentWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/parent`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=parent&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/parent document }\n                 *\n                 * 获取父部门信息\n                 *\n                 * 该接口用来递归获取部门父部门的信息，并按照由子到父的顺序返回有权限的父部门信息列表。\n                 *\n                 * 使用`tenant_access_token`时,该接口只返回可见性范围内的父部门信息。;例如：A >>B>>C>>D四级部门，通讯录权限只到B，那么查询D部门的parent，会返回B和C两级部门。;使用user_access_token时,该接口只返回对于用户可见的父部门信息。\n                 */\n                parent: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/parent`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/patch document }\n                 *\n                 * 修改部门部分信息\n                 *\n                 * 该接口用于更新通讯录中部门的信息。\n                 *\n                 * 调用该接口需要具有该部门以及更新操作涉及的部门的通讯录权限。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/search`, path),\n                            method: \"POST\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=search&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/search document }\n                 *\n                 * 搜索部门\n                 *\n                 * 搜索部门，用户通过关键词查询可见的部门数据，部门可见性需要管理员在后台配置。\n                 *\n                 * 部门存在，但用户搜索不到并不一定是搜索有问题，可能是管理员在后台配置了权限控制，导致用户无法搜索到该部门。\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=unbind_department_chat&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/unbind_department_chat document }\n                 *\n                 * 部门群转为普通群\n                 *\n                 * 通过该接口将部门群转为普通群。\n                 */\n                unbindDepartmentChat: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/unbind_department_chat`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=department&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/department/update document }\n                 *\n                 * 更新部门所有信息\n                 *\n                 * 该接口用于更新当前部门所有信息。\n                 *\n                 * - 调用该接口需要具有该部门与更新部门信息涉及的通讯录权限。;; - 没有填写的字段会被置为空值（order字段除外）。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/departments/:department_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 人员类型\n             */\n            employeeTypeEnum: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/create document }\n                 *\n                 * 新增人员类型\n                 *\n                 * 新增自定义人员类型\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/delete document }\n                 *\n                 * 删除人员类型\n                 *\n                 * 删除自定义人员类型\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums/:enum_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/list document }\n                 *\n                 * 查询人员类型\n                 *\n                 * 该接口用于获取员工的人员类型\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=employee_type_enum&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/employee_type_enum/update document }\n                 *\n                 * 更新人员类型\n                 *\n                 * 更新自定义人员类型\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/employee_type_enums/:enum_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * functional_role\n             */\n            functionalRole: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=contact&resource=functional_role&version=v3 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=contact&resource=functional_role&version=v3 document }\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=contact&resource=functional_role&version=v3 document }\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * functional_role.member\n             */\n            functionalRoleMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=batch_create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=contact&resource=functional_role.member&version=v3 document }\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=batch_delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=contact&resource=functional_role.member&version=v3 document }\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/batch_delete`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=contact&resource=functional_role.member&version=v3 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/:member_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=functional_role.member&version=v3 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=functional_role.member&apiName=scopes&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=scopes&project=contact&resource=functional_role.member&version=v3 document }\n                 */\n                scopes: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/functional_roles/:role_id/members/scopes`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户组\n             */\n            group: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/create document }\n                 *\n                 * 创建用户组\n                 *\n                 * 使用该接口创建用户组，请注意创建用户组时应用的通讯录权限范围需为“全部员工”，否则会创建失败，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/delete document }\n                 *\n                 * 删除用户组\n                 *\n                 * 通过该接口可删除企业中的用户组，请注意删除用户组时应用的通讯录权限范围需为“全部员工”，否则会删除失败，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/get document }\n                 *\n                 * 查询用户组\n                 *\n                 * 根据用户组 ID 查询某个用户组的基本信息，支持查询普通用户组和动态用户组。请确保应用的通讯录权限范围里包括该用户组或者是“全部员工”，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=member_belong&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/member_belong document }\n                 *\n                 * 查询用户所属用户组\n                 *\n                 * 通过该接口可查询该用户所属的用户组列表，可分别查询普通用户组和动态用户组。如果应用的通讯录权限范围是“全部员工”，则可获取该员工所属的全部用户组列表。如果应用的通讯录权限范围不是“全部员工”，则仅可获取通讯录权限范围内该员工所属的用户组。[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                memberBelong: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/member_belong`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/patch document }\n                 *\n                 * 更新用户组\n                 *\n                 * 使用该接口更新用户组信息，请注意更新用户组时应用的通讯录权限范围需为“全部员工”，否则会更新失败。[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                simplelistWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/simplelist`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group&apiName=simplelist&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group/simplelist document }\n                 *\n                 * 查询用户组列表\n                 *\n                 * 通过该接口可查询企业的用户组列表，可分别查询普通用户组或动态用户组。如果应用的通讯录权限范围是“全部员工”，则可获取企业全部用户组列表。如果应用的通讯录权限范围不是“全部员工”，则仅可获取通讯录权限范围内的用户组。[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                simplelist: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/simplelist`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户组成员\n             */\n            groupMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=add&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/add document }\n                 *\n                 * 添加用户组成员\n                 *\n                 * 向用户组中添加成员(目前成员仅支持用户，未来会支持部门)，如果应用的通讯录权限范围是“全部员工”，则可将任何成员添加到任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员添加到通讯录权限范围的用户组中，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                add: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/add`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=batch_add&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/batch_add document }\n                 *\n                 * 批量添加用户组成员\n                 *\n                 * 向普通用户组中批量添加成员(目前仅支持添加用户，暂不支持添加部门），如果应用的通讯录权限范围是“全部员工”，则可将任何成员添加到任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员添加到通讯录权限范围的用户组中，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 *\n                 * 请求体中的member_type，目前仅支持user， 未来将支持department。\n                 */\n                batchAdd: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/batch_add`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=batch_remove&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/batch_remove document }\n                 *\n                 * 批量移除用户组成员\n                 *\n                 * 从普通用户组中批量移除成员 (目前仅支持移除用户，暂不支持移除部门）。如果应用的通讯录权限范围是“全部员工”，则可将任何成员移出任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员从通讯录权限范围的用户组中移除， [点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 *\n                 * 请求体中的member_type，目前仅支持user， 未来将支持department。\n                 */\n                batchRemove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/batch_remove`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=remove&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/remove document }\n                 *\n                 * 移除用户组成员\n                 *\n                 * 从用户组中移除成员 (目前成员仅支持用户，未来会支持部门)，如果应用的通讯录权限范围是“全部员工”，则可将任何成员移出任何用户组。如果应用的通讯录权限范围不是“全部员工”，则仅可将通讯录权限范围中的成员从通讯录权限范围的用户组中移除， [点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                remove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/remove`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=group.member&apiName=simplelist&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/group-member/simplelist document }\n                 *\n                 * 查询用户组成员列表\n                 *\n                 * 通过该接口可查询某个用户组的成员列表（支持查询成员中的用户和部门）, 本接口支持普通用户组和动态用户组。如果应用的通讯录权限范围是“全部员工”，则可查询企业内任何用户组的成员列表。如果应用的通讯录权限范围不是“全部员工”，则仅可查询通讯录权限范围中的用户组的成员列表，[点击了解通讯录权限范围](https://open.feishu.cn/document/ukTMukTMukTM/uETNz4SM1MjLxUzM/v3/guides/scope_authority)。\n                 */\n                simplelist: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/group/:group_id/member/simplelist`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * job_family\n             */\n            jobFamily: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=contact&resource=job_family&version=v3 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=contact&resource=job_family&version=v3 document }\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families/:job_family_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=contact&resource=job_family&version=v3 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families/:job_family_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=job_family&version=v3 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_family&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=contact&resource=job_family&version=v3 document }\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_families/:job_family_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * job_level\n             */\n            jobLevel: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=contact&resource=job_level&version=v3 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=contact&resource=job_level&version=v3 document }\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels/:job_level_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=contact&resource=job_level&version=v3 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels/:job_level_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=job_level&version=v3 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=job_level&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=contact&resource=job_level&version=v3 document }\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/job_levels/:job_level_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 通讯录权限范围\n             */\n            scope: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/scopes`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=scope&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/scope/list document }\n                 *\n                 * 获取通讯录授权范围\n                 *\n                 * 该接口用于获取应用被授权可访问的通讯录范围，包括可访问的部门列表、用户列表和用户组列表。;授权范围为全员时，返回的部门列表为该企业所有的一级部门；否则返回的部门为管理员在设置授权范围时勾选的部门（不包含勾选部门的子部门）。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/scopes`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 单位\n             */\n            unit: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=bind_department&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/bind_department document }\n                 *\n                 * 建立部门与单位的绑定关系\n                 *\n                 * 通过该接口建立部门与单位的绑定关系。由于单位是旗舰版付费功能，企业需开通相关版本，否则会绑定失败，不同版本请参考[飞书版本对比](https://www.feishu.cn/service)\n                 */\n                bindDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/bind_department`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/create document }\n                 *\n                 * 创建单位\n                 *\n                 * 该接口用于创建单位。注意：单位功能属于旗舰版付费功能，企业需开通对应版本才可以创建单位，不同版本请参考[飞书版本对比](https://www.feishu.cn/service)。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/delete document }\n                 *\n                 * 删除单位\n                 *\n                 * 使用该接口删除单位，需要有更新单位的权限。注意：如果单位的单位类型被其它的业务使用，不允许删除。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/:unit_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/get document }\n                 *\n                 * 获取单位信息\n                 *\n                 * 该接口用于获取单位信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/:unit_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/list document }\n                 *\n                 * 批量获取单位列表\n                 *\n                 * 通过该接口获取企业的单位列表，需获取单位的权限\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=list_department&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/list_department document }\n                 *\n                 * 获取单位绑定的部门列表\n                 *\n                 * 通过该接口获取单位绑定的部门列表，需具有获取单位的权限\n                 */\n                listDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/list_department`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/patch document }\n                 *\n                 * 修改单位信息\n                 *\n                 * 调用该接口，需要有更新单位的权限。注意：单位功能属于旗舰版付费功能，企业需开通对应版本才可以修改单位\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/:unit_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=unit&apiName=unbind_department&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/unit/unbind_department document }\n                 *\n                 * 解除部门与单位的绑定关系\n                 *\n                 * 通过该接口解除部门与单位的绑定关系，需更新单位的权限，需对应部门的通讯录权限。由于单位是旗舰版付费功能，企业需开通相关功能，否则会解绑失败\n                 */\n                unbindDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/unit/unbind_department`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户\n             */\n            user: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=batch_get_id&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/batch_get_id document }\n                 *\n                 * 通过手机号或邮箱获取用户 ID\n                 *\n                 * 通过该接口，可使用手机号/邮箱获取用户的 ID 信息，具体获取支持的 ID 类型包括 open_id、user_id、union_id，可通过查询参数指定。\n                 *\n                 * 如果查询的手机号、邮箱不存在，或者无权限查看对应的用户，则返回的用户ID列表为空。\n                 */\n                batchGetId: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/batch_get_id`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/create document }\n                 *\n                 * 创建用户\n                 *\n                 * 使用该接口向通讯录创建一个用户，可以理解为员工入职。创建用户后只返回有数据权限的数据。具体的数据权限的与字段的对应关系请参照[应用权限](https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN)。\n                 *\n                 * - 新增用户的所有部门必须都在当前应用的通讯录授权范围内才允许新增用户，如果想要在根部门下新增用户，必须要有全员权限。;- 应用商店应用无权限调用此接口。;- 创建用户后，会给用户发送邀请短信/邮件，用户在操作同意后才可访问团队。;- 返回数据中不返回手机号，如果需要请重新查询用户信息获取手机号。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/delete document }\n                 *\n                 * 删除用户\n                 *\n                 * 该接口用于从通讯录删除一个用户信息，可以理解为员工离职。\n                 *\n                 * - 若用户归属部门A、部门B，应用的通讯录权限范围必须包括部门A和部门B才可以删除用户。;- 用户可以在删除员工时设置删除员工数据（如文档）的接收者，如果不设置则由其leader接收，如果该员工没有leader，则会将该员工的数据删除。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                findByDepartmentWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/find_by_department`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=find_by_department&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/find_by_department document }\n                 *\n                 * 获取部门直属用户列表\n                 *\n                 * 基于部门ID获取部门直属用户列表。\n                 *\n                 * - 部门ID 必填，根部门的部门ID为0。;- 使用 `user_access_token` 情况下根据个人组织架构的通讯录可见范围进行权限过滤，返回个人组织架构通讯录范围（[登录企业管理后台进行权限配置](https://www.feishu.cn/admin/security/permission/visibility)）内可见的用户数据。;- 使用`tenant_access_token`会根据应用通讯录的范围进行权限过滤。 如果请求的部门ID为0，则校验应用是否具有全员通讯录权限； 如果是非0的部门ID，则会验证应用是否具有该部门的通讯录权限。 无权限返回无权限错误码，有权限则返回对应部门下的直接用户列表。\n                 */\n                findByDepartment: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/find_by_department`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/get document }\n                 *\n                 * 获取单个用户信息\n                 *\n                 * 该接口用于获取通讯录中单个用户的信息。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/contact/v3/users`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=list&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=contact&resource=user&version=v3 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/patch document }\n                 *\n                 * 修改用户部分信息\n                 *\n                 * 该接口用于更新通讯录中用户的字段，未传递的参数不会更新。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=resurrect&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/resurrect document }\n                 *\n                 * 恢复已删除用户\n                 *\n                 * 该接口用于恢复已删除用户（已离职的成员），仅自建应用可申请，应用商店应用无权调用接口。\n                 *\n                 * - 仅支持恢复离职 30 天内的成员。恢复后，部分用户数据仍不可恢复，请谨慎调用。;- 待恢复成员的用户 ID 不能被企业内其他成员使用。如有重复，请先离职对应的成员，否则接口会报错。;- 待恢复成员的手机号和邮箱不能被企业内其他成员使用。如有重复，请先修改对应成员的信息，否则接口会报错。\n                 */\n                resurrect: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id/resurrect`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=contact&resource=user&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/contact-v3/user/update document }\n                 *\n                 * 更新用户所有信息\n                 *\n                 * 该接口用于更新通讯录中用户的字段。\n                 *\n                 * 应用需要拥有待更新用户的通讯录授权，如果涉及到用户部门变更，还需要同时拥有变更前、后所有新部门的通讯录授权。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/contact/v3/users/:user_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.content_check = {};\n        /**\n             \n             */\n        this.contract = {};\n        /**\n         * CoreHR\n         */\n        this.corehr = {\n            /**\n             * 休假管理\n             */\n            leave: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=corehr&resource=leave&apiName=leave_request_history&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/leave/leave_request_history document }\n                 *\n                 * 批量查询员工请假记录\n                 *\n                 * 批量获取员工的请假记录数据\n                 */\n                leaveRequestHistory: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/corehr/v1/leaves/leave_request_history`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.docs_tool = {};\n        /**\n         * 云文档-文档\n         */\n        this.docx = {\n            /**\n             * 块\n             */\n            documentBlock: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=batch_update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/batch_update document }\n                 *\n                 * 批量更新块\n                 *\n                 * 批量更新块的富文本内容。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 3 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnMiwAKCiE6oQEkPyhvmmQEe)，了解相关规则及约束。\n                 */\n                batchUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/batch_update`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/get document }\n                 *\n                 * 获取块\n                 *\n                 * 获取指定块的富文本内容。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 5 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnamKaccZKqIMopnREJCZUMe#doxcnWEMWYAg2YMkEq0SZXHzaih)，了解相关规则及约束。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/list document }\n                 *\n                 * 获取文档所有块\n                 *\n                 * 获取文档所有块的富文本内容并分页返回。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 5 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnamKaccZKqIMopnREJCZUMe#doxcn6AkCE2AUUm2WwxID7lS7Xc)，了解相关规则及约束。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block/patch document }\n                 *\n                 * 更新块\n                 *\n                 * 更新指定的块。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 3 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnEeyS0I8MMqoieIMpK7jm8g)，了解相关规则及约束。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * document.block.children\n             */\n            documentBlockChildren: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block.children&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block-children/batch_delete document }\n                 *\n                 * 删除块\n                 *\n                 * 指定需要操作的块，删除其指定范围的子块。如果操作成功，接口将返回应用删除操作后的文档版本号。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 3 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcngCsscGk0WacO258mYDgM6b)，了解相关规则及约束。\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children/batch_delete`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block.children&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block-children/create document }\n                 *\n                 * 创建块\n                 *\n                 * 指定需要操作的块，为其创建一批子块，并插入到指定位置。如果操作成功，接口将返回新创建子块的富文本内容。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 3 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnm0ooUe0s20GwwVB3a05rtb)，了解相关规则及约束。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document.block.children&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document-block-children/get document }\n                 *\n                 * 获取所有子块\n                 *\n                 * 给定一个指定版本的文档，并指定需要操作的块，分页遍历其所有子块富文本内容 。如果不指定版本，则会默认查询最新版本。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 5 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnE2UK2yY0gEGK8nBMPtB0vd)，了解相关规则及约束。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/blocks/:block_id/children`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 文档\n             */\n            document: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document/create document }\n                 *\n                 * 创建文档\n                 *\n                 * 创建新版文档，文档标题和目录可选。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 3 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnyoyCgwS8ywWwMtQr9yjZ2f)，了解相关规则及约束。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document/get document }\n                 *\n                 * 获取文档基本信息\n                 *\n                 * 获取文档最新版本号、标题等\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 5 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnWKAE4aSaIU4GcdLInSaVde)，了解相关规则及约束。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=docx&resource=document&apiName=raw_content&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/document-docx/docx-v1/document/raw_content document }\n                 *\n                 * 获取文档纯文本内容\n                 *\n                 * 获取文档的纯文本内容。\n                 *\n                 * 频率限制：单个应用调用频率上限为每秒 5 次。\n                 *\n                 * 在调用此接口前，请仔细阅读[新版文档 OpenAPI 接口校验规则](https://bytedance.feishu.cn/docx/doxcnby5Y0yoACL3PdfZqrJEm6f#doxcnQeqI4wiKIMis6GNvCOBuqg)，了解相关规则及约束。\n                 */\n                rawContent: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/docx/v1/documents/:document_id/raw_content`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 云文档-文件管理\n         */\n        this.drive = {\n            /**\n             * 导出\n             */\n            exportTask: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=export_task&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/create document }\n                 *\n                 * 创建导出任务\n                 *\n                 * 创建导出任务，将云文件导出为指定格式的本地文件。该接口为异步接口，需要通过轮询 [查询导出任务结果](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/get) 接口获取任务结果。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/export_tasks`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=export_task&apiName=download&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/download document }\n                 *\n                 * 下载导出文件\n                 *\n                 * 根据任务导出结果的token，下载导出文件\n                 */\n                download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/export_tasks/file/:file_token/download`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=export_task&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/get document }\n                 *\n                 * 查询导出任务结果\n                 *\n                 * 根据[创建导出任务](/ssl::ttdoc//uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/create)的ticket查询导出任务的结果，前提条件需要先调用创建导出任务接口。;;通过该接口获取到下载文件的 token 后调用[下载导出文件接口](/ssl::ttdoc//uAjLw4CM/ukTMukTMukTM/reference/drive-v1/export_task/download)将文件进行下载\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/export_tasks/:ticket`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 评论\n             */\n            fileComment: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=batch_query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/batch_query document }\n                 *\n                 * 批量获取评论\n                 *\n                 * 该接口用于根据评论 ID 列表批量获取评论。\n                 */\n                batchQuery: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/batch_query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/create document }\n                 *\n                 * 添加评论\n                 *\n                 * 往云文档添加一条全局评论。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/get document }\n                 *\n                 * 获取评论\n                 *\n                 * 获取云文档中的某条评论。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/list document }\n                 *\n                 * 分页获取文档评论\n                 *\n                 * 该接口用于根据文档 token 分页获取文档评论。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment/patch document }\n                 *\n                 * 解决/恢复 评论\n                 *\n                 * 解决或恢复云文档中的评论。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 评论\n             */\n            fileCommentReply: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment.reply&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment-reply/delete document }\n                 *\n                 * 删除回复\n                 *\n                 * 删除云文档中的某条回复。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id/replies/:reply_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.comment.reply&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-comment-reply/update document }\n                 *\n                 * 更新回复\n                 *\n                 * 更新云文档中的某条回复。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/comments/:comment_id/replies/:reply_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 异步任务状态\n             */\n            file: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=copy&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/copy document }\n                 *\n                 * 复制文件\n                 *\n                 * 将文件复制到用户云空间的其他文件夹中。不支持复制文件夹。;;如果目标文件夹是我的空间，则复制的文件会在「**我的空间**」的「**归我所有**」列表里。\n                 *\n                 * 该接口不支持并发拷贝多个文件，且调用频率上限为 5QPS 且 10000次/天\n                 */\n                copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/copy`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=create_folder&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/create_folder document }\n                 *\n                 * 新建文件夹\n                 *\n                 * 在用户云空间的指定文件夹中创建一个新的空文件夹。\n                 *\n                 * 该接口不支持并发创建，且调用频率上限为 5QPS 以及 10000次/天\n                 */\n                createFolder: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/create_folder`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=create_shortcut&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create_shortcut&project=drive&resource=file&version=v1 document }\n                 */\n                createShortcut: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/create_shortcut`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/delete document }\n                 *\n                 * 删除文件\n                 *\n                 * 删除用户在云空间内的文件或者文件夹。文件或者文件夹被删除后，会进入用户回收站里。\n                 *\n                 * 该接口不支持并发调用，且调用频率上限为5QPS。删除文件夹会异步执行并返回一个task_id，可以使用[task_check](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/task_check)接口查询任务执行状态。\n                 *\n                 * 要删除文件需要确保应用具有下述两种权限之一：;1. 该应用是文件所有者并且具有该文件所在父文件夹的编辑权限。;2. 该应用并非文件所有者，但是是该文件所在父文件夹的所有者或者拥有该父文件夹的所有权限（full access）。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=download&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/download document }\n                 *\n                 * 下载文件\n                 *\n                 * 使用该接口可以下载在云空间目录下的文件（不含飞书文档/表格/思维导图等在线文档）。支持range下载。\n                 *\n                 * 该接口支持调用频率上限为5QPS\n                 */\n                download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/download`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/list document }\n                 *\n                 * 获取文件夹下的清单\n                 *\n                 * 获取用户云空间中指定文件夹下的文件清单。清单类型包括文件、各种在线文档（文档、电子表格、多维表格、思维笔记）、文件夹和快捷方式。该接口支持分页，但是不会递归的获取子文件夹的清单。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=move&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/move document }\n                 *\n                 * 移动文件\n                 *\n                 * 将文件或者文件夹移动到用户云空间的其他位置。\n                 */\n                move: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/move`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=subscribe&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/subscribe document }\n                 *\n                 * 订阅云文档事件\n                 *\n                 * 该接口仅支持**文档拥有者**订阅自己文档的通知事件，可订阅的文档类型为**旧版文档**、**新版文档**、**电子表格**和**多维表格**。在调用该接口之前请确保正确[配置事件回调网址和订阅事件类型](https://open.feishu.cn/document/ukTMukTMukTM/uUTNz4SN1MjL1UzM#2eb3504a)(暂不支持单独订阅文档维度的某类事件)，事件类型参考[事件列表](https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-list)。\n                 */\n                subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=task_check&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/task_check document }\n                 *\n                 * 查询异步任务状态\n                 *\n                 * 查询删除文件夹等异步任务的状态信息。\n                 */\n                taskCheck: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/task_check`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_all&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_all document }\n                 *\n                 * 上传文件\n                 *\n                 * 向云空间指定目录下上传一个小文件。\n                 *\n                 * 该接口支持调用频率上限为5QPS\n                 *\n                 * 请不要使用这个接口上传大于20MB的文件，如果有这个需求可以尝试使用[分片上传接口](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/multipart-upload-file-/introduction)。\n                 */\n                uploadAll: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_all`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_finish&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_finish document }\n                 *\n                 * 分片上传文件（完成上传）\n                 *\n                 * 触发完成上传。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 */\n                uploadFinish: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_finish`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_part&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_part document }\n                 *\n                 * 分片上传文件（上传分片）\n                 *\n                 * 上传对应的文件块。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 */\n                uploadPart: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_part`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file&apiName=upload_prepare&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file/upload_prepare document }\n                 *\n                 * 分片上传文件（预上传）\n                 *\n                 * 发送初始化请求获取上传事务ID和分块策略，目前是以4MB大小进行定长分片。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 *\n                 * 你在24小时内可保存上传事务ID和上传进度，以便可以恢复上传\n                 */\n                uploadPrepare: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/upload_prepare`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * file.statistics\n             */\n            fileStatistics: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.statistics&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-statistics/get document }\n                 *\n                 * 获取文件统计信息\n                 *\n                 * 此接口用于获取文件统计信息，包括文档阅读人数、次数和点赞数。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/statistics`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 订阅\n             */\n            fileSubscription: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.subscription&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-subscription/create document }\n                 *\n                 * 创建订阅\n                 *\n                 * 订阅文档中的变更事件，当前支持文档评论订阅，订阅后文档评论更新会有“云文档助手”推送给订阅的用户\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscriptions`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.subscription&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-subscription/get document }\n                 *\n                 * 获取订阅状态\n                 *\n                 * 根据订阅ID获取该订阅的状态\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscriptions/:subscription_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.subscription&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-subscription/patch document }\n                 *\n                 * 更新订阅状态\n                 *\n                 * 根据订阅ID更新订阅状态\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/subscriptions/:subscription_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 文档版本\n             */\n            fileVersion: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/create document }\n                 *\n                 * 创建文档版本\n                 *\n                 * 创建文档版本。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/delete document }\n                 *\n                 * 删除文档版本\n                 *\n                 * 删除文档版本。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions/:version_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions/:version_id`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/get document }\n                 *\n                 * 获取文档版本\n                 *\n                 * 获取文档版本。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions/:version_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=file.version&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/file-version/list document }\n                 *\n                 * 获取文档版本列表\n                 *\n                 * 获取文档所有版本。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/files/:file_token/versions`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导入\n             */\n            importTask: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=import_task&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/import_task/create document }\n                 *\n                 * 创建导入任务\n                 *\n                 * 创建导入任务。支持导入为 doc、docx、sheet、bitable，参考[导入用户指南](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/import_task/import-user-guide)\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/import_tasks`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=import_task&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/import_task/get document }\n                 *\n                 * 查询导入结果\n                 *\n                 * 根据创建导入任务返回的 ticket 查询导入结果。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/import_tasks/:ticket`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 素材\n             */\n            media: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=batch_get_tmp_download_url&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/batch_get_tmp_download_url document }\n                 *\n                 * 获取素材临时下载链接\n                 *\n                 * 通过file_token获取素材临时下载链接，链接时效性是24小时，过期失效。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 */\n                batchGetTmpDownloadUrl: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/batch_get_tmp_download_url`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=download&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/download document }\n                 *\n                 * 下载素材\n                 *\n                 * 使用该接口可以下载素材。素材表示在各种创作容器里的文件，如Doc文档内的图片，文件均属于素材。支持range下载。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 */\n                download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/:file_token/download`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_all&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_all document }\n                 *\n                 * 上传素材\n                 *\n                 * 将文件、图片、视频等素材文件上传到指定云文档中。素材文件在云空间中不会显示，只会显示在对应云文档中。\n                 *\n                 * 该接口支持调用频率上限为5QPS\n                 *\n                 * 请不要使用这个接口上传大于20MB的文件，如果有这个需求可以尝试使用[分片上传接口](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/multipart-upload-media/introduction)。\n                 */\n                uploadAll: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_all`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_finish&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_finish document }\n                 *\n                 * 分片上传素材（完成上传）\n                 *\n                 * 触发完成上传。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 */\n                uploadFinish: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_finish`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_part&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_part document }\n                 *\n                 * 分片上传素材（上传分片）\n                 *\n                 * 上传对应的文件块。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 */\n                uploadPart: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_part`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_prepare&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_prepare document }\n                 *\n                 * 分片上传素材（预上传）\n                 *\n                 * 发送初始化请求获取上传事务ID和分块策略，目前是以4MB大小进行定长分片。\n                 *\n                 * 该接口不支持太高的并发，且调用频率上限为5QPS\n                 *\n                 * 您在24小时内可保存上传事务ID和上传进度，以便可以恢复上传\n                 */\n                uploadPrepare: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/medias/upload_prepare`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * meta\n             */\n            meta: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=meta&apiName=batch_query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/meta/batch_query document }\n                 *\n                 * 获取文档元数据\n                 *\n                 * 该接口用于根据 token 获取各类文件的元数据\n                 */\n                batchQuery: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/metas/batch_query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 成员\n             */\n            permissionMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=auth&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=auth&project=drive&resource=permission.member&version=v1 document }\n                 */\n                auth: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/auth`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/create document }\n                 *\n                 * 增加协作者权限\n                 *\n                 * 该接口用于根据 filetoken 给用户增加文档的权限。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/delete document }\n                 *\n                 * 移除协作者权限\n                 *\n                 * 该接口用于根据 filetoken 移除文档协作者的权限。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/:member_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/list document }\n                 *\n                 * 获取协作者列表\n                 *\n                 * 该接口用于根据 filetoken 查询协作者\n                 *\n                 * - 你能获取到协作者列表的前提是你对该文档有分享权限;- 目前仅支持人、群、组织架构三种类型的协作者\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=transfer_owner&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=transfer_owner&project=drive&resource=permission.member&version=v1 document }\n                 */\n                transferOwner: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/transfer_owner`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.member&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/update document }\n                 *\n                 * 更新协作者权限\n                 *\n                 * 该接口用于根据 filetoken 更新文档协作者的权限。\n                 *\n                 * 该接口要求文档协作者已存在，如还未对文档协作者授权请先调用[「增加权限」 ](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-member/create)接口进行授权。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/members/:member_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 设置\n             */\n            permissionPublic: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-public/get document }\n                 *\n                 * 获取云文档权限设置\n                 *\n                 * 该接口用于根据 filetoken 获取云文档的权限设置。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/permission-public/patch document }\n                 *\n                 * 更新云文档权限设置\n                 *\n                 * 该接口用于根据 filetoken 更新云文档的权限设置。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * permission.public.password\n             */\n            permissionPublicPassword: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public.password&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=drive&resource=permission.public.password&version=v1 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public/password`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public.password&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=delete&project=drive&resource=permission.public.password&version=v1 document }\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public/password`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=drive&resource=permission.public.password&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=update&project=drive&resource=permission.public.password&version=v1 document }\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/drive/v1/permissions/:token/public/password`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.edu = {};\n        /**\n         * 智能人事\n         */\n        this.ehr = {\n            /**\n             * 飞书人事（标准版)\n             */\n            attachment: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=ehr&resource=attachment&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/ehr/ehr-v1/attachment/get document }\n                 *\n                 * 下载附件\n                 *\n                 * 根据文件 token 下载文件。;;调用 「批量获取员工花名册信息」接口的返回值中，「文件」类型的字段 id，即是文件 token\n                 *\n                 * ![image.png](//sf1-ttcdn-tos.pstatp.com/obj/open-platform-opendoc/bed391d2a8ce6ed2d5985ea69bf92850_9GY1mnuDXP.png)\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/ehr/v1/attachments/:token`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n            },\n            /**\n             * 飞书人事（标准版)\n             */\n            employee: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/ehr/v1/employees`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=ehr&resource=employee&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/ehr/ehr-v1/employee/list document }\n                 *\n                 * 批量获取员工花名册信息\n                 *\n                 * 根据员工飞书用户 ID / 员工状态 / 雇员类型等搜索条件 ，批量获取员工花名册字段信息。字段包括「系统标准字段 / system_fields」和「自定义字段 / custom_fields」\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/ehr/v1/employees`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.elearning = {};\n        /**\n         * 事件订阅\n         */\n        this.event = {\n            /**\n             * 事件订阅\n             */\n            outboundIp: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/event/v1/outbound_ip`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=event&resource=outbound_ip&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-v1/outbound_ip/list document }\n                 *\n                 * 获取事件出口 IP\n                 *\n                 * 飞书开放平台向应用配置的回调地址推送事件时，是通过特定的 IP 发送出去的，应用可以通过本接口获取所有相关的 IP 地址。\n                 *\n                 * IP 地址有变更可能，建议应用每隔 6 小时定时拉取最新的 IP 地址，以免由于企业防火墙设置，导致应用无法及时接收到飞书开放平台推送的事件。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/event/v1/outbound_ip`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.exam = {};\n        /**\n             \n             */\n        this.face_detection = {};\n        /**\n             \n             */\n        this.feelgood = {};\n        /**\n             \n             */\n        this.gray_test_open_sg = {\n            /**\n             * moto\n             */\n            moto: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=gray_test_open_sg&resource=moto&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=gray_test_open_sg&resource=moto&version=v1 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=gray_test_open_sg&resource=moto&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=gray_test_open_sg&resource=moto&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos/:moto_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=gray_test_open_sg&resource=moto&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=gray_test_open_sg&resource=moto&version=v1 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/gray_test_open_sg/v1/motos`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 服务台\n         */\n        this.helpdesk = {\n            /**\n             * 客服\n             */\n            agent: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent&apiName=agent_email&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent/agent_email document }\n                 *\n                 * 获取客服邮箱地址\n                 *\n                 * 该接口用于获取客服邮箱地址\n                 */\n                agentEmail: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_emails`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent/patch document }\n                 *\n                 * 更新客服信息\n                 *\n                 * 更新客服状态等信息\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 客服工作日程\n             */\n            agentSchedules: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent.schedules&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent-schedules/delete document }\n                 *\n                 * 删除客服\n                 *\n                 * 该接口用于删除客服\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id/schedules`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent.schedules&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent-schedules/get document }\n                 *\n                 * 获取客服工作日程;\n                 *\n                 * 该接口用于获取客服信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id/schedules`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent.schedules&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent-schedules/patch document }\n                 *\n                 * 更新客服日程\n                 *\n                 * 该接口用于更新客服的日程\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agents/:agent_id/schedules`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * agent_schedule\n             */\n            agentSchedule: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_schedule&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_schedule/create document }\n                 *\n                 * 创建客服\n                 *\n                 * 该接口用于创建客服\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_schedules`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_schedule&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_schedule/list document }\n                 *\n                 * 获取全部客服工作日程\n                 *\n                 * 该接口用于获取所有客服信息\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_schedules`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 客服技能\n             */\n            agentSkill: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/create document }\n                 *\n                 * 创建客服技能\n                 *\n                 * 该接口用于创建客服技能\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/delete document }\n                 *\n                 * 删除客服技能\n                 *\n                 * 该接口用于删除客服技能\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills/:agent_skill_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/get document }\n                 *\n                 * 获取客服技能\n                 *\n                 * 该接口用于获取客服技能\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills/:agent_skill_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/list document }\n                 *\n                 * 获取全部客服技能\n                 *\n                 * 获取全部客服技能\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill/patch document }\n                 *\n                 * 更新客服技能\n                 *\n                 * 该接口用于更新客服技能\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skills/:agent_skill_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 客服技能规则\n             */\n            agentSkillRule: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=agent_skill_rule&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/agent_skill_rule/list document }\n                 *\n                 * 获取客服技能列表\n                 *\n                 * 该接口用于获取全部客服技能。仅支持自建应用。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/agent_skill_rules`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 机器人消息\n             */\n            botMessage: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=bot.message&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/bot-message/create document }\n                 *\n                 * 服务台机器人发送消息\n                 *\n                 * 通过服务台机器人给指定用户的服务台专属群或私聊发送消息，支持文本、富文本、卡片、图片。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/message`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 知识库分类\n             */\n            category: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/create document }\n                 *\n                 * 创建知识库分类\n                 *\n                 * 该接口用于创建知识库分类。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/delete document }\n                 *\n                 * 删除知识库分类详情\n                 *\n                 * 该接口用于删除知识库分类详情。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories/:id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/get document }\n                 *\n                 * 获取知识库分类\n                 *\n                 * 该接口用于获取知识库分类。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories/:id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/list document }\n                 *\n                 * 获取全部知识库分类 - meta\n                 *\n                 * 该接口用于获取服务台知识库所有分类\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=category&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/category/patch document }\n                 *\n                 * 更新知识库分类详情\n                 *\n                 * 该接口用于更新知识库分类详情。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/categories/:id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 事件订阅\n             */\n            event: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=event&apiName=subscribe&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/event/subscribe document }\n                 *\n                 * 订阅服务台事件\n                 *\n                 * 用于订阅服务台事件\n                 */\n                subscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/events/subscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=event&apiName=unsubscribe&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/event/unsubscribe document }\n                 *\n                 * 取消订阅服务台事件\n                 *\n                 * 用于取消订阅服务台事件\n                 */\n                unsubscribe: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/events/unsubscribe`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 知识库\n             */\n            faq: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/create document }\n                 *\n                 * 创建知识库\n                 *\n                 * 该接口用于创建知识库。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/delete document }\n                 *\n                 * 删除知识库\n                 *\n                 * 该接口用于删除知识库。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=faq_image&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/faq_image document }\n                 *\n                 * 获取知识库图像\n                 *\n                 * 该接口用于获取知识库图像。\n                 */\n                faqImage: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id/image/:image_key`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/get document }\n                 *\n                 * 获取知识库详情\n                 *\n                 * 该接口用于获取服务台知识库详情。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/list document }\n                 *\n                 * 获取全部知识库详情\n                 *\n                 * 该接口用于获取服务台知识库详情。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/patch document }\n                 *\n                 * 修改知识库\n                 *\n                 * 该接口用于修改知识库。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/:id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/search`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=faq&apiName=search&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/faq/search document }\n                 *\n                 * 搜索知识库\n                 *\n                 * 该接口用于搜索服务台知识库。\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/faqs/search`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 推送中心\n             */\n            notification: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=cancel_approve&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/cancel_approve document }\n                 *\n                 * 取消审核\n                 *\n                 * 提交审核后，如果需要取消审核，则调用此接口\n                 */\n                cancelApprove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/cancel_approve`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=cancel_send&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/cancel_send document }\n                 *\n                 * 取消推送\n                 *\n                 * 取消推送接口，审核通过后待调度可以调用，发送过程中可以调用（会撤回已发送的消息），发送完成后可以需要推送（会撤回所有已发送的消息）\n                 */\n                cancelSend: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/cancel_send`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/create document }\n                 *\n                 * 创建推送\n                 *\n                 * 调用接口创建推送，创建成功后为草稿状态\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=execute_send&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/execute_send document }\n                 *\n                 * 执行推送\n                 *\n                 * 审核通过后调用此接口设置推送时间，等待调度系统调度，发送消息\n                 */\n                executeSend: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/execute_send`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/get document }\n                 *\n                 * 查询推送\n                 *\n                 * 查询推送详情\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/patch document }\n                 *\n                 * 更新推送\n                 *\n                 * 更新推送信息，只有在草稿状态下才可以调用此接口进行更新\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=preview&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/preview document }\n                 *\n                 * 预览推送内容\n                 *\n                 * 在正式执行推送之前是可以调用此接口预览设置的推送内容\n                 */\n                preview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/preview`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=notification&apiName=submit_approve&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/notification/submit_approve document }\n                 *\n                 * 提交审核\n                 *\n                 * 正常情况下调用创建推送接口后，就可以调用提交审核接口，如果创建人是服务台owner则会自动审核通过，否则会通知服务台owner审核此推送信息\n                 */\n                submitApprove: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/notifications/:notification_id/submit_approve`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 工单\n             */\n            ticket: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=answer_user_query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/answer_user_query document }\n                 *\n                 * 回复用户提问结果至工单\n                 *\n                 * 该接口用于回复用户提问结果至工单，需要工单仍处于进行中且未接入人工状态。仅支持自建应用。\n                 */\n                answerUserQuery: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id/answer_user_query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=customized_fields&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/customized_fields document }\n                 *\n                 * 获取服务台自定义字段详情\n                 *\n                 * 该接口用于获取服务台自定义字段详情。\n                 */\n                customizedFields: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/customized_fields`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/get document }\n                 *\n                 * 获取工单详情\n                 *\n                 * 该接口用于获取单个服务台工单详情。仅支持自建应用。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/list document }\n                 *\n                 * 获取全部工单详情\n                 *\n                 * 该接口用于获取全部工单详情。仅支持自建应用。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=start_service&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/start_service document }\n                 *\n                 * 创建服务台对话\n                 *\n                 * 该接口用于创建服务台对话。\n                 */\n                startService: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/start_service`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=ticket_image&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/ticket_image document }\n                 *\n                 * 获取服务台工单内消息图像\n                 *\n                 * 该接口用于获取服务台工单消息图象。仅支持自建应用。\n                 */\n                ticketImage: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_images`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket/update document }\n                 *\n                 * 更新工单详情\n                 *\n                 * 该接口用于更新服务台工单详情。只会更新数据，不会触发相关操作。如修改工单状态到关单，不会关闭聊天页面。仅支持自建应用。要更新的工单字段必须至少输入一项。\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 事件\n             */\n            ticketMessage: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket.message&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket-message/create document }\n                 *\n                 * 工单发送消息\n                 *\n                 * 该接口用于工单发送消息。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id/messages`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket.message&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket-message/list document }\n                 *\n                 * 获取服务台工单消息详情\n                 *\n                 * 该接口用于获取服务台工单消息详情。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/tickets/:ticket_id/messages`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 工单自定义字段\n             */\n            ticketCustomizedField: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/create document }\n                 *\n                 * 创建工单自定义字段\n                 *\n                 * 该接口用于创建自定义字段\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/delete document }\n                 *\n                 * 删除工单自定义字段\n                 *\n                 * 该接口用于删除工单自定义字段。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/get document }\n                 *\n                 * 获取工单自定义字段\n                 *\n                 * 该接口用于获取工单自定义字段详情。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/list document }\n                 *\n                 * 获取全部工单自定义字段\n                 *\n                 * 该接口用于获取全部工单自定义字段。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=helpdesk&resource=ticket_customized_field&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/helpdesk-v1/ticket_customized_field/patch document }\n                 *\n                 * 更新工单自定义字段\n                 *\n                 * 该接口用于更新自定义字段。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/helpdesk/v1/ticket_customized_fields/:ticket_customized_field_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 招聘\n         */\n        this.hire = {\n            /**\n             * 入职\n             */\n            application: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/create document }\n                 *\n                 * 创建投递\n                 *\n                 * 根据人才 ID 和职位 ID 创建投递\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/get document }\n                 *\n                 * 获取投递信息\n                 *\n                 * 根据投递 ID 获取单个投递信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/list document }\n                 *\n                 * 获取投递列表\n                 *\n                 * 根据限定条件获取投递列表信息\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=offer&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/offer document }\n                 *\n                 * 获取 Offer 信息\n                 *\n                 * 根据投递 ID 获取 Offer 信息\n                 */\n                offer: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/offer`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=terminate&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/terminate document }\n                 *\n                 * 终止投递\n                 *\n                 * 根据投递 ID 修改投递状态为「已终止」\n                 */\n                terminate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/terminate`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application&apiName=transfer_onboard&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/transfer_onboard document }\n                 *\n                 * 操作候选人入职\n                 *\n                 * 根据投递 ID 操作候选人入职并创建员工。投递须处于「待入职」阶段，可通过「转移阶段」接口变更投递状态\n                 */\n                transferOnboard: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/transfer_onboard`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * application.interview\n             */\n            applicationInterview: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=application.interview&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=list&project=hire&resource=application.interview&version=v1 document }\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/applications/:application_id/interviews`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 附件\n             */\n            attachment: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=attachment&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/attachment/get document }\n                 *\n                 * 获取附件信息\n                 *\n                 * 获取招聘系统中附件的元信息，比如文件名、创建时间、文件url等\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/attachments/:attachment_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=attachment&apiName=preview&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/attachment/preview document }\n                 *\n                 * 获取附件预览信息\n                 *\n                 * 根据附件 ID 获取附件预览信息\n                 */\n                preview: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/attachments/:attachment_id/preview`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导入 e-HR\n             */\n            ehrImportTask: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=ehr_import_task&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/ehr_import_task/patch document }\n                 *\n                 * 更新 e-HR 导入任务结果\n                 *\n                 * 在处理完导入 e-HR 事件后，可调用该接口，更新  e-HR 导入任务结果\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/ehr_import_tasks/:ehr_import_task_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 入职\n             */\n            employee: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=employee&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/employee/get document }\n                 *\n                 * 通过员工 ID 获取入职信息\n                 *\n                 * 通过员工 ID 获取入职信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/employees/:employee_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=employee&apiName=get_by_application&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/employee/get_by_application document }\n                 *\n                 * 通过投递 ID 获取入职信息\n                 *\n                 * 通过投递 ID 获取入职信息\n                 */\n                getByApplication: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/employees/get_by_application`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=employee&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/employee/patch document }\n                 *\n                 * 更新入职状态\n                 *\n                 * 根据员工 ID 更新员工转正、离职状态\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/employees/:employee_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 评估（灰度租户可见）\n             */\n            evaluation: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/hire/v1/evaluations`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=evaluation&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/evaluation/list document }\n                 *\n                 * 获取简历评估信息\n                 *\n                 * 获取简历评估信息\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/evaluations`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导入外部系统信息（灰度租户可见）\n             */\n            externalApplication: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_application&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_application/create document }\n                 *\n                 * 创建外部投递\n                 *\n                 * 导入来自其他系统的投递信息，创建为外部投递\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_applications`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导入外部系统信息（灰度租户可见）\n             */\n            externalBackgroundCheck: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_background_check&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_background_check/create document }\n                 *\n                 * 创建外部背调\n                 *\n                 * 导入来自其他系统的背调信息，创建为外部背调\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_background_checks`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导入外部系统信息（灰度租户可见）\n             */\n            externalInterview: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_interview&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_interview/create document }\n                 *\n                 * 创建外部面试\n                 *\n                 * 导入来自其他系统的面试信息，创建为外部面试\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_interviews`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导入外部系统信息（灰度租户可见）\n             */\n            externalInterviewAssessment: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=external_interview_assessment&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/external_interview_assessment/create document }\n                 *\n                 * 创建外部面评\n                 *\n                 * 导入来自其他系统的面评信息，创建为外部面评\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/external_interview_assessments`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 职位\n             */\n            job: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=combined_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/combined_create document }\n                 *\n                 * 新建职位\n                 *\n                 * 新建职位，字段的是否必填，以系统中的「职位字段管理」中的设置为准。\n                 */\n                combinedCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/combined_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=combined_update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/combined_update document }\n                 *\n                 * 更新职位\n                 *\n                 * 更新职位信息，该接口为全量更新，若字段没有返回值，则原有值将会被清空。字段的是否必填，将以系统中的「职位字段管理」中的设置为准。\n                 */\n                combinedUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/combined_update`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=config&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/config document }\n                 *\n                 * 获取职位设置\n                 *\n                 * 获取职位设置\n                 */\n                config: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/config`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/get document }\n                 *\n                 * 获取职位信息\n                 *\n                 * 根据职位 ID 获取职位信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job&apiName=update_config&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job/update_config document }\n                 *\n                 * 更新职位设置\n                 *\n                 * 更新职位设置，包括面试评价表、Offer 申请表等。接口将按照所选择的「更新选项」进行设置参数校验和更新。\n                 */\n                updateConfig: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/update_config`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * job.manager\n             */\n            jobManager: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job.manager&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job-manager/get document }\n                 *\n                 * 获取职位上的招聘人员信息\n                 *\n                 * 根据职位 ID 获取职位上的招聘人员信息，如招聘负责人、用人经理\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/jobs/:job_id/managers/:manager_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 流程\n             */\n            jobProcess: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=job_process&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/job_process/list document }\n                 *\n                 * 获取招聘流程信息\n                 *\n                 * 获取全部招聘流程信息\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/job_processes`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 备注\n             */\n            note: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/create document }\n                 *\n                 * 创建备注\n                 *\n                 * 创建备注信息\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/get document }\n                 *\n                 * 获取备注\n                 *\n                 * 根据备注 ID 获取备注信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes/:note_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/list document }\n                 *\n                 * 获取备注列表\n                 *\n                 * 获取备注列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=note&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/note/patch document }\n                 *\n                 * 更新备注\n                 *\n                 * 根据备注 ID 更新备注信息\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/notes/:note_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * Offer\n             */\n            offer: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/create document }\n                 *\n                 * 创建 Offer\n                 *\n                 * 创建 Offer 时，需传入本文档中标注为必传的参数，其余参数是否必传参考「获取 Offer 申请表模板信息」的参数定义\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/get document }\n                 *\n                 * 获取 Offer 详情\n                 *\n                 * 根据 Offer ID 获取 Offer 详细信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=intern_offer_status&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/intern_offer_status document }\n                 *\n                 * 更新实习 Offer 入/离职状态\n                 *\n                 * 对「实习待入职」状态的实习 Offer 确认入职、放弃入职，或对「实习已入职」状态的实习 Offer 操作离职\n                 */\n                internOfferStatus: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id/intern_offer_status`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/list document }\n                 *\n                 * 获取 Offer 列表\n                 *\n                 * 根据人才 ID 获取 Offer 列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=offer_status&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=offer_status&project=hire&resource=offer&version=v1 document }\n                 */\n                offerStatus: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id/offer_status`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/update document }\n                 *\n                 * 更新 Offer 信息\n                 *\n                 * 1. 更新 Offer 时，需传入本文档中标注为必传的参数，其余参数是否必传参考「获取 Offer 申请表模板信息」的参数定义；;2. 对系统中已存在的 offer 进行更新的，若更新 offer 中含有「修改需审批」的字段，更新后原 Offer 的审批会自动撤回，需要重新发起审批\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offers/:offer_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * offer_schema\n             */\n            offerSchema: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=offer_schema&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=hire&resource=offer_schema&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/offer_schemas/:offer_schema_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 问卷（灰度租户可见）\n             */\n            questionnaire: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=questionnaire&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/questionnaire/list document }\n                 *\n                 * 获取面试满意度问卷列表\n                 *\n                 * 获取面试满意度问卷列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/questionnaires`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 内推\n             */\n            referral: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=referral&apiName=get_by_application&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/referral/get_by_application document }\n                 *\n                 * 获取内推信息\n                 *\n                 * 根据投递 ID 获取内推信息\n                 */\n                getByApplication: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/referrals/get_by_application`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 简历来源\n             */\n            resumeSource: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/hire/v1/resume_sources`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=resume_source&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/resume_source/list document }\n                 *\n                 * 获取简历来源列表\n                 *\n                 * 获取简历来源列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/resume_sources`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 人才\n             */\n            talent: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent&apiName=add_to_folder&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/add_to_folder document }\n                 *\n                 * 将人才加入指定文件夹\n                 *\n                 * 将人才加入指定文件夹\n                 */\n                addToFolder: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/talents/add_to_folder`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent&apiName=batch_get_id&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/batch_get_id document }\n                 *\n                 * 通过人才信息获取人才 ID\n                 *\n                 * 通过人才信息获取人才 ID\n                 */\n                batchGetId: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/talents/batch_get_id`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/get document }\n                 *\n                 * 获取人才信息\n                 *\n                 * 根据人才 ID 获取人才信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/talents/:talent_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * talent_folder\n             */\n            talentFolder: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/hire/v1/talent_folders`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=hire&resource=talent_folder&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent_folder/list document }\n                 *\n                 * 获取人才文件夹信息\n                 *\n                 * 用于获取招聘系统中人才文件夹信息\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/hire/v1/talent_folders`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 实名认证\n         */\n        this.human_authentication = {\n            /**\n             * 实名认证\n             */\n            identity: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=human_authentication&resource=identity&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/human_authentication-v1/identity/create document }\n                 *\n                 * 录入身份信息\n                 *\n                 * 该接口用于录入实名认证的身份信息，在唤起有源活体认证前，需要使用该接口进行实名认证。\n                 *\n                 * 实名认证接口会有计费管理，接入前请联系飞书开放平台工作人员，邮箱：openplatform@bytedance.com。;;仅通过计费申请的应用，才能在[开发者后台](https://open.feishu.cn/app)查找并申请该接口的权限。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/human_authentication/v1/identities`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 消息与群组\n         */\n        this.im = {\n            /**\n             * 消息 - 批量消息\n             */\n            batchMessage: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=batch_message&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/delete document }\n                 *\n                 * 批量撤回消息\n                 *\n                 * 批量撤回通过[批量发送消息](https://open.feishu.cn/document/ukTMukTMukTM/ucDO1EjL3gTNx4yN4UTM)接口发送的消息。\n                 *\n                 * 注意事项：;- 应用需要启用[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability) ;- 撤回单条发送的消息请使用[撤回消息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/delete)接口;- 不支持撤回发出时间超过1天的消息;- 一次调用涉及大量消息，所以为异步接口，会有一定延迟。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/batch_messages/:batch_message_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=batch_message&apiName=get_progress&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/get_progress document }\n                 *\n                 * 查询批量消息整体进度\n                 *\n                 * 该接口在[查询批量消息推送和阅读人数](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/read_user)查询结果的基础上，增加了批量请求中有效的userid数量以及消息撤回进度数据。\n                 *\n                 * 注意事项:;* 该接口返回的数据为查询时刻的快照数据\n                 */\n                getProgress: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/batch_messages/:batch_message_id/get_progress`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=batch_message&apiName=read_user&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/batch_message/read_user document }\n                 *\n                 * 查询批量消息推送和阅读人数\n                 *\n                 * 批量发送消息后，可以通过该接口查询批量消息推送的总人数和阅读人数。\n                 *\n                 * 注意事项：;- 只能查询通过[批量发送消息](https://open.feishu.cn/document/ukTMukTMukTM/ucDO1EjL3gTNx4yN4UTM)接口产生的消息;- 该接口返回的数据为查询时刻的快照数据\n                 */\n                readUser: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/batch_messages/:batch_message_id/read_user`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 群组 - 群公告\n             */\n            chatAnnouncement: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.announcement&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-announcement/get document }\n                 *\n                 * 获取群公告信息\n                 *\n                 * 获取会话中的群公告信息，公告信息格式与[云文档](https://open.feishu.cn/document/ukTMukTMukTM/uAzM5YjLwMTO24CMzkjN)格式相同。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 获取内部群信息时，操作者须与群组在同一租户下\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/announcement`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.announcement&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-announcement/patch document }\n                 *\n                 * 更新群公告信息\n                 *\n                 * 更新会话中的群公告信息，更新公告信息的格式和更新[云文档](https://open.feishu.cn/document/ukTMukTMukTM/uAzM5YjLwMTO24CMzkjN)格式相同。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 操作者需要拥有群公告文档的阅读权限;- 获取内部群信息时，操作者须与群组在同一租户下;- 若群开启了 ==仅群主和群管理员可编辑群信息== 配置，群主/群管理员 或 创建群组且具备 ==更新应用所创建群的群信息== 权限的机器人，可更新群公告;- 若群未开启 ==仅群主和群管理员可编辑群信息== 配置，所有成员可以更新群公告\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/announcement`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 群组\n             */\n            chat: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/create document }\n                 *\n                 * 创建群\n                 *\n                 * 创建群并设置群头像、群名、群描述等。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 本接口支持在创建群的同时拉用户或机器人进群；如果仅需要拉用户或者机器人入群参考 [将用户或机器人拉入群聊](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/create)接口\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/delete document }\n                 *\n                 * 解散群\n                 *\n                 * 解散群组。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 如果使用tenant_access_token，需要机器人符合以下任一情况才可解散群：;    - 机器人是群主;    - 机器人是群的创建者且具备==更新应用所创建群的群信息==权限;- 如果使用user_access_token，需要对应的用户是群主才可解散群\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/get document }\n                 *\n                 * 获取群信息\n                 *\n                 * 获取群名称、群描述、群头像、群主 ID 等群基本信息。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群里（否则只会返回群名称、群头像等基本信息）;- 获取内部群信息时，操作者须与群组在同一租户下\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=link&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/link document }\n                 *\n                 * 获取群分享链接\n                 *\n                 * 获取指定群的分享链接。\n                 *\n                 * 注意事项:;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - access_token所对应的 **机器人** 或 **授权用户** 必须在`chat_id`参数指定的群组中;- 单聊、密聊、团队群不支持分享群链接;- 当Bot被停用或Bot退出群组时，Bot生成的群链接也将停用;- 当群聊开启了 ==仅群主和群管理员可添加群成员/分享群== 设置时，仅**群主**和**群管理员**可以获取群分享链接;- 获取内部群分享链接时，操作者须与群组在同一租户下\n                 */\n                link: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/link`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/list document }\n                 *\n                 * 获取用户或机器人所在的群列表\n                 *\n                 * 获取用户或者机器人所在群列表。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 请注意区分本接口和[获取群信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/get)的请求 URL;- 获取的群列表不包含P2P单聊\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                searchWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/search`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=search&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/search document }\n                 *\n                 * 搜索对用户或机器人可见的群列表\n                 *\n                 * 搜索对用户或机器人可见的群列表，包括：用户或机器人所在的群、对用户或机器人公开的群。;搜索可获得的群信息包括：群ID（chat_id）、群名称、群描述等。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/search`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat/update document }\n                 *\n                 * 更新群信息\n                 *\n                 * 更新群头像、群名称、群描述、群配置、转让群主等。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 对于群主/群管理员 或 创建群组且具备 ==更新应用所创建群的群信息== 权限的机器人，可更新所有信息;- 对于不满足上述权限条件的群成员或机器人：;    - 若未开启 ==仅群主和群管理员可编辑群信息== 配置，仅可更新群头像、群名称、群描述、群国际化名称信息;    - 若开启了 ==仅群主和群管理员可编辑群信息== 配置，任何群信息都不能修改;- 如果同时更新 ==邀请用户或机器人入群权限== 和 ==群分享权限== 这两项设置需要满足以下条件：;    - 若未开启 ==仅群主和管理员可以邀请用户或机器人入群==，需要设置 ==群分享权限== 为 ==允许分享==;    - 若开启了 ==仅群主和管理员可以邀请用户或机器人入群==，需要设置 ==群分享权限== 为 ==不允许分享==\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 群组 - 群成员\n             */\n            chatManagers: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.managers&apiName=add_managers&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-managers/add_managers document }\n                 *\n                 * 指定群管理员\n                 *\n                 * 将用户或机器人指定为群管理员。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 仅有群主可以指定群管理员\n                 */\n                addManagers: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/managers/add_managers`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.managers&apiName=delete_managers&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-managers/delete_managers document }\n                 *\n                 * 删除群管理员\n                 *\n                 * 删除指定的群管理员（用户或机器人）。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 仅有群主可以删除群管理员\n                 */\n                deleteManagers: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/managers/delete_managers`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 群组 - 群成员\n             */\n            chatMembers: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/create document }\n                 *\n                 * 将用户或机器人拉入群聊\n                 *\n                 * 将用户或机器人拉入群聊。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 如需拉用户进群，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability); - 机器人或授权用户必须在群组中;- 外部租户不能被加入到内部群中;- 操作内部群时，操作者须与群组在同一租户下; - 在开启 ==仅群主和群管理员可添加群成员== 的设置时，仅有群主/管理员 或 创建群组且具备 ==更新应用所创建群的群信息== 权限的机器人，可以拉用户或者机器人进群; - 在未开启 ==仅群主和群管理员可添加群成员== 的设置时，所有群成员都可以拉用户或机器人进群\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/delete document }\n                 *\n                 * 将用户或机器人移出群聊\n                 *\n                 * 将用户或机器人移出群聊。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 用户或机器人在任何条件下均可移除自己出群（即主动退群）;- 仅有群主/管理员 或 创建群组并且具备 ==更新应用所创建群的群信息== 权限的机器人，可以移除其他用户或者机器人;- 每次请求，最多移除50个用户或者5个机器人;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/get document }\n                 *\n                 * 获取群成员列表\n                 *\n                 * 获取用户/机器人所在群的群成员列表。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群组中; - 该接口不会返回群内的机器人成员; - 由于返回的群成员列表会过滤掉机器人成员，因此返回的群成员个数可能会小于指定的page_size; - 如果有同一时间加入群的群成员，会一次性返回，这会导致返回的群成员个数可能会大于指定的page_size;- 获取内部群信息时，操作者须与群组在同一租户下\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=is_in_chat&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/is_in_chat document }\n                 *\n                 * 判断用户或机器人是否在群里\n                 *\n                 * 根据使用的access_token判断对应的用户或者机器人是否在群里。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 获取内部群信息时，操作者须与群组在同一租户下\n                 */\n                isInChat: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members/is_in_chat`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.members&apiName=me_join&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-members/me_join document }\n                 *\n                 * 用户或机器人主动加入群聊\n                 *\n                 * 用户或机器人主动加入群聊。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 目前仅支持加入公开群;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                meJoin: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/members/me_join`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * chat.menu_item\n             */\n            chatMenuItem: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_item&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_item/patch document }\n                 *\n                 * 修改群菜单元信息\n                 *\n                 * 修改某个一级菜单或者二级菜单的元信息。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_items/:menu_item_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 群组 - 群菜单\n             */\n            chatMenuTree: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/create document }\n                 *\n                 * 添加群菜单\n                 *\n                 * 向群内添加群菜单。\n                 *\n                 * 注意事项：;- 该API是向群内追加菜单，群内原来存在的菜单并不会被覆盖。操作API后，将返回群内所有菜单。;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。;- 一个群内，一级菜单最多有3个，每个一级菜单最多有5个二级菜单。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/delete document }\n                 *\n                 * 删除群菜单。\n                 *\n                 * 删除群内菜单。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。;- 操作API后，将返回群内所有菜单。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/get document }\n                 *\n                 * 获取群内菜单\n                 *\n                 * 通过群ID获取群内菜单。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.menu_tree&apiName=sort&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-menu_tree/sort document }\n                 *\n                 * 排序群菜单\n                 *\n                 * 给一个群内的一级菜单排序。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)。;- 机器人必须在群里。;- 操作API后，将返回群内所有菜单。\n                 */\n                sort: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/menu_tree/sort`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * chat.moderation\n             */\n            chatModeration: {\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/moderation`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.moderation&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-moderation/get document }\n                 *\n                 * 获取群成员发言权限\n                 *\n                 * 获取群发言模式、可发言用户名单等\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人 或 授权用户 必须在群里\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/moderation`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.moderation&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-moderation/update document }\n                 *\n                 * 更新群发言权限\n                 *\n                 * 更新群组的发言权限设置，可设置为全员可发言、仅管理员可发言  或 指定用户可发言。\n                 *\n                 * 注意事项：; - 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 若以用户授权调用接口，**当授权用户是群主**时，可更新群发言权限;- 若以租户授权调用接口(即以机器人身份调用接口)，当**机器人是群主** 或者 **机器人是群组创建者、具备==更新应用所创建群的群信息==权限且仍在群内**时，可更新群发言权限\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/moderation`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 群组 - 会话标签页\n             */\n            chatTab: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/create document }\n                 *\n                 * 添加会话标签页\n                 *\n                 * 添加自定义会话标签页。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 只允许添加类型为`doc`和`url`的会话标签页;- 添加doc类型时，操作者（access token对应的身份）需要拥有对应文档的权限;- tab_config字段当前只对`url`类型的会话标签页生效;- 在开启 ==仅群主和管理员可管理标签页== 的设置时，仅群主和群管理员可以添加会话标签页;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=delete_tabs&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/delete_tabs document }\n                 *\n                 * 删除会话标签页\n                 *\n                 * 删除会话标签页。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 只允许删除类型为`doc`和`url`的会话标签页;- 在开启 ==仅群主和管理员可管理标签页== 的设置时，仅群主和群管理员可以删除会话标签页;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                deleteTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/delete_tabs`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=list_tabs&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/list_tabs document }\n                 *\n                 * 拉取会话标签页\n                 *\n                 * 拉取会话标签页。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                listTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/list_tabs`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=sort_tabs&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/sort_tabs document }\n                 *\n                 * 会话标签页排序\n                 *\n                 * 会话标签页排序。\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 消息标签页强制固定为第一顺位，不参与排序，但是请求体中必须包含该标签页的Tab ID;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                sortTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/sort_tabs`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.tab&apiName=update_tabs&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-tab/update_tabs document }\n                 *\n                 * 更新会话标签页\n                 *\n                 * 更新会话标签页\n                 *\n                 * 注意事项：;- 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人或授权用户必须在群里;- 只允许更新类型为`doc`和`url`的会话标签页;- 更新doc类型时，操作者（access token对应的身份）需要拥有对应文档的权限;- 在开启 ==仅群主和管理员可管理标签页== 的设置时，仅群主和群管理员可以更新会话标签页;- 操作内部群时，操作者须与群组在同一租户下\n                 */\n                updateTabs: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/chat_tabs/update_tabs`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * chat.top_notice\n             */\n            chatTopNotice: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.top_notice&apiName=delete_top_notice&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-top_notice/delete_top_notice document }\n                 *\n                 * 撤销群置顶\n                 *\n                 * 撤销会话中的置顶。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群组中;- 撤销内部群置顶时，操作者须与群组在同一租户下\n                 */\n                deleteTopNotice: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/top_notice/delete_top_notice`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=chat.top_notice&apiName=put_top_notice&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/chat-top_notice/put_top_notice document }\n                 *\n                 * 更新群置顶\n                 *\n                 * 更新会话中的群置顶信息，可以将群中的某一条消息，或者群公告置顶显示。\n                 *\n                 * 注意事项：; - 应用需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability); - 机器人或授权用户必须在群组中;- 更新内部群置顶时，操作者须与群组在同一租户下\n                 */\n                putTopNotice: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/chats/:chat_id/top_notice/put_top_notice`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 消息 - 文件信息\n             */\n            file: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=file&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/file/create document }\n                 *\n                 * 上传文件\n                 *\n                 * 上传文件，可以上传视频，音频和常见的文件类型。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 文件大小不得超过30M，且不允许上传空文件\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/files`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=file&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/file/get document }\n                 *\n                 * 下载文件\n                 *\n                 * 下载文件接口，只能下载应用自己上传的文件。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 只能下载机器人自己上传的文件;- 下载用户发送的资源，请使用[获取消息中的资源文件](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-resource/get)接口;- 下载的资源大小不能超过100M;- 如果需要Content-Disposition header，发起请求的时候需要在header中设置Content-Type为application/json\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/files/:file_key`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n            },\n            /**\n             * 消息 - 图片信息\n             */\n            image: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=image&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/create document }\n                 *\n                 * 上传图片\n                 *\n                 * 上传图片接口，支持上传 JPEG、PNG、WEBP、GIF、TIFF、BMP、ICO格式图片。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 图片大小不得超过10M，且不支持上传大小为0的图片\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/images`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=image&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/image/get document }\n                 *\n                 * 下载图片\n                 *\n                 * 下载图片资源，只能下载当前应用所上传且图片类型为message的图片。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 只能下载机器人自己上传且图片类型为message的图片，avatar类型暂不支持下载;- 下载用户发送的资源，请使用[获取消息中的资源文件](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-resource/get)接口\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/images/:image_key`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n            },\n            /**\n             * 消息\n             */\n            message: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/create document }\n                 *\n                 * 发送消息\n                 *\n                 * 给指定用户或者会话发送消息，支持文本、富文本、可交互的[消息卡片](https://open.feishu.cn/document/ukTMukTMukTM/uczM3QjL3MzN04yNzcDN)、群名片、个人名片、图片、视频、音频、文件、表情包。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 给用户发送消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 给群组发送消息，需要机器人在群组中\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/delete document }\n                 *\n                 * 撤回消息\n                 *\n                 * 机器人撤回机器人自己发送的消息或群主撤回群内消息。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ，撤回消息时机器人仍需要在会话内;- 机器人可以撤回单聊和群组内，自己发送 且 发送时间不超过1天(24小时)的消息;- 若机器人要撤回群内他人发送的消息，则机器人必须是该群的群主、管理员 或者 创建者，且消息发送时间不超过1年;- 无法撤回通过「[批量发送消息](https://open.feishu.cn/document/ukTMukTMukTM/ucDO1EjL3gTNx4yN4UTM)」接口发送的消息\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=forward&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=forward&project=im&resource=message&version=v1 document }\n                 *\n                 * 转发一条消息\n                 */\n                forward: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/forward`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/get document }\n                 *\n                 * 获取指定消息的内容\n                 *\n                 * 通过 message_id 查询消息内容。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 机器人必须在群组中\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/list document }\n                 *\n                 * 获取会话历史消息\n                 *\n                 * 获取会话（包括单聊、群组）的历史消息（聊天记录）。\n                 *\n                 * - 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 获取消息时，机器人必须在群组中\n                 *\n                 * 接口级别权限默认只能获取单聊（p2p）消息，如果需要获取群组（group）消息，应用还必须拥有 **==获取群组中所有消息==** 权限\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=merge_forward&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=merge_forward&project=im&resource=message&version=v1 document }\n                 *\n                 * 合并转发多条消息\n                 */\n                mergeForward: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/merge_forward`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/patch document }\n                 *\n                 * 更新应用发送的消息\n                 *\n                 * 更新应用已发送的消息卡片内容。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 若以user_access_token更新消息，该操作用户必须是卡片消息的发送者;- 仅支持对所有人更新**未撤回**的[「共享卡片」](ukTMukTMukTM/uAjNwUjLwYDM14CM2ATN)消息，需在卡片的config属性中，显式声明 ==\"update_multi\":true==。 ;- **不支持更新批量消息**;- 文本消息请求体最大不能超过150KB；卡片及富文本消息请求体最大不能超过30KB;- 仅支持修改14天内发送的消息;- 单条消息更新频控为**5QPS**\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=read_users&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/read_users document }\n                 *\n                 * 查询消息已读信息\n                 *\n                 * 查询消息的已读信息。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能查询机器人自己发送，且发送时间不超过7天的消息;- 查询消息已读信息时机器人仍需要在会话内;- 本接口不支持查询批量消息\n                 */\n                readUsers: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/read_users`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=reply&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/reply document }\n                 *\n                 * 回复消息\n                 *\n                 * 回复指定消息，支持文本、富文本、卡片、群名片、个人名片、图片、视频、文件等多种消息类型。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 回复私聊消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 回复群组消息，需要机器人在群中\n                 */\n                reply: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reply`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=urgent_app&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/urgent_app document }\n                 *\n                 * 发送应用内加急\n                 *\n                 * 对指定消息进行应用内加急。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 不支持加急批量消息;- 只能加急机器人自己发送的消息;- 加急时机器人需要在加急消息所在的群中;- 调用本接口需要用户已阅读加急的消息才可以继续加急（用户未读的加急上限为200条）\n                 *\n                 * 特别说明：;- 默认接口限流为50 QPS，请谨慎调用\n                 */\n                urgentApp: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/urgent_app`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=urgent_phone&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/urgent_phone document }\n                 *\n                 * 发送电话加急\n                 *\n                 * 对指定消息进行应用内加急与电话加急。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能加急机器人自己发送的消息;- 加急时机器人需要在加急消息所在的群组中;- 需要用户阅读已加急的消息才可以继续加急（用户未读的加急上限为200条）\n                 *\n                 * 特别说明：;- 通过接口产生的电话加急将消耗企业的加急额度，请慎重调用;- 通过[租户管理后台](https://admin.feishu.cn/)-费用中心-短信/电话加急 可以查看当前额度;- 默认接口限流为50 QPS，请谨慎调用\n                 */\n                urgentPhone: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/urgent_phone`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=urgent_sms&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/urgent_sms document }\n                 *\n                 * 发送短信加急\n                 *\n                 * 对指定消息进行应用内加急与短信加急。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能加急机器人自己发送的消息;- 加急时机器人仍需要在加急消息所在的群组中;- 调用本接口需要用户已阅读加急的消息才可以继续加急（用户未读的加急上限为200条）\n                 *\n                 * 特别说明：;- 通过接口产生的短信加急将消耗企业的加急额度，请慎重调用;- 通过[租户管理后台](https://admin.feishu.cn/)-费用中心-短信/电话加急 可以查看当前额度;- 默认接口限流为50 QPS，请谨慎调用\n                 */\n                urgentSms: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/urgent_sms`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/create document }\n                 *\n                 * 通过模版消息卡片发送消息\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 给用户发送消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 给群组发送消息，需要机器人在群组中\n                 */\n                createByCard: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const { template_id, template_variable } = data, rest = __rest(data, [\"template_id\", \"template_variable\"]);\n                    const targetData = Object.assign({ msg_type: \"interactive\", content: JSON.stringify({\n                            type: \"template\",\n                            data: {\n                                template_id: template_id,\n                                template_variable: template_variable,\n                            },\n                        }) }, rest);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages`, path),\n                        method: \"POST\",\n                        data: targetData,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message&apiName=reply&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message/reply document }\n                 *\n                 * 通过模版消息卡片回复消息\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 回复私聊消息，需要机器人对用户有[可用性](https://open.feishu.cn/document/home/introduction-to-scope-and-authorization/availability);- 回复群组消息，需要机器人在群中\n                 */\n                replyByCard: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const { template_id, template_variable } = data, rest = __rest(data, [\"template_id\", \"template_variable\"]);\n                    const targetData = Object.assign({ msg_type: \"interactive\", content: JSON.stringify({\n                            type: \"template\",\n                            data: {\n                                template_id: template_id,\n                                template_variable: template_variable,\n                            },\n                        }) }, rest);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reply`, path),\n                        method: \"POST\",\n                        data: targetData,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 消息 - 表情回复\n             */\n            messageReaction: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.reaction&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-reaction/create document }\n                 *\n                 * 添加消息表情回复\n                 *\n                 * 给指定消息添加指定类型的表情回复（reaction即表情回复，本文档统一用“reaction”代称）。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 待添加reaction的消息要真实存在，不能被撤回;- 给消息添加reaction，需要reaction的发送方（机器人或者用户）在消息所在的会话内\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.reaction&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-reaction/delete document }\n                 *\n                 * 删除消息表情回复\n                 *\n                 * 删除指定消息的表情回复（reaction即表情回复，本文档统一用“reaction”代称）。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 只能删除真实存在的reaction，并且删除reaction请求的操作者必须是reaction的原始添加者\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions/:reaction_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.reaction&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-reaction/list document }\n                 *\n                 * 获取消息表情回复\n                 *\n                 * 获取指定消息的特定类型表情回复列表（reaction即表情回复，本文档统一用“reaction”代称）。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 待获取reaction信息的消息要真实存在，不能被撤回;- 获取消息的reaction，需要request的授权主体（机器人或者用户）在消息所在的会话内\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/reactions`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * message.resource\n             */\n            messageResource: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=message.resource&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/message-resource/get document }\n                 *\n                 * 获取消息中的资源文件\n                 *\n                 * 获取消息中的资源文件，包括音频，视频，图片和文件，**暂不支持表情包资源下载**。当前仅支持 100M 以内的资源文件的下载。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability);- 机器人和消息需要在同一会话中;- 暂不支持获取合并转发消息中的子消息的资源文件\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/messages/:message_id/resources/:file_key`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n            },\n            /**\n             * 消息 - Pin\n             */\n            pin: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=pin&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/pin/create document }\n                 *\n                 * Pin消息\n                 *\n                 * Pin一条指定的消息。\n                 *\n                 * 注意事项:;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- Pin消息时，机器人必须在对应的群组中;- 若消息已经被Pin，返回该Pin的操作信息;- 不能Pin一条对操作者不可见的消息;- 对同一条消息的Pin操作不能超过==5 QPS==\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/pins`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=pin&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/pin/delete document }\n                 *\n                 * 移除Pin消息\n                 *\n                 * 移除一条指定消息的Pin。\n                 *\n                 * 注意事项：;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 移除Pin消息时，机器人必须在对应的群组中;- 若消息未被Pin或已被撤回，返回成功信息;- 不能移除一条对操作者不可见的Pin消息;- 对同一条消息移除Pin的操作不能超过==5 QPS==\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/pins/:message_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/im/v1/pins`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=im&resource=pin&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/im-v1/pin/list document }\n                 *\n                 * 获取群内Pin消息\n                 *\n                 * 获取所在群内指定时间范围内的所有Pin消息。\n                 *\n                 * 注意事项：;- 需要开启[机器人能力](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-enable-bot-ability)  ;- 获取Pin消息时，机器人必须在群组中;- 获取的Pin消息按Pin的创建时间降序排列;- 接口默认限流为==50 QPS==\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/im/v1/pins`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 邮箱\n         */\n        this.mail = {\n            /**\n             * 邮件组别名\n             */\n            mailgroupAlias: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.alias&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/create document }\n                 *\n                 * 创建邮件组别名\n                 *\n                 * 创建邮件组别名\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.alias&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/delete document }\n                 *\n                 * 删除邮件组别名\n                 *\n                 * 删除邮件组别名\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases/:alias_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.alias&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-alias/list document }\n                 *\n                 * 获取邮件组所有别名\n                 *\n                 * 获取邮件组所有别名\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/aliases`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 邮件组\n             */\n            mailgroup: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/create document }\n                 *\n                 * 创建邮件组\n                 *\n                 * 创建一个邮件组\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/delete document }\n                 *\n                 * 删除邮件组\n                 *\n                 * 删除一个邮件组\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/get document }\n                 *\n                 * 获取邮件组\n                 *\n                 * 获取特定邮件组信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/list document }\n                 *\n                 * 批量获取邮件组\n                 *\n                 * 分页批量获取邮件组\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/patch document }\n                 *\n                 * 修改邮件组\n                 *\n                 * 更新邮件组部分字段，没有填写的字段不会被更新\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup/update document }\n                 *\n                 * 更新邮件组\n                 *\n                 * 更新邮件组所有信息\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 邮件组成员\n             */\n            mailgroupMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=mail&resource=mailgroup.member&version=v1 document }\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=mail&resource=mailgroup.member&version=v1 document }\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/batch_delete`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/create document }\n                 *\n                 * 创建邮件组成员\n                 *\n                 * 向邮件组添加单个成员\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/delete document }\n                 *\n                 * 删除邮件组成员\n                 *\n                 * 删除邮件组单个成员\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/:member_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/get document }\n                 *\n                 * 获取邮件组成员信息\n                 *\n                 * 获取邮件组单个成员信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members/:member_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.member&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-member/list document }\n                 *\n                 * 批量获取邮件组成员\n                 *\n                 * 分页批量获取邮件组成员列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 邮件组权限成员\n             */\n            mailgroupPermissionMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=mail&resource=mailgroup.permission_member&version=v1 document }\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=mail&resource=mailgroup.permission_member&version=v1 document }\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/batch_delete`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/create document }\n                 *\n                 * 创建邮件组权限成员\n                 *\n                 * 向邮件组添加单个自定义权限成员，添加后该成员可发送邮件到该邮件组\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/delete document }\n                 *\n                 * 删除邮件组权限成员\n                 *\n                 * 从自定义成员中删除单个成员，删除后该成员无法发送邮件到该邮件组\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/:permission_member_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/get document }\n                 *\n                 * 获取邮件组权限成员\n                 *\n                 * 获取邮件组单个权限成员信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members/:permission_member_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=mailgroup.permission_member&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/mailgroup-permission_member/list document }\n                 *\n                 * 批量获取邮件组权限成员\n                 *\n                 * 分页批量获取邮件组权限成员列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/mailgroups/:mailgroup_id/permission_members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 公共邮箱别名\n             */\n            publicMailboxAlias: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.alias&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-alias/create document }\n                 *\n                 * 创建公共邮箱别名\n                 *\n                 * 创建公共邮箱别名\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/aliases`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.alias&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-alias/delete document }\n                 *\n                 * 删除公共邮箱别名\n                 *\n                 * 删除公共邮箱别名\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/aliases/:alias_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.alias&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-alias/list document }\n                 *\n                 * 获取所有公共邮箱别名\n                 *\n                 * 获取所有公共邮箱别名\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/aliases`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 公共邮箱\n             */\n            publicMailbox: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/create document }\n                 *\n                 * 创建公共邮箱\n                 *\n                 * 创建一个公共邮箱\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/delete document }\n                 *\n                 * 释放公共邮箱地址\n                 *\n                 * 该接口会永久删除公共邮箱地址。可用于释放邮箱回收站的公共邮箱地址，一旦删除，该邮箱地址将无法恢复。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/get document }\n                 *\n                 * 获取公共邮箱\n                 *\n                 * 获取公共邮箱信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/list document }\n                 *\n                 * 批量获取公共邮箱\n                 *\n                 * 分页批量获取公共邮箱列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/patch document }\n                 *\n                 * 修改公共邮箱\n                 *\n                 * 更新公共邮箱部分字段，没有填写的字段不会被更新\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox/update document }\n                 *\n                 * 更新公共邮箱\n                 *\n                 * 更新公共邮箱所有信息\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 公共邮箱成员\n             */\n            publicMailboxMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=batch_create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_create&project=mail&resource=public_mailbox.member&version=v1 document }\n                 */\n                batchCreate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/batch_create`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=batch_delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=batch_delete&project=mail&resource=public_mailbox.member&version=v1 document }\n                 */\n                batchDelete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/batch_delete`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=clear&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/clear document }\n                 *\n                 * 清空公共邮箱成员\n                 *\n                 * 删除公共邮箱所有成员\n                 */\n                clear: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/clear`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/create document }\n                 *\n                 * 创建公共邮箱成员\n                 *\n                 * 向公共邮箱添加单个成员\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/delete document }\n                 *\n                 * 删除公共邮箱成员\n                 *\n                 * 删除公共邮箱单个成员\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/:member_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/get document }\n                 *\n                 * 获取公共邮箱成员信息\n                 *\n                 * 获取公共邮箱单个成员信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members/:member_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=public_mailbox.member&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/public_mailbox-member/list document }\n                 *\n                 * 批量获取公共邮箱成员\n                 *\n                 * 分页批量获取公共邮箱成员列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/public_mailboxes/:public_mailbox_id/members`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 邮箱地址\n             */\n            user: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user/query document }\n                 *\n                 * 邮箱状态查询\n                 *\n                 * 使用邮箱状态查询接口，可以输入邮箱地址，查询出该邮箱地址对应的类型以及状态\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/users/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户邮箱别名\n             */\n            userMailboxAlias: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox.alias&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox-alias/create document }\n                 *\n                 * 创建用户邮箱别名\n                 *\n                 * 创建用户邮箱别名\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox.alias&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox-alias/delete document }\n                 *\n                 * 删除用户邮箱别名\n                 *\n                 * 删除用户邮箱别名\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases/:alias_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox.alias&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox-alias/list document }\n                 *\n                 * 获取用户邮箱所有别名\n                 *\n                 * 获取用户邮箱所有别名\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/aliases`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户邮箱\n             */\n            userMailbox: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=mail&resource=user_mailbox&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/mail-v1/user_mailbox/delete document }\n                 *\n                 * 释放用户邮箱地址\n                 *\n                 * 该接口会永久删除用户邮箱地址。可用于删除位于邮箱回收站中的用户邮箱地址，一旦删除，将无法恢复。该接口支持邮件的转移，可以将被释放邮箱的邮件转移到另外一个可以使用的邮箱中。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/mail/v1/user_mailboxes/:user_mailbox_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.mdm = {};\n        /**\n             \n             */\n        this.meeting_room = {};\n        /**\n             \n             */\n        this.moments = {};\n        /**\n         * OKR\n         */\n        this.okr = {\n            /**\n             * 图片\n             */\n            image: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=image&apiName=upload&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/image/upload document }\n                 *\n                 * 上传图片\n                 *\n                 * 上传图片\n                 */\n                upload: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/images/upload`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers: Object.assign(Object.assign({}, headers), { \"Content-Type\": \"multipart/form-data\" }),\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return get(res, \"data\", null);\n                }),\n            },\n            /**\n             * 指标库\n             */\n            metricSource: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source/list document }\n                 *\n                 * 获取指标库\n                 *\n                 * 获取租户下全部 OKR 指标库（仅限 OKR 企业版使用）\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 指标项\n             */\n            metricSourceTableItem: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=batch_update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/batch_update document }\n                 *\n                 * 批量更新指标项\n                 *\n                 * - 该接口用于批量更新多项指标，单次调用最多更新 100 条记录。接口仅限 OKR 企业版使用。;;  更新成功后 OKR 系统会给以下人员发送消息通知：;;    - 首次更新目标值的人员 ;;    - 已经将指标添加为 KR、且本次目标值/起始值/支撑的上级有变更的人员，不包含仅更新了进度值的人员\n                 */\n                batchUpdate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items/batch_update`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/get document }\n                 *\n                 * 获取指标项详情\n                 *\n                 * 获取某项指标的具体内容（仅限 OKR 企业版使用）\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items/:metric_item_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/list document }\n                 *\n                 * 获取指标项\n                 *\n                 * 获取指定指标表下的所有指标项（仅限 OKR 企业版使用）\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table.item&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table-item/patch document }\n                 *\n                 * 更新指标项\n                 *\n                 * - 该接口用于更新某项指标，接口仅限 OKR 企业版使用。;;    更新成功后 OKR 系统会给以下人员发送消息通知：;;    - 首次更新目标值的人员 ;;    - 已经将指标添加为 KR、且本次目标值/起始值/支撑的上级有变更的人员，不包含仅更新了进度值的人员\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables/:metric_table_id/items/:metric_item_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 指标表\n             */\n            metricSourceTable: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=metric_source.table&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/metric_source-table/list document }\n                 *\n                 * 获取指标表\n                 *\n                 * 获取指定指标库下有哪些指标表（仅限 OKR 企业版使用）\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/metric_sources/:metric_source_id/tables`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * OKR\n             */\n            okr: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=okr&apiName=batch_get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/okr/batch_get document }\n                 *\n                 * 批量获取OKR\n                 *\n                 * 根据OKR id批量获取OKR\n                 *\n                 * 使用<md-tag mode=\"inline\" type=\"token-tenant\">tenant_access_token</md-tag>需要额外申请权限<md-perm ;href=\"https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN\">以应用身份访问OKR信息</md-perm>\n                 */\n                batchGet: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/okrs/batch_get`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * OKR周期\n             */\n            period: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=period&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/period/list document }\n                 *\n                 * 获取OKR周期列表\n                 *\n                 * 获取OKR周期列表\n                 *\n                 * 使用<md-tag mode=\"inline\" type=\"token-tenant\">tenant_access_token</md-tag>需要额外申请权限<md-perm ;href=\"https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN\">以应用身份访问OKR信息</md-perm>\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/periods`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * OKR进展记录\n             */\n            progressRecord: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/create document }\n                 *\n                 * 创建OKR进展记录\n                 *\n                 * 创建OKR进展记录\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/delete document }\n                 *\n                 * 删除OKR进展记录\n                 *\n                 * 根据ID删除OKR进展记录\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records/:progress_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/get document }\n                 *\n                 * 获取OKR进展记录\n                 *\n                 * 根据ID获取OKR进展记录详情\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records/:progress_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=progress_record&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/progress_record/update document }\n                 *\n                 * 更新OKR进展记录\n                 *\n                 * 根据OKR进展记录ID更新进展详情\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/progress_records/:progress_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 用户OKR\n             */\n            userOkr: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=okr&resource=user.okr&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/okr-v1/user-okr/list document }\n                 *\n                 * 获取用户的OKR列表\n                 *\n                 * 根据用户的id获取OKR列表\n                 *\n                 * 使用<md-tag mode=\"inline\" type=\"token-tenant\">tenant_access_token</md-tag>需要额外申请权限<md-perm ;href=\"https://open.feishu.cn/document/ukTMukTMukTM/uQjN3QjL0YzN04CN2cDN\">以应用身份访问OKR信息</md-perm>\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/okr/v1/users/:user_id/okrs`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * AI能力\n         */\n        this.optical_char_recognition = {\n            /**\n             * 图片识别\n             */\n            image: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=optical_char_recognition&resource=image&apiName=basic_recognize&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/optical_char_recognition-v1/image/basic_recognize document }\n                 *\n                 * 基础图片识别 (OCR)\n                 *\n                 * 可识别图片中的文字，按图片中的区域划分，分段返回文本列表\n                 *\n                 * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n                 */\n                basicRecognize: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/optical_char_recognition/v1/image/basic_recognize`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 帐号\n         */\n        this.passport = {\n            /**\n             * 登录态\n             */\n            session: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=passport&resource=session&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/passport-v1/session/query document }\n                 *\n                 * 批量获取用户登录信息（脱敏）\n                 *\n                 * 该接口用于查询用户的登录信息\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/passport/v1/sessions/query`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.people_admin = {};\n        /**\n             \n             */\n        this.people_bytedance = {};\n        /**\n             \n             */\n        this.report = {};\n        /**\n             \n             */\n        this.search_in_app = {};\n        /**\n         * 搜索\n         */\n        this.search = {\n            /**\n             * app\n             */\n            app: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=app&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=search&resource=app&version=v2 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/app`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 数据源\n             */\n            dataSource: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/create document }\n                 *\n                 * 创建数据源\n                 *\n                 * 创建一个数据源\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=delete&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/delete document }\n                 *\n                 * 删除数据源\n                 *\n                 * 删除一个已存在的数据源\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=get&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/get document }\n                 *\n                 * 获取数据源\n                 *\n                 * 获取已经创建的数据源\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=list&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/list document }\n                 *\n                 * 批量获取数据源\n                 *\n                 * 批量获取创建的数据源信息\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source&apiName=patch&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source/patch document }\n                 *\n                 * 修改数据源\n                 *\n                 * 更新一个已经存在的数据源\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 数据项\n             */\n            dataSourceItem: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source.item&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source-item/create document }\n                 *\n                 * 索引数据项\n                 *\n                 * 索引一条数据记录\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id/items`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source.item&apiName=delete&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source-item/delete document }\n                 *\n                 * 删除数据项\n                 *\n                 * 删除数据项\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id/items/:item_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=data_source.item&apiName=get&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/data_source-item/get document }\n                 *\n                 * 获取数据项\n                 *\n                 * 获取单个数据记录\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/data_sources/:data_source_id/items/:item_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * message\n             */\n            message: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=message&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=search&resource=message&version=v2 document }\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/message`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 数据范式\n             */\n            schema: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/create document }\n                 *\n                 * 创建数据范式\n                 *\n                 * 创建一个数据范式\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=delete&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/delete document }\n                 *\n                 * 删除数据范式\n                 *\n                 * 删除已存在的数据范式\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas/:schema_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=get&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/get document }\n                 *\n                 * 获取数据范式\n                 *\n                 * 获取单个数据范式\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas/:schema_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=search&resource=schema&apiName=patch&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/search-v2/schema/patch document }\n                 *\n                 * 修改数据范式\n                 *\n                 * 修改数据范式\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/search/v2/schemas/:schema_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.security_and_compliance = {};\n        /**\n         * 云文档-电子表格\n         */\n        this.sheets = {\n            /**\n             * 表格\n             */\n            spreadsheet: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/create document }\n                 *\n                 * 创建表格\n                 *\n                 * 在指定目录下创建表格\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/get document }\n                 *\n                 * 获取电子表格信息\n                 *\n                 * 该接口用于获取电子表格的基础信息。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet/patch document }\n                 *\n                 * 修改电子表格属性\n                 *\n                 * 该接口用于修改电子表格的属性\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 筛选\n             */\n            spreadsheetSheetFilter: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/create document }\n                 *\n                 * 创建筛选\n                 *\n                 * 在子表内创建筛选。\n                 *\n                 * 参数值可参考[筛选指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/filter-user-guide)\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/delete document }\n                 *\n                 * 删除筛选\n                 *\n                 * 删除子表的筛选\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/get document }\n                 *\n                 * 获取筛选\n                 *\n                 * 获取子表的详细筛选信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/update document }\n                 *\n                 * 更新筛选\n                 *\n                 * 更新子表筛选范围中的列筛选条件。\n                 *\n                 * 参数值可参考[筛选指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter/filter-user-guide)\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 筛选条件\n             */\n            spreadsheetSheetFilterViewCondition: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/create document }\n                 *\n                 * 创建筛选条件\n                 *\n                 * 在筛选视图的筛选范围的某一列创建筛选条件。\n                 *\n                 * 筛选条件参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/delete document }\n                 *\n                 * 删除筛选条件\n                 *\n                 * 删除筛选视图的筛选范围某一列的筛选条件。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/:condition_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/get document }\n                 *\n                 * 获取筛选条件\n                 *\n                 * 获取筛选视图某列的筛选条件信息。\n                 *\n                 * 筛选条件含义参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/:condition_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=query&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/query document }\n                 *\n                 * 查询筛选条件\n                 *\n                 * 查询一个筛选视图的所有筛选条件，返回筛选视图的筛选范围内的筛选条件。\n                 *\n                 * 筛选条件含义可参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view.condition&apiName=update&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/update document }\n                 *\n                 * 更新筛选条件\n                 *\n                 * 更新筛选视图范围的某列的筛选条件，condition id 即为列的字母号。\n                 *\n                 * 筛选条件参数可参考 [筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id/conditions/:condition_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 筛选视图\n             */\n            spreadsheetSheetFilterView: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/create document }\n                 *\n                 * 创建筛选视图\n                 *\n                 * 根据传入的参数创建一个筛选视图。Id 和 名字可选，不填的话会默认生成；range 必填。Id 长度为10，由 0-9、a-z、A-Z 组合生成。名字长度不超过100。单个子表内的筛选视图个数不超过 150。\n                 *\n                 * 筛选范围的设置参考：[筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/delete document }\n                 *\n                 * 删除筛选视图\n                 *\n                 * 删除指定 id 对应的筛选视图。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/get document }\n                 *\n                 * 获取筛选视图\n                 *\n                 * 获取指定筛选视图 id 的名字和筛选范围。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/patch document }\n                 *\n                 * 更新筛选视图\n                 *\n                 * 更新筛选视图的名字或者筛选范围。名字长度不超过100，不能重复即子表内唯一；筛选范围不超过子表的最大范围。\n                 *\n                 * 筛选范围的设置参考：[筛选视图的筛选条件指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view-condition/filter-view-condition-user-guide)\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/:filter_view_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.filter_view&apiName=query&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-filter_view/query document }\n                 *\n                 * 查询筛选视图\n                 *\n                 * 查询子表内所有的筛选视图基本信息，包括 id、name 和 range\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/filter_views/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 单元格\n             */\n            spreadsheetSheet: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=find&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/find document }\n                 *\n                 * 查找单元格\n                 *\n                 * 在指定范围内查找符合查找条件的单元格。\n                 */\n                find: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/find`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/get document }\n                 *\n                 * 查询工作表\n                 *\n                 * 该接口用于通过工作表ID查询工作表属性信息。\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=move_dimension&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/move_dimension document }\n                 *\n                 * 移动行列\n                 *\n                 * 该接口用于移动行列，行列被移动到目标位置后，原本在目标位置的行列会对应右移或下移。\n                 */\n                moveDimension: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/move_dimension`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=query&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/query document }\n                 *\n                 * 获取工作表\n                 *\n                 * 该接口用于获取电子表格下所有工作表及其属性。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet&apiName=replace&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet/replace document }\n                 *\n                 * 替换单元格\n                 *\n                 * 按照指定的条件查找子表的某个范围内的数据符合条件的单元格并替换值，返回替换成功的单元格位置。一次请求最多允许替换5000个单元格，如果超过请将range缩小范围再操作。请求体中的 range、find、replaccement 字段必填。\n                 */\n                replace: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/replace`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 浮动图片\n             */\n            spreadsheetSheetFloatImage: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=create&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/create document }\n                 *\n                 * 创建浮动图片\n                 *\n                 * 根据传入的参数创建一张浮动图片。Float_image_token （[上传图片至表格后得到](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_all)）和range（只支持一个单元格） 必填。Float_image_id 可选，不填的话会默认生成，长度为10，由 0-9、a-z、A-Z 组合生成。表格内不重复的图片（浮动图片+单元格图片）总数不超过4000。width 和 height 为图片展示的宽高，可选，不填的话会使用图片的真实宽高。offset_x 和 offset_y 为图片左上角距离所在单元格左上角的偏移，可选，默认为 0。\n                 *\n                 * 浮动图片的设置参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=delete&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/delete document }\n                 *\n                 * 删除浮动图片\n                 *\n                 * 删除 float_image_id 对应的浮动图片。\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/:float_image_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=get&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/get document }\n                 *\n                 * 获取浮动图片\n                 *\n                 * 根据 float_image_id 获取对应浮动图片的信息。\n                 *\n                 * 浮动图片参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/:float_image_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=patch&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/patch document }\n                 *\n                 * 更新浮动图片\n                 *\n                 * 更新已有的浮动图片位置和宽高，包括 range、width、height、offset_x 和 offset_y，不包括 float_image_id 和 float_image_token。\n                 *\n                 * 浮动图片更新参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/:float_image_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=sheets&resource=spreadsheet.sheet.float_image&apiName=query&version=v3 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/query document }\n                 *\n                 * 查询浮动图片\n                 *\n                 * 返回子表内所有的浮动图片信息。\n                 *\n                 * 浮动图片参考：[浮动图片指南](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/sheets-v3/spreadsheet-sheet-float_image/float-image-user-guide)\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/sheets/v3/spreadsheets/:spreadsheet_token/sheets/:sheet_id/float_images/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * AI能力\n         */\n        this.speech_to_text = {\n            /**\n             * 语音识别\n             */\n            speech: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=speech_to_text&resource=speech&apiName=file_recognize&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/speech_to_text-v1/speech/file_recognize document }\n                 *\n                 * 语音文件识别 (ASR)\n                 *\n                 * 语音文件识别接口，上传整段语音文件进行一次性识别。接口适合 60 秒以内音频识别\n                 *\n                 * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n                 */\n                fileRecognize: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/speech_to_text/v1/speech/file_recognize`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=speech_to_text&resource=speech&apiName=stream_recognize&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/speech_to_text-v1/speech/stream_recognize document }\n                 *\n                 * 语音流式识别 (ASR)\n                 *\n                 * 语音流式接口，将整个音频文件分片进行传入模型。能够实时返回数据。建议每个音频分片的大小为 100-200ms\n                 *\n                 * 单租户限流：20 路（一个 stream_id 称为一路会话），同租户下的应用没有限流，共享本租户的 20路限流\n                 */\n                streamRecognize: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/speech_to_text/v1/speech/stream_recognize`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.spend = {};\n        /**\n             \n             */\n        this.sup_project = {};\n        /**\n         * 任务\n         */\n        this.task = {\n            /**\n             * 任务\n             */\n            task: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=batch_delete_collaborator&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/batch_delete_collaborator document }\n                 *\n                 * 批量删除执行者\n                 *\n                 * 该接口用于批量删除执行者\n                 */\n                batchDeleteCollaborator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/batch_delete_collaborator`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=batch_delete_follower&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/batch_delete_follower document }\n                 *\n                 * 批量删除关注人\n                 *\n                 * 该接口用于批量删除关注人\n                 */\n                batchDeleteFollower: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/batch_delete_follower`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=complete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/complete document }\n                 *\n                 * 完成任务\n                 *\n                 * 该接口用于将任务状态修改为“已完成”。;完成任务是指整个任务全部完成，而不支持执行者分别完成任务，执行成功后，任务对所有关联用户都变为完成状态。\n                 */\n                complete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/complete`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/create document }\n                 *\n                 * 创建任务\n                 *\n                 * 该接口可以创建一个任务，支持填写任务的基本信息，包括任务的标题，描述及协作者等。;在此基础上，创建任务时可以设置截止时间和重复规则，将任务设置为定期执行的重复任务。通过添加协作者，则可以让其他用户协同完成该任务。;此外，接口也提供了一些支持自定义内容的字段，调用方可以实现定制化效果，如完成任务后跳转到指定结束界面。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/delete document }\n                 *\n                 * 删除任务\n                 *\n                 * 该接口用于删除任务\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/get document }\n                 *\n                 * 获取任务详情\n                 *\n                 * 该接口用于获取任务详情，包括任务标题、描述、时间、来源等信息\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/list document }\n                 *\n                 * 获取任务列表\n                 *\n                 * 以分页的方式获取任务列表。当使用user_access_token时，获取与该用户身份相关的所有任务。当使用tenant_access_token时，获取以该应用身份通过“创建任务“接口创建的所有任务（并非获取该应用所在租户下所有用户创建的任务）。;本接口支持通过任务创建时间以及任务的完成状态对任务进行过滤。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/patch document }\n                 *\n                 * 更新任务\n                 *\n                 * 该接口用于修改任务的标题、描述、时间、来源等相关信息\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task&apiName=uncomplete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task/uncomplete document }\n                 *\n                 * 取消完成任务\n                 *\n                 * 该接口用于取消任务的已完成状态\n                 */\n                uncomplete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/uncomplete`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 执行者\n             */\n            taskCollaborator: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.collaborator&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-collaborator/create document }\n                 *\n                 * 新增执行者\n                 *\n                 * 该接口用于新增任务执行者，一次性可以添加多个执行者。;只有任务的创建者和执行者才能添加执行者，关注人无权限添加。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.collaborator&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-collaborator/delete document }\n                 *\n                 * 删除执行者\n                 *\n                 * 该接口用于删除任务执行者\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators/:collaborator_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.collaborator&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-collaborator/list document }\n                 *\n                 * 获取一个任务的执行者列表\n                 *\n                 * 该接口用于查询任务执行者列表，支持分页，最大值为50\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/collaborators`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 评论\n             */\n            taskComment: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/create document }\n                 *\n                 * 创建评论\n                 *\n                 * 该接口用于创建和回复任务的评论。当parent_id字段为0时，为创建评论；当parent_id不为0时，为回复某条评论\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/delete document }\n                 *\n                 * 删除评论\n                 *\n                 * 该接口用于通过评论ID删除评论\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments/:comment_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/get document }\n                 *\n                 * 获取评论详情\n                 *\n                 * 该接口用于通过评论ID获取评论详情\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments/:comment_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/list document }\n                 *\n                 * 获取评论列表\n                 *\n                 * 该接口用于查询任务评论列表，支持分页，最大值为100\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.comment&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-comment/update document }\n                 *\n                 * 更新评论\n                 *\n                 * 该接口用于更新评论内容\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/comments/:comment_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 关注人\n             */\n            taskFollower: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.follower&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-follower/create document }\n                 *\n                 * 新增关注人\n                 *\n                 * 该接口用于创建任务关注人。可以一次性添加多位关注人。关注人ID要使用表示用户的ID。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.follower&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-follower/delete document }\n                 *\n                 * 删除关注人\n                 *\n                 * 该接口用于删除任务关注人\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers/:follower_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.follower&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-follower/list document }\n                 *\n                 * 获取任务关注人列表\n                 *\n                 * 该接口用于查询任务关注人列表，支持分页，最大值为50\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/followers`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 提醒\n             */\n            taskReminder: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.reminder&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/create document }\n                 *\n                 * 新增提醒时间\n                 *\n                 * 该接口用于创建任务的提醒时间。提醒时间在截止时间基础上做偏移，但是偏移后的结果不能早于当前时间。\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.reminder&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/delete document }\n                 *\n                 * 删除提醒时间\n                 *\n                 * 删除提醒时间，返回结果状态\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders/:reminder_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=task&resource=task.reminder&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/task-v1/task-reminder/list document }\n                 *\n                 * 查询提醒时间列表\n                 *\n                 * 返回提醒时间列表，支持分页，最大值为50\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/task/v1/tasks/:task_id/reminders`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 企业信息\n         */\n        this.tenant = {\n            /**\n             * tenant.product_assign_info\n             */\n            tenantProductAssignInfo: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=tenant&resource=tenant.product_assign_info&apiName=query&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=query&project=tenant&resource=tenant.product_assign_info&version=v2 document }\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/tenant/v2/tenant/assign_info_list/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 企业信息\n             */\n            tenant: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=tenant&resource=tenant&apiName=query&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/tenant-v2/tenant/query document }\n                 *\n                 * 获取企业信息\n                 *\n                 * 获取企业名称、企业编号等企业信息\n                 *\n                 * 如果ISV应用是企业创建时默认安装，并且180天内企业未打开或使用过此应用，则无法通过此接口获取到企业信息。\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/tenant/v2/tenant/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * AI能力\n         */\n        this.translation = {\n            /**\n             * 文本\n             */\n            text: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=translation&resource=text&apiName=detect&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/translation-v1/text/detect document }\n                 *\n                 * 文本语种识别\n                 *\n                 * 机器翻译 (MT)，支持 100 多种语言识别，返回符合 ISO 639-1 标准\n                 *\n                 * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n                 */\n                detect: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/translation/v1/text/detect`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=translation&resource=text&apiName=translate&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/ai/translation-v1/text/translate document }\n                 *\n                 * 文本翻译\n                 *\n                 * 机器翻译 (MT)，支持以下语种互译：;\"zh\": 汉语；;\"zh-Hant\": 繁体汉语；;\"en\": 英语；;\"ja\": 日语；;\"ru\": 俄语；;\"de\": 德语；;\"fr\": 法语；;\"it\": 意大利语；;\"pl\": 波兰语；;\"th\": 泰语；;\"hi\": 印地语；;\"id\": 印尼语；;\"es\": 西班牙语；;\"pt\": 葡萄牙语；;\"ko\": 朝鲜语；;\"vi\": 越南语；\n                 *\n                 * 单租户限流：20QPS，同租户下的应用没有限流，共享本租户的 20QPS 限流\n                 */\n                translate: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/translation/v1/text/translate`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.unified_kms_log = {};\n        /**\n         * 视频会议\n         */\n        this.vc = {\n            /**\n             * 告警中心\n             */\n            alert: {\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/alerts`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=alert&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/alert/list document }\n                 *\n                 * 获取告警记录\n                 *\n                 * 获取特定条件下租户的设备告警记录\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/alerts`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 导出\n             */\n            export: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=download&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/download document }\n                 *\n                 * 下载导出文件\n                 *\n                 * 下载导出文件\n                 */\n                download: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const res = yield this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/download`, path),\n                        method: \"GET\",\n                        headers,\n                        data,\n                        params,\n                        responseType: \"stream\",\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                    return {\n                        writeFile: (filePath) => __awaiter(this, void 0, void 0, function* () {\n                            return new Promise((resolve, reject) => {\n                                const writableStream = fs.createWriteStream(filePath);\n                                writableStream.on(\"finish\", () => {\n                                    resolve(filePath);\n                                });\n                                writableStream.on(\"error\", (e) => {\n                                    reject(e);\n                                });\n                                res.pipe(writableStream);\n                            });\n                        }),\n                    };\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/get document }\n                 *\n                 * 查询导出任务结果\n                 *\n                 * 查看异步导出的进度\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/:task_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=meeting_list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/meeting_list document }\n                 *\n                 * 导出会议明细\n                 *\n                 * 导出会议明细，具体权限要求请参考「导出概述」\n                 */\n                meetingList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/meeting_list`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=participant_list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/participant_list document }\n                 *\n                 * 导出参会人明细\n                 *\n                 * 导出某个会议的参会人详情列表，具体权限要求请参考「导出概述」\n                 */\n                participantList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/participant_list`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=participant_quality_list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/participant_quality_list document }\n                 *\n                 * 导出参会人会议质量数据\n                 *\n                 * 导出某场会议某个参会人的音视频&共享质量数据;，具体权限要求请参考「导出概述」\n                 */\n                participantQualityList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/participant_quality_list`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=export&apiName=resource_reservation_list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/export/resource_reservation_list document }\n                 *\n                 * 导出会议室预定数据\n                 *\n                 * 导出会议室预定数据，具体权限要求请参考「导出概述」\n                 */\n                resourceReservationList: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/exports/resource_reservation_list`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 会议\n             */\n            meeting: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=end&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/end document }\n                 *\n                 * 结束会议\n                 *\n                 * 结束一个进行中的会议\n                 *\n                 * 会议正在进行中，且操作者须具有相应的权限（如果操作者为用户，必须是会中当前主持人）\n                 */\n                end: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/end`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/get document }\n                 *\n                 * 获取会议详情\n                 *\n                 * 获取一个会议的详细数据\n                 *\n                 * 只能获取归属于自己的会议，支持查询最近90天内的会议\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=invite&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/invite document }\n                 *\n                 * 邀请参会人\n                 *\n                 * 邀请参会人进入会议\n                 *\n                 * 发起邀请的操作者必须具有相应的权限（如果操作者为用户，则必须在会中），如果会议被锁定、或参会人数如果达到上限，则会邀请失败\n                 */\n                invite: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/invite`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=kickout&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/kickout document }\n                 *\n                 * 移除参会人\n                 *\n                 * 将参会人从会议中移除\n                 */\n                kickout: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/kickout`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listByNoWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/list_by_no`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=list_by_no&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/list_by_no document }\n                 *\n                 * 获取与会议号相关联的会议列表\n                 *\n                 * 获取指定时间范围（90天内)会议号关联的会议简要信息列表\n                 */\n                listByNo: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/list_by_no`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting&apiName=set_host&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting/set_host document }\n                 *\n                 * 设置主持人\n                 *\n                 * 设置会议的主持人\n                 *\n                 * 发起设置主持人的操作者必须具有相应的权限（如果操作者为用户，必须是会中当前主持人）；该操作使用CAS并发安全机制，需传入会中当前主持人，如果操作失败可使用返回的最新数据重试\n                 */\n                setHost: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/set_host`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 录制\n             */\n            meetingRecording: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/get document }\n                 *\n                 * 获取录制文件\n                 *\n                 * 获取一个会议的录制文件。\n                 *\n                 * 会议结束后并且收到了\"录制完成\"的事件方可获取录制文件；只有会议owner（通过开放平台预约的会议即为预约人）有权限获取；录制时间太短(&lt;5s)有可能无法生成录制文件\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=set_permission&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/set_permission document }\n                 *\n                 * 授权录制文件\n                 *\n                 * 将一个会议的录制文件授权给组织、用户或公开到公网\n                 *\n                 * 会议结束后并且收到了\"录制完成\"的事件方可进行授权；会议owner（通过开放平台预约的会议即为预约人）才有权限操作\n                 */\n                setPermission: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording/set_permission`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=start&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/start document }\n                 *\n                 * 开始录制\n                 *\n                 * 在会议中开始录制。\n                 *\n                 * 会议正在进行中，且操作者具有相应权限（如果操作者为用户，必须是会中当前主持人）\n                 */\n                start: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording/start`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting.recording&apiName=stop&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/meeting-recording/stop document }\n                 *\n                 * 停止录制\n                 *\n                 * 在会议中停止录制。\n                 *\n                 * 会议正在录制中，且操作者具有相应权限（如果操作者为用户，必须是会中当前主持人）\n                 */\n                stop: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meetings/:meeting_id/recording/stop`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * meeting_list\n             */\n            meetingList: {\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/meeting_list`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=meeting_list&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=meeting_list&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/meeting_list`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * participant_list\n             */\n            participantList: {\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_list`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=participant_list&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=participant_list&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_list`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * participant_quality_list\n             */\n            participantQualityList: {\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_quality_list`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=participant_quality_list&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=participant_quality_list&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/participant_quality_list`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 会议报告\n             */\n            report: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=report&apiName=get_daily&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/report/get_daily document }\n                 *\n                 * 获取会议报告\n                 *\n                 * 获取一段时间内组织的每日会议使用报告。\n                 *\n                 * 支持最近90天内的数据查询\n                 */\n                getDaily: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reports/get_daily`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=report&apiName=get_top_user&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/report/get_top_user document }\n                 *\n                 * 获取top用户列表\n                 *\n                 * 获取一段时间内组织内会议使用的top用户列表。\n                 *\n                 * 支持最近90天内的数据查询；默认返回前10位，最多可查询前100位\n                 */\n                getTopUser: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reports/get_top_user`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 预约\n             */\n            reserve: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=apply&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/apply document }\n                 *\n                 * 预约会议\n                 *\n                 * 创建一个会议预约。\n                 *\n                 * 支持预约最近30天内的会议（到期时间距离当前时间不超过30天），预约到期后会议号将被释放，如需继续使用可通过\"更新预约\"接口进行续期；预约会议时可配置参会人在会中的权限，以达到控制会议的目的\n                 */\n                apply: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/apply`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/delete document }\n                 *\n                 * 删除预约\n                 *\n                 * 删除一个预约\n                 *\n                 * 只能删除归属于自己的预约；删除后数据不可恢复\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/get document }\n                 *\n                 * 获取预约\n                 *\n                 * 获取一个预约的详情\n                 *\n                 * 只能获取归属于自己的预约\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=get_active_meeting&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/get_active_meeting document }\n                 *\n                 * 获取活跃会议\n                 *\n                 * 获取一个预约的当前活跃会议\n                 *\n                 * 只能获取归属于自己的预约的活跃会议（一个预约最多有一个正在进行中的会议）\n                 */\n                getActiveMeeting: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id/get_active_meeting`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve&apiName=update&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve/update document }\n                 *\n                 * 更新预约\n                 *\n                 * 更新一个预约\n                 *\n                 * 只能更新归属于自己的预约，不需要更新的字段不传（如果传空则会被更新为空）；可用于续期操作，到期时间距离当前时间不超过30天\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserves/:reserve_id`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * reserve_config.admin\n             */\n            reserveConfigAdmin: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.admin&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=reserve_config.admin&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/admin`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.admin&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=patch&project=vc&resource=reserve_config.admin&version=v1 document }\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/admin`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * reserve_config.form\n             */\n            reserveConfigForm: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.form&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=reserve_config.form&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/form`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config.form&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=patch&project=vc&resource=reserve_config.form&version=v1 document }\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id/form`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * reserve_config\n             */\n            reserveConfig: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve_config/patch document }\n                 *\n                 * 更新会议室预定范围\n                 *\n                 * 更新会议室预定范围\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/:reserve_config_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=reserve_config&apiName=reserve_scope&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/reserve_config/reserve_scope document }\n                 *\n                 * 获取会议室预定范围\n                 *\n                 * 获取会议室预定范围\n                 */\n                reserveScope: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/reserve_configs/reserve_scope`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * resource_reservation_list\n             */\n            resourceReservationList: {\n                getWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/resource_reservation_list`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=resource_reservation_list&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=get&project=vc&resource=resource_reservation_list&version=v1 document }\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/resource_reservation_list`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 会议室\n             */\n            room: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/create document }\n                 *\n                 * 创建会议室\n                 *\n                 * 该接口用于创建会议室\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=delete&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/delete document }\n                 *\n                 * 删除会议室\n                 *\n                 * 该接口可以用来删除某个会议室\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/:room_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/get document }\n                 *\n                 * 查询会议室详情\n                 *\n                 * 该接口可以使用会议室ID查询会议室详情\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/:room_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/list document }\n                 *\n                 * 查询会议室列表\n                 *\n                 * 该接口可以用来查询某个会议室层级下会议室列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=mget&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/mget document }\n                 *\n                 * 批量查询会议室详情\n                 *\n                 * 该接口可以使用会议室ID批量查询会议室详情\n                 */\n                mget: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/mget`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/patch document }\n                 *\n                 * 更新会议室\n                 *\n                 * 该接口可以用来更新某个会议室的信息\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/:room_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room&apiName=search&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room/search document }\n                 *\n                 * 搜索会议室\n                 *\n                 * 该接口可以用来搜索会议室，支持使用关键词进行搜索，也支持使用自定义会议室ID进行查询\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/rooms/search`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * room_config\n             */\n            roomConfig: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_config&apiName=query&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=query&project=vc&resource=room_config&version=v1 document }\n                 */\n                query: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_configs/query`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_config&apiName=set&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=set&project=vc&resource=room_config&version=v1 document }\n                 */\n                set: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_configs/set`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 会议室层级\n             */\n            roomLevel: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/create document }\n                 *\n                 * 创建会议室层级\n                 *\n                 * 该接口用于创建会议室层级\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=del&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/del document }\n                 *\n                 * 删除会议室层级\n                 *\n                 * 该接口可以用来删除某个会议室层级\n                 */\n                del: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/del`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/get document }\n                 *\n                 * 查询会议室层级详情\n                 *\n                 * 该接口可以使用会议室层级ID查询会议室层级详情\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/:room_level_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=list&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/list document }\n                 *\n                 * 查询会议室层级列表\n                 *\n                 * 该接口用来查询某个会议室层级下的子层级列表\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=mget&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/mget document }\n                 *\n                 * 批量查询会议室层级详情\n                 *\n                 * 该接口可以使用会议室层级ID批量查询会议室层级详情\n                 */\n                mget: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/mget`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=patch&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/patch document }\n                 *\n                 * 更新会议室层级\n                 *\n                 * 该接口可以用来更新某个会议室层级的信息\n                 */\n                patch: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/:room_level_id`, path),\n                        method: \"PATCH\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=room_level&apiName=search&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/room_level/search document }\n                 *\n                 * 搜索会议室层级\n                 *\n                 * 该接口可以用来搜索会议室层级，支持使用自定义会议室层级ID进行查询\n                 */\n                search: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/room_levels/search`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 会议室配置\n             */\n            scopeConfig: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=scope_config&apiName=create&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/scope_config/create document }\n                 *\n                 * 设置会议室配置\n                 *\n                 * 该接口可以用来设置某个会议层级范围下或者某个会议室的配置\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/scope_config`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=vc&resource=scope_config&apiName=get&version=v1 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/vc-v1/scope_config/get document }\n                 *\n                 * 查询会议室配置\n                 *\n                 * 该接口可以用来查询某个会议层级范围下或者某个会议室的配置\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/vc/v1/scope_config`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n         * 云文档-知识库\n         */\n        this.wiki = {\n            /**\n             * 知识空间\n             */\n            space: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/create document }\n                 *\n                 * 创建知识空间\n                 *\n                 * 此接口用于创建知识空间\n                 *\n                 * 此接口不支持tenant access token（应用身份访问）\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=get&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/get document }\n                 *\n                 * 获取知识空间信息\n                 *\n                 * 此接口用于根据知识空间ID来查询知识空间的信息。;;空间类型（type）：;- 个人空间：归个人管理。一人仅可拥有一个个人空间，无法添加其他管理员。;- 团队空间：归团队（多人)管理，可添加多个管理员。;;空间可见性（visibility）：;- 公开空间：租户所有用户可见，默认为成员权限。无法额外添加成员，但可以添加管理员。;- 私有空间：仅对知识空间管理员、成员可见，需要手动添加管理员、成员。\n                 *\n                 * 本接口要求知识库权限：;- 需要为知识空间成员（管理员）\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=get_node&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/get_node document }\n                 *\n                 * 获取知识空间节点信息\n                 *\n                 * 获取知识空间节点信息\n                 *\n                 * 知识库权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 节点阅读权限\n                 */\n                getNode: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/get_node`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space&apiName=list&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/list document }\n                 *\n                 * 获取知识空间列表\n                 *\n                 * 此接口用于获取有权限访问的知识空间列表。;;此接口为分页接口。由于权限过滤，可能返回列表为空，但分页标记（has_more）为true，可以继续分页请求。;;对于知识空间各项属性描述请参阅[获取知识空间信息](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space/get)\n                 *\n                 * 使用tenant access token调用时，请确认应用/机器人拥有部分知识空间的访问权限，否则返回列表容易为空。\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 空间成员\n             */\n            spaceMember: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.member&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-member/create document }\n                 *\n                 * 添加知识空间成员\n                 *\n                 * 添加知识空间成员或管理员。\n                 *\n                 * 知识空间具有[类型](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)和[可见性](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)的概念。不同的类型或可见性可以对本操作做出限制：;- 可见性限制：公开知识空间（visibility为public）对租户所有用户可见，因此不支持再添加成员，但可以添加管理员。;- 类型限制：个人知识空间 （type为person）为个人管理的知识空间，不支持添加其他管理员（包括应用/机器人）。但可以添加成员。;;;知识空间权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 为知识空间管理员\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/members`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.member&apiName=delete&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-member/delete document }\n                 *\n                 * 删除知识空间成员\n                 *\n                 * 此接口用于删除知识空间成员或管理员。\n                 *\n                 * 知识空间具有[类型](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)和[可见性](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)的概念。不同的类型或可见性可以对本操作做出限制：;- 可见性限制：公开知识空间（visibility为public）对租户所有用户可见，因此不支持再删除成员，但可以删除管理员。;- 类型限制：个人知识空间 （type为person）为个人管理的知识空间，不支持删除管理员。但可以删除成员。;;;知识空间权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 为知识空间管理员\n                 */\n                delete: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/members/:member_id`, path),\n                        method: \"DELETE\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 节点\n             */\n            spaceNode: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=copy&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/copy document }\n                 *\n                 * 创建知识空间节点副本\n                 *\n                 * 此接口用于在知识空间创建节点副本到指定位置。\n                 */\n                copy: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/:node_token/copy`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=create&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/create document }\n                 *\n                 * 创建知识空间节点\n                 *\n                 * 此接口用于在知识节点里创建[节点](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-overview)到指定位置。\n                 *\n                 * 知识空间权限要求，当前使用的 access token 所代表的应用或用户拥有：;- **父节点**容器编辑权限\n                 */\n                create: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                listWithIterator: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    const sendRequest = (innerPayload) => __awaiter(this, void 0, void 0, function* () {\n                        const res = yield this.httpInstance\n                            .request({\n                            url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes`, path),\n                            method: \"GET\",\n                            headers: pickBy(innerPayload.headers, identity),\n                            params: pickBy(innerPayload.params, identity),\n                        })\n                            .catch((e) => {\n                            this.logger.error(formatErrors(e));\n                        });\n                        return res;\n                    });\n                    const Iterable = {\n                        [Symbol.asyncIterator]() {\n                            return __asyncGenerator(this, arguments, function* _a() {\n                                let hasMore = true;\n                                let pageToken;\n                                while (hasMore) {\n                                    try {\n                                        const res = yield __await(sendRequest({\n                                            headers,\n                                            params: Object.assign(Object.assign({}, params), { page_token: pageToken }),\n                                            data,\n                                        }));\n                                        const _b = get(res, \"data\") || {}, { \n                                        // @ts-ignore\n                                        has_more, \n                                        // @ts-ignore\n                                        page_token, \n                                        // @ts-ignore\n                                        next_page_token } = _b, rest = __rest(_b, [\"has_more\", \"page_token\", \"next_page_token\"]);\n                                        yield yield __await(rest);\n                                        hasMore = Boolean(has_more);\n                                        pageToken = page_token || next_page_token;\n                                    }\n                                    catch (e) {\n                                        yield yield __await(null);\n                                        break;\n                                    }\n                                }\n                            });\n                        },\n                    };\n                    return Iterable;\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=list&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/list document }\n                 *\n                 * 获取知识空间子节点列表\n                 *\n                 * 此接口用于分页获取Wiki节点的子节点列表。;;此接口为分页接口。由于权限过滤，可能返回列表为空，但分页标记（has_more）为true，可以继续分页请求。\n                 *\n                 * 知识库权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 父节点阅读权限\n                 */\n                list: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=move&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/move document }\n                 *\n                 * 移动知识空间节点\n                 *\n                 * 此方法用于在Wiki内移动节点，支持跨知识空间移动。如果有子节点，会携带子节点一起移动。\n                 *\n                 * 知识库权限要求：;- 节点编辑权限;- 原父节点容器编辑权限;- 目的父节点容器编辑权限\n                 */\n                move: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/:node_token/move`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=move_docs_to_wiki&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/move_docs_to_wiki document }\n                 *\n                 * 移动云空间文档至知识空间\n                 *\n                 * 该接口允许移动云空间文档至知识空间，并挂载在指定位置\n                 *\n                 * 此接口为异步接口。若移动已完成（或文档已在Wiki中），则直接返回结果（Wiki token）。若尚未完成，则返回task id。请使用[获取任务结果](https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/task/get)接口进行查询。;;知识库权限要求，当前使用的 access token 所代表的应用或用户拥有：;- 文档可管理权限;- 原文件夹编辑权限;- 目标父节点容器编辑权限\n                 *\n                 * ### 移动操作 ###;移动后，文档将从“我的空间”或“共享空间”转移至“知识库”后，无法从下列入口查看到文档：;- 云空间主页：快速访问;- 我的空间;- 共享空间;;### 权限变更 ###;移动后，文档会向所有可查看“页面树”的用户显示，默认继承父页面的权限设置。;</md-alert\n                 */\n                moveDocsToWiki: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/move_docs_to_wiki`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.node&apiName=update_title&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-node/update_title document }\n                 *\n                 * 更新知识空间节点标题\n                 *\n                 * 此接口用于更新节点标题\n                 *\n                 * 此接口目前仅支持文档(doc)、新版文档(docx)和快捷方式。\n                 */\n                updateTitle: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/nodes/:node_token/update_title`, path),\n                        method: \"POST\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 空间设置\n             */\n            spaceSetting: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=space.setting&apiName=update&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/space-setting/update document }\n                 *\n                 * 更新知识空间设置\n                 *\n                 * 根据space_id更新知识空间公共设置\n                 *\n                 * 知识库权限要求：;- 为知识空间管理员\n                 */\n                update: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/spaces/:space_id/setting`, path),\n                        method: \"PUT\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n            /**\n             * 云文档\n             */\n            task: {\n                /**\n                 * {@link https://open.feishu.cn/api-explorer?project=wiki&resource=task&apiName=get&version=v2 click to debug }\n                 *\n                 * {@link https://open.feishu.cn/document/ukTMukTMukTM/uUDN04SN0QjL1QDN/wiki-v2/task/get document }\n                 *\n                 * 获取任务结果\n                 *\n                 * 该方法用于获取wiki异步任务的结果\n                 *\n                 * 知识库权限要求，当前 access token 所代表的用户或应用（机器人）：;- 为任务创建者\n                 */\n                get: (payload, options) => __awaiter(this, void 0, void 0, function* () {\n                    const { headers, params, data, path } = yield this.formatPayload(payload, options);\n                    return this.httpInstance\n                        .request({\n                        url: fillApiPath(`${this.domain}/open-apis/wiki/v2/tasks/:task_id`, path),\n                        method: \"GET\",\n                        data,\n                        params,\n                        headers,\n                    })\n                        .catch((e) => {\n                        this.logger.error(formatErrors(e));\n                        throw e;\n                    });\n                }),\n            },\n        };\n        /**\n             \n             */\n        this.workplace = {};\n    }\n}\n\nconst defaultLogger = {\n    error: (...msg) => {\n        console.log('[error]:', ...msg);\n    },\n    warn: (...msg) => {\n        console.warn('[warn]:', ...msg);\n    },\n    info: (...msg) => {\n        console.info('[info]:', ...msg);\n    },\n    debug: (...msg) => {\n        console.debug('[debug]:', ...msg);\n    },\n    trace: (...msg) => {\n        console.trace('[trace]:', ...msg);\n    },\n};\n\nclass LoggerProxy {\n    constructor(level, logger) {\n        this.level = level;\n        this.logger = logger;\n    }\n    error(...msg) {\n        if (this.level >= LoggerLevel.error) {\n            this.logger.error(msg);\n        }\n    }\n    warn(...msg) {\n        if (this.level >= LoggerLevel.warn) {\n            this.logger.warn(msg);\n        }\n    }\n    info(...msg) {\n        if (this.level >= LoggerLevel.info) {\n            this.logger.info(msg);\n        }\n    }\n    debug(...msg) {\n        if (this.level >= LoggerLevel.debug) {\n            this.logger.debug(msg);\n        }\n    }\n    trace(...msg) {\n        if (this.level >= LoggerLevel.trace) {\n            this.logger.trace(msg);\n        }\n    }\n}\n\nclass AppTicketManager {\n    constructor(params) {\n        this.appId = params.appId;\n        this.appSecret = params.appSecret;\n        this.cache = params.cache;\n        this.domain = params.domain;\n        this.logger = params.logger;\n        this.appType = params.appType;\n        this.httpInstance = params.httpInstance;\n        this.logger.debug('app ticket manager is ready');\n        this.checkAppTicket();\n    }\n    checkAppTicket() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.appType === AppType.ISV) {\n                const appTicket = yield ((_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(CAppTicket, {\n                    namespace: this.appId\n                }));\n                if (!appTicket) {\n                    this.requestAppTicket();\n                }\n            }\n        });\n    }\n    requestAppTicket() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.debug('request app ticket');\n            yield this.httpInstance\n                .post(`${this.domain}/open-apis/auth/v3/app_ticket/resend`, {\n                app_id: this.appId,\n                app_secret: this.appSecret,\n            })\n                .catch((e) => {\n                this.logger.error(e);\n            });\n        });\n    }\n    getAppTicket() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const appTicket = yield ((_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(CAppTicket, {\n                namespace: this.appId\n            }));\n            if (appTicket) {\n                this.logger.debug('use cache app ticket');\n                return appTicket;\n            }\n            yield this.requestAppTicket();\n            return undefined;\n        });\n    }\n}\n\nclass TokenManager {\n    constructor(params) {\n        this.appId = params.appId;\n        this.appSecret = params.appSecret;\n        this.cache = params.cache;\n        this.domain = params.domain;\n        this.logger = params.logger;\n        this.appType = params.appType;\n        this.httpInstance = params.httpInstance;\n        this.appTicketManager = new AppTicketManager({\n            appId: this.appId,\n            appSecret: this.appSecret,\n            cache: this.cache,\n            domain: this.domain,\n            logger: this.logger,\n            appType: this.appType,\n            httpInstance: this.httpInstance,\n        });\n        this.logger.debug('token manager is ready');\n    }\n    getCustomTenantAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const cachedTenantAccessToken = yield ((_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(CTenantAccessToken, {\n                namespace: this.appId\n            }));\n            if (cachedTenantAccessToken) {\n                this.logger.debug('use cache token');\n                return cachedTenantAccessToken;\n            }\n            this.logger.debug('request token');\n            // @ts-ignore\n            const { tenant_access_token, expire } = yield this.httpInstance\n                .post(`${this.domain}/open-apis/auth/v3/tenant_access_token/internal`, {\n                app_id: this.appId,\n                app_secret: this.appSecret,\n            })\n                .catch((e) => {\n                this.logger.error(e);\n            });\n            yield ((_b = this.cache) === null || _b === void 0 ? void 0 : _b.set(CTenantAccessToken, tenant_access_token, \n            // Due to the time-consuming network, the expiration time needs to be 3 minutes earlier\n            new Date().getTime() + expire * 1000 - 3 * 60 * 1000, {\n                namespace: this.appId\n            }));\n            return tenant_access_token;\n        });\n    }\n    getMarketTenantAccessToken(tenantKey) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!tenantKey) {\n                this.logger.error('market app request need tenant key');\n                return undefined;\n            }\n            const tenantAccessToken = yield ((_a = this.cache) === null || _a === void 0 ? void 0 : _a.get(`larkMarketAccessToken${tenantKey}`, {\n                namespace: this.appId\n            }));\n            if (tenantAccessToken) {\n                this.logger.debug('use cache token');\n                return tenantAccessToken;\n            }\n            this.logger.debug('get app ticket');\n            const appTicket = yield this.appTicketManager.getAppTicket();\n            if (!appTicket) {\n                this.logger.warn('no app ticket');\n                return undefined;\n            }\n            this.logger.debug('get app access token');\n            // 获取app_access_token\n            // @ts-ignore\n            const { app_access_token } = yield this.httpInstance\n                .post(`${this.domain}/open-apis/auth/v3/app_access_token`, {\n                app_id: this.appId,\n                app_secret: this.appSecret,\n                app_ticket: appTicket,\n            })\n                .catch((e) => {\n                this.logger.error(e);\n            });\n            this.logger.debug('get tenant access token');\n            // 获取tenant_access_token\n            // @ts-ignore\n            const { tenant_access_token, expire } = yield this.httpInstance\n                .post(`${this.domain}/open-apis/auth/v3/tenant_access_token`, {\n                app_access_token,\n                tenant_key: tenantKey,\n            })\n                .catch((e) => {\n                this.logger.error(e);\n            });\n            // 设置tenant_access_token\n            yield this.cache.set(`larkMarketAccessToken${tenantKey}`, tenant_access_token, \n            // Due to the time-consuming network, the expiration time needs to be 3 minutes earlier\n            new Date().getTime() + expire * 1000 - 3 * 60 * 1000, {\n                namespace: this.appId\n            });\n            return tenant_access_token;\n        });\n    }\n    getTenantAccessToken(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(this.appType === AppType.SelfBuild, () => __awaiter(this, void 0, void 0, function* () {\n                this.logger.debug('get custom app token');\n            }));\n            assert(this.appType === AppType.ISV, () => __awaiter(this, void 0, void 0, function* () {\n                this.logger.debug('get market app token ');\n            }));\n            // prettier-ignore\n            const tenantAccessToken = this.appType === AppType.SelfBuild\n                ? yield this.getCustomTenantAccessToken()\n                : yield this.getMarketTenantAccessToken(get(params, CTenantKey));\n            return tenantAccessToken;\n        });\n    }\n}\n\nclass Client extends Client$1 {\n    constructor(params) {\n        super();\n        this.appId = '';\n        this.appSecret = '';\n        this.helpDeskId = '';\n        this.helpDeskToken = '';\n        this.appType = AppType.SelfBuild;\n        this.logger = new LoggerProxy(params.loggerLevel || LoggerLevel.info, params.logger || defaultLogger);\n        this.appId = params.appId;\n        this.appSecret = params.appSecret;\n        this.disableTokenCache = params.disableTokenCache;\n        assert(!this.appId, () => this.logger.error('appId is needed'));\n        assert(!this.appSecret, () => this.logger.error('appSecret is needed'));\n        this.helpDeskId = params.helpDeskId;\n        this.helpDeskToken = params.helpDeskToken;\n        this.appType = get(params, 'appType', AppType.SelfBuild);\n        this.domain = formatDomain(params.domain || Domain.Feishu);\n        this.logger.debug(`use domain url: ${this.domain}`);\n        this.cache = params.cache || internalCache;\n        this.httpInstance = params.httpInstance || defaultHttpInstance;\n        this.tokenManager = new TokenManager({\n            appId: this.appId,\n            appSecret: this.appSecret,\n            cache: this.cache,\n            domain: this.domain,\n            logger: this.logger,\n            appType: this.appType,\n            httpInstance: this.httpInstance,\n        });\n        this.logger.info('client ready');\n    }\n    formatPayload(payload, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const targetOptions = [\n                'lark',\n                'params',\n                'data',\n                'headers',\n                'path',\n            ].reduce((acc, key) => {\n                acc[key] = get(options, key, {});\n                return acc;\n            }, {});\n            const userAccessToken = get(targetOptions.lark, CWithUserAccessToken);\n            if (userAccessToken) {\n                this.logger.debug('use passed token');\n                targetOptions.headers.Authorization = `Bearer ${userAccessToken}`;\n            }\n            else if (!this.disableTokenCache) {\n                const tenantAccessToken = yield this.tokenManager.getTenantAccessToken({\n                    [CTenantKey]: get(targetOptions.lark, CTenantKey),\n                });\n                if (tenantAccessToken) {\n                    targetOptions.headers.Authorization = `Bearer ${tenantAccessToken}`;\n                }\n                else {\n                    this.logger.warn('failed to obtain token');\n                }\n            }\n            // helpDeskCredential\n            const withHelpDeskCredential = get(targetOptions.lark, CWithHelpdeskAuthorization);\n            if (withHelpDeskCredential) {\n                this.logger.debug('generate help desk credential');\n                const helpDeskCredential = string2Base64(`${this.helpDeskId}:${this.helpDeskToken}`);\n                targetOptions.headers['X-Lark-Helpdesk-Authorization'] = `Bearer ${helpDeskCredential}`;\n            }\n            return {\n                params: Object.assign(Object.assign({}, get(payload, 'params', {})), targetOptions.params),\n                headers: Object.assign(Object.assign({}, get(payload, 'headers', {})), targetOptions.headers),\n                data: Object.assign(Object.assign({}, get(payload, 'data', {})), targetOptions.data),\n                path: Object.assign(Object.assign({}, get(payload, 'path', {})), targetOptions.path),\n            };\n        });\n    }\n    request(payload, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, params, headers, url } = payload, rest = __rest(payload, [\"data\", \"params\", \"headers\", \"url\"]);\n            const formatPayload = yield this.formatPayload({\n                data,\n                params,\n                headers,\n            }, options);\n            this.logger.trace(`send request [${payload.method}]: ${payload.url}`);\n            const res = yield this.httpInstance\n                .request(Object.assign(Object.assign({}, rest), {\n                url: /^http/.test(url)\n                    ? url\n                    : `${this.domain}/${formatUrl(url)}`,\n                headers: formatPayload.headers,\n                data: formatPayload.data,\n                params: formatPayload.params,\n            }))\n                .catch((e) => {\n                this.logger.error(e);\n                throw e;\n            });\n            return res;\n        });\n    }\n}\n\nconst withAll = (withList) => withList.reduce((acc, cur) => merge(acc, cur), {});\nconst withTenantKey = (tenantKey) => ({\n    lark: {\n        [CTenantKey]: tenantKey,\n    },\n});\nconst withHelpDeskCredential = () => ({\n    lark: {\n        [CWithHelpdeskAuthorization]: true,\n    },\n});\nconst withTenantToken = (tenantAccessToken) => ({\n    headers: {\n        Authorization: `Bearer ${tenantAccessToken}`,\n    },\n});\nconst withUserAccessToken = (userAccessToken) => ({\n    lark: {\n        [CWithUserAccessToken]: userAccessToken,\n    },\n});\n\nclass RequestHandle {\n    constructor(params) {\n        const { encryptKey, verificationToken, logger } = params;\n        this.verificationToken = verificationToken;\n        this.encryptKey = encryptKey;\n        this.logger = logger;\n        if (encryptKey) {\n            this.aesCipher = new AESCipher(encryptKey);\n        }\n    }\n    parse(data) {\n        const targetData = (() => {\n            var _a;\n            const _b = data || {}, { encrypt } = _b, rest = __rest(_b, [\"encrypt\"]);\n            if (encrypt) {\n                try {\n                    return Object.assign(Object.assign({}, JSON.parse((_a = this.aesCipher) === null || _a === void 0 ? void 0 : _a.decrypt(encrypt))), rest);\n                }\n                catch (e) {\n                    this.logger.error('parse encrypt data failed');\n                    return {};\n                }\n            }\n            return rest;\n        })();\n        // v1和v2版事件的区别：https://open.feishu.cn/document/ukTMukTMukTM/uUTNz4SN1MjL1UzM\n        if ('schema' in targetData) {\n            const { header, event } = targetData, rest = __rest(targetData, [\"header\", \"event\"]);\n            return Object.assign(Object.assign(Object.assign({ [CEventType]: get(targetData, 'header.event_type') }, rest), header), event);\n        }\n        const { event } = targetData, rest = __rest(targetData, [\"event\"]);\n        return Object.assign(Object.assign({ [CEventType]: get(targetData, 'event.type') }, event), rest);\n    }\n    checkIsCardEventValidated(data) {\n        const { 'x-lark-request-timestamp': timestamp, 'x-lark-request-nonce': nonce, 'x-lark-signature': signature, } = data.headers;\n        if (!this.verificationToken) {\n            return true;\n        }\n        const computedSignature = crypto\n            .createHash('sha1')\n            .update(timestamp +\n            nonce +\n            this.verificationToken +\n            JSON.stringify(data))\n            .digest('hex');\n        return computedSignature === signature;\n    }\n    checkIsEventValidated(data) {\n        if (!this.encryptKey) {\n            return true;\n        }\n        const { 'x-lark-request-timestamp': timestamp, 'x-lark-request-nonce': nonce, 'x-lark-signature': signature, } = data.headers;\n        const content = timestamp + nonce + this.encryptKey + JSON.stringify(data);\n        const computedSignature = crypto\n            .createHash('sha256')\n            .update(content)\n            .digest('hex');\n        return computedSignature === signature;\n    }\n}\n\nconst CAppTicketHandle = 'app_ticket';\nclass EventDispatcher {\n    constructor(params) {\n        this.verificationToken = '';\n        this.encryptKey = '';\n        this.handles = new Map();\n        const { encryptKey, verificationToken } = params;\n        this.encryptKey = encryptKey || '';\n        this.verificationToken = verificationToken || '';\n        this.logger = new LoggerProxy(params.loggerLevel || LoggerLevel.info, params.logger || defaultLogger);\n        this.requestHandle = new RequestHandle({\n            encryptKey,\n            verificationToken,\n            logger: this.logger,\n        });\n        this.cache = params.cache || internalCache;\n        this.registerAppTicketHandle();\n        this.logger.info('event-dispatch is ready');\n    }\n    registerAppTicketHandle() {\n        this.register({\n            app_ticket: (data) => __awaiter(this, void 0, void 0, function* () {\n                const { app_ticket, app_id } = data;\n                if (app_ticket) {\n                    yield this.cache.set(CAppTicket, app_ticket, undefined, {\n                        namespace: app_id\n                    });\n                    this.logger.debug('set app ticket');\n                }\n                else {\n                    this.logger.warn('response not include app ticket');\n                }\n            }),\n        });\n    }\n    register(handles) {\n        Object.keys(handles).forEach((key) => {\n            if (this.handles.has(key) && key !== CAppTicketHandle) {\n                this.logger.error(`this ${key} handle is registered`);\n            }\n            this.handles.set(key, handles[key]);\n            this.logger.debug(`register ${key} handle`);\n        });\n        return this;\n    }\n    invoke(data) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!((_a = this.requestHandle) === null || _a === void 0 ? void 0 : _a.checkIsEventValidated(data))) {\n                this.logger.warn('verification failed event');\n                return undefined;\n            }\n            const targetData = (_b = this.requestHandle) === null || _b === void 0 ? void 0 : _b.parse(data);\n            const type = targetData[CEventType];\n            if (this.handles.has(type)) {\n                const ret = yield this.handles.get(type)(targetData);\n                this.logger.debug(`execute ${type} handle`);\n                return ret;\n            }\n            this.logger.warn(`no ${type} handle`);\n            return `no ${type} event handle`;\n        });\n    }\n}\n\nclass CardActionHandler {\n    constructor(params, cardHandler) {\n        this.verificationToken = '';\n        this.encryptKey = '';\n        this.handles = new Map();\n        const { verificationToken, encryptKey } = params;\n        this.encryptKey = encryptKey || '';\n        this.verificationToken = verificationToken || '';\n        this.cardHandler = cardHandler;\n        this.logger = new LoggerProxy(params.loggerLevel || LoggerLevel.info, params.logger || defaultLogger);\n        this.requestHandle = new RequestHandle({\n            encryptKey,\n            verificationToken,\n            logger: this.logger,\n        });\n        this.cache = params.cache || internalCache;\n        this.registerAppTicketHandle();\n        this.logger.info('card-action-handle is ready');\n    }\n    registerAppTicketHandle() {\n        this.register({\n            app_ticket: (data) => __awaiter(this, void 0, void 0, function* () {\n                const { app_ticket, app_id } = data;\n                if (app_ticket) {\n                    yield this.cache.set(CAppTicket, app_ticket, undefined, {\n                        namespace: app_id\n                    });\n                    this.logger.debug('set app ticket');\n                }\n                else {\n                    this.logger.warn('response not include app ticket');\n                }\n            }),\n        });\n    }\n    register(handles) {\n        Object.keys(handles).forEach((key) => {\n            this.handles.set(key, handles[key]);\n            this.logger.debug(`register ${key} handle`);\n        });\n        return this;\n    }\n    invoke(data) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!((_a = this.requestHandle) === null || _a === void 0 ? void 0 : _a.checkIsCardEventValidated(data))) {\n                this.logger.warn('verification failed event');\n                return undefined;\n            }\n            const targetData = (_b = this.requestHandle) === null || _b === void 0 ? void 0 : _b.parse(data);\n            const type = targetData[CEventType];\n            if (this.handles.has(type)) {\n                try {\n                    const ret = yield this.handles.get(type)(targetData);\n                    return ret;\n                }\n                catch (e) {\n                    this.logger.error(e);\n                    return undefined;\n                }\n            }\n            try {\n                const result = yield this.cardHandler(targetData);\n                this.logger.debug('execute card handle');\n                return result;\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n            return undefined;\n        });\n    }\n}\n\nconst pickRequestData = (req) => new Promise((resolve) => {\n    let chunks = '';\n    req.on('data', (chunk) => {\n        chunks += chunk;\n    });\n    req.on('end', () => {\n        try {\n            const data = JSON.parse(chunks);\n            resolve(data);\n        }\n        catch (e) {\n            resolve('');\n        }\n    });\n});\n\nconst generateChallenge = (data, options) => {\n    if ('encrypt' in data && !options.encryptKey) {\n        throw new Error('auto-challenge need encryptKey, please check for missing in dispatcher');\n    }\n    const targetData = 'encrypt' in data\n        ? JSON.parse(new AESCipher(options.encryptKey).decrypt(data.encrypt))\n        : data;\n    return {\n        isChallenge: targetData.type === 'url_verification',\n        challenge: {\n            challenge: targetData.challenge,\n        },\n    };\n};\n\nconst adaptDefault = (path, dispatcher, options) => (req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    if (req.url !== path) {\n        return;\n    }\n    const data = Object.assign(Object.create({\n        headers: req.headers,\n    }), yield pickRequestData(req));\n    // 是否自动响应challange事件：\n    // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n    const autoChallenge = get(options, 'autoChallenge', false);\n    if (autoChallenge) {\n        const { isChallenge, challenge } = generateChallenge(data, {\n            encryptKey: dispatcher.encryptKey,\n        });\n        if (isChallenge) {\n            res.end(JSON.stringify(challenge));\n            return;\n        }\n    }\n    const value = yield dispatcher.invoke(data);\n    // event don't need response\n    if (dispatcher instanceof CardActionHandler) {\n        res.end(JSON.stringify(value));\n    }\n    res.end('');\n});\n\nconst adaptExpress = (dispatcher, options) => (req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    const reqData = yield (() => __awaiter(void 0, void 0, void 0, function* () {\n        if (req.body) {\n            return req.body;\n        }\n        if (!req.complete) {\n            const incomingdata = yield pickRequestData(req);\n            return incomingdata;\n        }\n        get(options, 'logger', defaultLogger).error('unable to obtain request body, if parsed it in other middleware, please manually set in ctx.request.body');\n        return null;\n    }))();\n    const data = Object.assign(Object.create({\n        headers: req.headers,\n    }), reqData);\n    // 是否自动响应challange事件：\n    // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n    const autoChallenge = get(options, 'autoChallenge', false);\n    if (autoChallenge) {\n        const { isChallenge, challenge } = generateChallenge(data, {\n            encryptKey: dispatcher.encryptKey,\n        });\n        if (isChallenge) {\n            res.json(challenge);\n            return;\n        }\n    }\n    const value = yield dispatcher.invoke(data);\n    // event don't need response\n    if (dispatcher instanceof CardActionHandler) {\n        res.json(value);\n    }\n    res.end('');\n});\n\nconst adaptKoa = (path, dispatcher, options) => (ctx, next) => __awaiter(void 0, void 0, void 0, function* () {\n    const { originalUrl, req, request } = ctx;\n    if (originalUrl === path) {\n        const reqData = yield (() => __awaiter(void 0, void 0, void 0, function* () {\n            if (request.body) {\n                return request.body;\n            }\n            if (!req.complete) {\n                const incomingdata = yield pickRequestData(req);\n                return incomingdata;\n            }\n            get(options, 'logger', defaultLogger).error('unable to obtain request body, if parsed it in other middleware, please manually set in ctx.request.body');\n            return null;\n        }))();\n        const data = Object.assign(Object.create({\n            headers: req.headers,\n        }), reqData);\n        // 是否自动响应challange事件：\n        // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n        const autoChallenge = get(options, 'autoChallenge', false);\n        if (autoChallenge) {\n            const { isChallenge, challenge } = generateChallenge(data, {\n                encryptKey: dispatcher.encryptKey,\n            });\n            if (isChallenge) {\n                ctx.body = challenge;\n                yield next();\n                return;\n            }\n        }\n        const value = yield dispatcher.invoke(data);\n        // event don't need response\n        if (dispatcher instanceof CardActionHandler) {\n            ctx.body = JSON.stringify(value);\n        }\n        else {\n            ctx.body = '';\n        }\n    }\n    yield next();\n});\n\nconst adaptKoaRouter = (dispatcher, options) => (ctx, next) => __awaiter(void 0, void 0, void 0, function* () {\n    const { req, request } = ctx;\n    const reqData = yield (() => __awaiter(void 0, void 0, void 0, function* () {\n        if (request.body) {\n            return request.body;\n        }\n        if (!req.complete) {\n            const incomingdata = yield pickRequestData(req);\n            return incomingdata;\n        }\n        get(options, 'logger', defaultLogger).error('unable to obtain request body, if parsed it in other middleware, please manually set in ctx.request.body');\n        return null;\n    }))();\n    const data = Object.assign(Object.create({\n        headers: req.headers,\n    }), reqData);\n    // 是否自动响应challange事件：\n    // https://open.feishu.cn/document/ukTMukTMukTM/uYDNxYjL2QTM24iN0EjN/event-subscription-configure-/request-url-configuration-case\n    const autoChallenge = get(options, 'autoChallenge', false);\n    if (autoChallenge) {\n        const { isChallenge, challenge } = generateChallenge(data, {\n            encryptKey: dispatcher.encryptKey,\n        });\n        if (isChallenge) {\n            ctx.body = challenge;\n            yield next();\n            return;\n        }\n    }\n    const value = yield dispatcher.invoke(data);\n    // event don't need response\n    if (dispatcher instanceof CardActionHandler) {\n        ctx.body = JSON.stringify(value);\n    }\n    else {\n        ctx.body = '';\n    }\n    yield next();\n});\n\nconst defaultCard = (variables) => {\n    const { title, content } = variables;\n    return JSON.stringify({\n        \"config\": {\n            \"wide_screen_mode\": true\n        },\n        \"elements\": [\n            {\n                \"tag\": \"markdown\",\n                \"content\": content\n            }\n        ],\n        \"header\": {\n            \"template\": \"blue\",\n            \"title\": {\n                \"content\": title,\n                \"tag\": \"plain_text\"\n            }\n        }\n    });\n};\n\nvar messageCard = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultCard: defaultCard\n});\n\nexport { AESCipher, AppType, CAppTicket, CTenantAccessToken, CardActionHandler, Client, Domain, EventDispatcher, LoggerLevel, adaptDefault, adaptExpress, adaptKoa, adaptKoaRouter, defaultHttpInstance, generateChallenge, messageCard, withAll, withHelpDeskCredential, withTenantKey, withTenantToken, withUserAccessToken };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,YAAY;AAC5B,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,cAAc;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAClB,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAC/ED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACf,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAC/D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IACpE,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAC1ER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACzB;EACJ,OAAOR,CAAC;AACZ;AAEA,SAASW,SAASA,CAACC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EAClD,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOlB,CAAC,EAAE;QAAEqB,MAAM,CAACrB,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASyB,QAAQA,CAACP,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOlB,CAAC,EAAE;QAAEqB,MAAM,CAACrB,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASuB,IAAIA,CAACG,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGR,OAAO,CAACO,MAAM,CAACR,KAAK,CAAC,GAAGD,KAAK,CAACS,MAAM,CAACR,KAAK,CAAC,CAACU,IAAI,CAACN,SAAS,EAAEG,QAAQ,CAAC;IAAE;IAC7GF,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN;AAEA,SAASM,OAAOA,CAACC,CAAC,EAAE;EAChB,OAAO,IAAI,YAAYD,OAAO,IAAI,IAAI,CAACC,CAAC,GAAGA,CAAC,EAAE,IAAI,IAAI,IAAID,OAAO,CAACC,CAAC,CAAC;AACxE;AAEA,SAASC,gBAAgBA,CAACnB,OAAO,EAAEC,UAAU,EAAEE,SAAS,EAAE;EACtD,IAAI,CAACiB,MAAM,CAACC,aAAa,EAAE,MAAM,IAAIC,SAAS,CAAC,sCAAsC,CAAC;EACtF,IAAIC,CAAC,GAAGpB,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC;IAAEL,CAAC;IAAE4B,CAAC,GAAG,EAAE;EAC7D,OAAO5B,CAAC,GAAG,CAAC,CAAC,EAAE6B,IAAI,CAAC,MAAM,CAAC,EAAEA,IAAI,CAAC,OAAO,CAAC,EAAEA,IAAI,CAAC,QAAQ,CAAC,EAAE7B,CAAC,CAACwB,MAAM,CAACC,aAAa,CAAC,GAAG,YAAY;IAAE,OAAO,IAAI;EAAE,CAAC,EAAEzB,CAAC;EACrH,SAAS6B,IAAIA,CAACC,CAAC,EAAE;IAAE,IAAIH,CAAC,CAACG,CAAC,CAAC,EAAE9B,CAAC,CAAC8B,CAAC,CAAC,GAAG,UAAUR,CAAC,EAAE;MAAE,OAAO,IAAIX,OAAO,CAAC,UAAUoB,CAAC,EAAEC,CAAC,EAAE;QAAEJ,CAAC,CAACK,IAAI,CAAC,CAACH,CAAC,EAAER,CAAC,EAAES,CAAC,EAAEC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIE,MAAM,CAACJ,CAAC,EAAER,CAAC,CAAC;MAAE,CAAC,CAAC;IAAE,CAAC;EAAE;EACzI,SAASY,MAAMA,CAACJ,CAAC,EAAER,CAAC,EAAE;IAAE,IAAI;MAAER,IAAI,CAACa,CAAC,CAACG,CAAC,CAAC,CAACR,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC,OAAO/B,CAAC,EAAE;MAAE4C,MAAM,CAACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAErC,CAAC,CAAC;IAAE;EAAE;EACjF,SAASuB,IAAIA,CAACsB,CAAC,EAAE;IAAEA,CAAC,CAAC3B,KAAK,YAAYY,OAAO,GAAGV,OAAO,CAACD,OAAO,CAAC0B,CAAC,CAAC3B,KAAK,CAACa,CAAC,CAAC,CAACH,IAAI,CAACkB,OAAO,EAAEzB,MAAM,CAAC,GAAGuB,MAAM,CAACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEQ,CAAC,CAAC;EAAE;EACvH,SAASC,OAAOA,CAAC5B,KAAK,EAAE;IAAEyB,MAAM,CAAC,MAAM,EAAEzB,KAAK,CAAC;EAAE;EACjD,SAASG,MAAMA,CAACH,KAAK,EAAE;IAAEyB,MAAM,CAAC,OAAO,EAAEzB,KAAK,CAAC;EAAE;EACjD,SAAS0B,MAAMA,CAACG,CAAC,EAAEhB,CAAC,EAAE;IAAE,IAAIgB,CAAC,CAAChB,CAAC,CAAC,EAAEM,CAAC,CAACW,KAAK,CAAC,CAAC,EAAEX,CAAC,CAAC3B,MAAM,EAAEiC,MAAM,CAACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE;AACrF;AAEA,MAAMY,mBAAmB,GAAG3D,KAAK,CAAC4D,MAAM,CAAC,CAAC;AAC1CD,mBAAmB,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAClD,IAAIA,GAAG,CAACC,OAAO,EAAE;IACbD,GAAG,CAACC,OAAO,CAAC,YAAY,CAAC,GAAG,qBAAqB;EACrD;EACA,OAAOD,GAAG;AACd,CAAC,EAAEE,SAAS,EAAE;EAAEC,WAAW,EAAE;AAAK,CAAC,CAAC;AACpCR,mBAAmB,CAACE,YAAY,CAACO,QAAQ,CAACL,GAAG,CAAEM,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;AAElE,IAAIC,OAAO;AACX,CAAC,UAAUA,OAAO,EAAE;EAChBA,OAAO,CAACA,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EAC/CA,OAAO,CAACA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AACvC,CAAC,EAAEA,OAAO,KAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7B,IAAIC,MAAM;AACV,CAAC,UAAUA,MAAM,EAAE;EACfA,MAAM,CAACA,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EACvCA,MAAM,CAACA,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AACvC,CAAC,EAAEA,MAAM,KAAKA,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3B,IAAIC,WAAW;AACf,CAAC,UAAUA,WAAW,EAAE;EACpBA,WAAW,CAACA,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EAC/CA,WAAW,CAACA,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EAC/CA,WAAW,CAACA,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC7CA,WAAW,CAACA,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC7CA,WAAW,CAACA,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EAC/CA,WAAW,CAACA,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AACnD,CAAC,EAAEA,WAAW,KAAKA,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AAErC,MAAMC,UAAU,GAAG/B,MAAM,CAAC,YAAY,CAAC;AACvC,MAAMgC,UAAU,GAAGhC,MAAM,CAAC,YAAY,CAAC;AACvC,MAAMiC,UAAU,GAAGjC,MAAM,CAAC,YAAY,CAAC;AACvC,MAAMkC,kBAAkB,GAAGlC,MAAM,CAAC,qBAAqB,CAAC;AACxD,MAAMmC,0BAA0B,GAAGnC,MAAM,CAAC,6BAA6B,CAAC;AACxE,MAAMoC,oBAAoB,GAAGpC,MAAM,CAAC,wBAAwB,CAAC;AAE7D,MAAMqC,aAAa,GAAIC,OAAO,IAAKC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,QAAQ,CAAC;AAE1E,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B;EACA;EACAC,WAAWA,CAACC,GAAG,EAAEC,SAAS,EAAE;IACxB,IAAIA,SAAS,EAAE;MACX,OAAQ,GAAEA,SAAU,IAAGD,GAAG,CAACN,QAAQ,CAAC,CAAE,EAAC;IAC3C;IACA,OAAOM,GAAG;EACd;EACA3F,GAAGA,CAAC2F,GAAG,EAAEE,OAAO,EAAE;IACd,OAAOtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMuE,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACC,GAAG,EAAE3F,GAAG,CAAC6F,OAAO,EAAE,WAAW,CAAC,CAAC;MACjE,MAAMtB,IAAI,GAAG,IAAI,CAACiB,MAAM,CAACxF,GAAG,CAAC8F,QAAQ,CAAC;MACtC,IAAIvB,IAAI,EAAE;QACN,MAAM;UAAE1C,KAAK;UAAEkE;QAAY,CAAC,GAAGxB,IAAI;QACnC,IAAI,CAACwB,WAAW,IAAIA,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE;UACxD,OAAOpE,KAAK;QAChB;MACJ;MACA,OAAOsC,SAAS;IACpB,CAAC,CAAC;EACN;EACA+B,GAAGA,CAACP,GAAG,EAAE9D,KAAK,EAAEkE,WAAW,EAAEF,OAAO,EAAE;IAClC,OAAOtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAMuE,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACC,GAAG,EAAE3F,GAAG,CAAC6F,OAAO,EAAE,WAAW,CAAC,CAAC;MACjE,IAAI,CAACL,MAAM,CAACU,GAAG,CAACJ,QAAQ,EAAE;QACtBjE,KAAK;QACLkE;MACJ,CAAC,CAAC;MACF,OAAO,IAAI;IACf,CAAC,CAAC;EACN;AACJ;AACA,MAAMI,aAAa,GAAG,IAAIb,YAAY,CAAC,CAAC;AAExC,MAAMc,SAAS,CAAC;EACZb,WAAWA,CAACI,GAAG,EAAE;IACb,MAAMU,IAAI,GAAGlG,MAAM,CAACmG,UAAU,CAAC,QAAQ,CAAC;IACxCD,IAAI,CAACE,MAAM,CAACZ,GAAG,CAAC;IAChB,IAAI,CAACA,GAAG,GAAGU,IAAI,CAACG,MAAM,CAAC,CAAC;EAC5B;EACAC,OAAOA,CAACC,OAAO,EAAE;IACb,MAAMC,aAAa,GAAGxB,MAAM,CAACC,IAAI,CAACsB,OAAO,EAAE,QAAQ,CAAC;IACpD,MAAME,QAAQ,GAAGzG,MAAM,CAAC0G,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAClB,GAAG,EAAEgB,aAAa,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7F,IAAIC,SAAS,GAAGH,QAAQ,CAACL,MAAM,CAACI,aAAa,CAACG,KAAK,CAAC,EAAE,CAAC,CAACzB,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;IACvF0B,SAAS,IAAIH,QAAQ,CAACI,KAAK,CAAC,MAAM,CAAC;IACnC,OAAOD,SAAS;EACpB;AACJ;AAEA,MAAME,YAAY,GAAIC,MAAM,IAAK;EAC7B,QAAQA,MAAM;IACV,KAAKzC,MAAM,CAAC0C,MAAM;MACd,OAAO,wBAAwB;IACnC,KAAK1C,MAAM,CAAC2C,IAAI;MACZ,OAAO,4BAA4B;IACvC;MACI,OAAOF,MAAM;EACrB;AACJ,CAAC;AAED,MAAMG,WAAW,GAAG,SAAAA,CAACC,OAAO;EAAA,IAAEC,cAAc,GAAAC,SAAA,CAAAnG,MAAA,QAAAmG,SAAA,QAAArD,SAAA,GAAAqD,SAAA,MAAG,CAAC,CAAC;EAAA,OAAKF,OAAO,CAACG,OAAO,CAAC,WAAW,EAAE,CAACC,CAAC,EAAEC,EAAE,KAAK;IAC1F,IAAIJ,cAAc,CAACI,EAAE,CAAC,KAAKxD,SAAS,EAAE;MAClC,OAAOoD,cAAc,CAACI,EAAE,CAAC;IAC7B;IACA,MAAM,IAAIC,KAAK,CAAE,gBAAeD,EAAG,gBAAe,CAAC;EACvD,CAAC,CAAC;AAAA;AAEF,MAAME,MAAM,GAAGA,CAACC,WAAW,EAAEC,QAAQ,KAAKxG,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;EACrF,MAAMyG,QAAQ,GAAG,OAAOF,WAAW,KAAK,UAAU,GAAGA,WAAW,CAAC,CAAC,GAAGA,WAAW;EAChF,IAAIE,QAAQ,EAAE;IACV,MAAMD,QAAQ,CAAC,CAAC;EACpB;AACJ,CAAC,CAAC;AAEF,MAAME,SAAS,GAAIC,GAAG,IAAMA,GAAG,GAAGA,GAAG,CAACT,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,EAAG;AAE9D,MAAMU,YAAY,GAAIxH,CAAC,IAAK;EACxB,IAAIA,CAAC,YAAYT,UAAU,EAAE;IACzB,MAAM;MAAEkI,OAAO;MAAE/D,QAAQ;MAAEN,OAAO;MAAEsE;IAAO,CAAC,GAAG9H,IAAI,CAACI,CAAC,EAAE,CACnD,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,CACX,CAAC;IACF,MAAM2H,iBAAiB,GAAG;MACtBF,OAAO;MACPC,MAAM,EAAE9H,IAAI,CAAC8H,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;MACzDtE,OAAO,EAAExD,IAAI,CAACwD,OAAO,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;MAC9DM,QAAQ,EAAE9D,IAAI,CAAC8D,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,CAAC;IAC7D,CAAC;IACD,MAAMkE,MAAM,GAAG,CAACD,iBAAiB,CAAC;IAClC,MAAME,aAAa,GAAGxI,GAAG,CAACW,CAAC,EAAE,eAAe,CAAC;IAC7C,IAAI6H,aAAa,EAAE;MACfD,MAAM,CAAClF,IAAI,CAACmF,aAAa,CAAC;IAC9B;IACA,OAAOD,MAAM;EACjB;EACA,OAAO,CAAC5H,CAAC,CAAC;AACd,CAAC;;AAED;AACA,MAAM8H,QAAQ,CAAC;EACXlD,WAAWA,CAAA,EAAG;IACV;AACR;AACA;IACQ,IAAI,CAACmD,GAAG,GAAG;MACP;AACZ;AACA;MACYC,uBAAuB,EAAE;QACrB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3I,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iEAAgE,EAAE4B,IAAI,CAAC;YACvGI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYI,YAAY,EAAE;QACVC,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;cACxEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkK,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBD,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmK,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB9K,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBlD,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+B,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/K,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yBAAwB,EAAE4B,IAAI,CAAC;cAC/DI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yBAAwB,EAAE4B,IAAI,CAAC;YAC/DI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACsK,KAAK,GAAG;MACT;AACZ;AACA;MACYC,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBN,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwK,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBP,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyK,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvH,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;YAClEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;cAClEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;YAClEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0K,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxH,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;cACnFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4K,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1H,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwC,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,KAAK,EAAEA,CAAC7C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC+K,WAAW,GAAG;MACf;AACZ;AACA;MACYC,gBAAgB,EAAE;QACd7B,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;cACrFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiL,mBAAmB,EAAE;QACjB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,QAAQ,EAAEA,CAACjD,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mEAAkE,EAAE4B,IAAI,CAAC;YACzGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmL,qBAAqB,EAAE;QACnB;AAChB;AACA;AACA;AACA;AACA;AACA;QACgBC,oBAAoB,EAAEA,CAACnD,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gGAA+F,EAAE4B,IAAI,CAAC;YACtII,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yEAAwE,EAAE4B,IAAI,CAAC;YAC/GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;cACnGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yEAAwE,EAAE4B,IAAI,CAAC;YAC/GI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+K,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;QACgBM,0BAA0B,EAAEA,CAACpD,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3F,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFsL,0BAA0B,EAAEA,CAACrD,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3F,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;cAC7FI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiC,cAAc,EAAEA,CAACtD,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwL,mBAAmB,EAAE;QACjB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvB,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyL,qBAAqB,EAAE;QACnB;AAChB;AACA;AACA;AACA;QACgBC,mBAAmB,EAAEA,CAACzD,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kFAAiF,EAAE4B,IAAI,CAAC;YACxHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC2L,QAAQ,GAAG;MACZ;AACZ;AACA;MACYA,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzI,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4L,SAAS,EAAEA,CAAC3D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6L,WAAW,EAAEA,CAAC5D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8L,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB5I,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+L,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,KAAK,EAAEA,CAAC/D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiM,YAAY,EAAE;QACV9C,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;cAC7EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkM,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;QACgBC,OAAO,EAAEA,CAAClE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoM,MAAM,EAAEA,CAACnE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqM,EAAE,EAAEA,CAACpE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;cACxEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBsM,OAAO,EAAEA,CAACrE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuM,iBAAiB,EAAEA,CAACtE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAClF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;cAC9EI,MAAM,EAAE,MAAM;cACdhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByM,QAAQ,EAAEA,CAACxE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0M,iBAAiB,EAAEA,CAACzE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAClF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2M,eAAe,EAAE;QACb;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzJ,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oEAAmE,EAAE4B,IAAI,CAAC;YAC1GI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;cAC9FI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4M,MAAM,EAAEA,CAAC3E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6M,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,OAAO,EAAEA,CAAC7E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuM,iBAAiB,EAAEA,CAACtE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAClF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;cAC1EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqB,MAAM,EAAEA,CAAC4G,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB+M,QAAQ,EAAEA,CAAC9E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgN,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiN,QAAQ,EAAEA,CAAChF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACkN,UAAU,GAAG;MACd;AACZ;AACA;MACYC,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,OAAO,EAAEA,CAACnF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqN,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,QAAQ,EAAEA,CAACrF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByE,MAAM,EAAEA,CAACtF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmF,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtK,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;cACvEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgN,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgD,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBE,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;cACvEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyN,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvK,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0N,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4N,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBD,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6N,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,MAAM,EAAEA,CAAC7F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+N,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvB,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgO,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxB,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiO,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzB,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkO,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1B,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmO,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjL,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoO,uBAAuB,EAAEA,CAACnG,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACqO,IAAI,GAAG;MACR;AACZ;AACA;MACYC,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;QACgBpL,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBuO,QAAQ,EAAEA,CAACtG,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwO,SAAS,EAAE;QACP;AAChB;AACA;AACA;AACA;QACgBC,MAAM,EAAEA,CAACxG,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0O,iBAAiB,EAAE;QACf;AAChB;AACA;AACA;AACA;QACgBxL,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBuO,QAAQ,EAAEA,CAACtG,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC2O,MAAM,GAAG;MACV;AACZ;AACA;MACYC,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;QACgB1L,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6O,kBAAkB,EAAE;QAChB;AAChB;AACA;AACA;AACA;QACgB3L,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8O,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;QACgBzP,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gCAA+B,EAAE4B,IAAI,CAAC;YACtEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC+O,eAAe,GAAG,CAAC,CAAC;IACzB;AACR;AACA;IACQ,IAAI,CAACC,KAAK,GAAG;MACT;AACZ;AACA;MACYC,cAAc,EAAE;QACZ9F,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;cAC3EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkP,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhM,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;YAClEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmP,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjM,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoP,OAAO,EAAEA,CAACnH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqP,SAAS,EAAEA,CAACpH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;cACpEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsP,KAAK,EAAEA,CAACrH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuP,kBAAkB,EAAEA,CAACtH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;cAC3EI,MAAM,EAAE,MAAM;cACdhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0D,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqN,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,QAAQ,EAAEA,CAACrF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByE,MAAM,EAAEA,CAACtF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACmH,OAAO,GAAG;MACX;AACZ;AACA;MACYC,GAAG,EAAE;QACD;AAChB;AACA;AACA;AACA;QACgBC,IAAI,EAAEA,CAACzH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;YAClEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2P,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBD,IAAI,EAAEA,CAACzH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iEAAgE,EAAE4B,IAAI,CAAC;YACvGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;cACxFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4P,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1M,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;cACnFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6P,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBlC,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yEAAwE,EAAE4B,IAAI,CAAC;YAC/GI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;cACpGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+P,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBpC,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;cACpFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgQ,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB9M,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yEAAwE,EAAE4B,IAAI,CAAC;YAC/GI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;cACrGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yEAAwE,EAAE4B,IAAI,CAAC;YAC/GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiQ,iBAAiB,EAAE;QACf9G,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;cACpHI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wFAAuF,EAAE4B,IAAI,CAAC;YAC9HI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkQ,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7Q,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmQ,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxC,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoQ,WAAW,EAAEA,CAACnI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;cACtGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqQ,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnN,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;cACpGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACsQ,KAAK,GAAG;MACT;AACZ;AACA;MACYnB,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjM,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyH,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvE,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACuQ,QAAQ,GAAG;MACZ;AACZ;AACA;MACYC,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtN,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;cAC1FI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByQ,YAAY,EAAEA,CAACxI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iEAAgE,EAAE4B,IAAI,CAAC;YACvGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0Q,cAAc,EAAEA,CAACzI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mEAAkE,EAAE4B,IAAI,CAAC;YACzGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYuQ,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrN,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2Q,OAAO,EAAEA,CAAC1I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuP,kBAAkB,EAAEA,CAACtH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;cAC/EI,MAAM,EAAE,MAAM;cACdhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0D,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4L,SAAS,EAAEA,CAAC3D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByQ,YAAY,EAAEA,CAACxI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6L,WAAW,EAAEA,CAAC5D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0Q,cAAc,EAAEA,CAACzI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4Q,qBAAqB,EAAE;QACnB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBd,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uFAAsF,EAAE4B,IAAI,CAAC;YAC7HI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0EAAyE,EAAE4B,IAAI,CAAC;YAChHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0EAAyE,EAAE4B,IAAI,CAAC;cAChHI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0EAAyE,EAAE4B,IAAI,CAAC;YAChHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6Q,+BAA+B,EAAE;QAC7B1H,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;cAC1II,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8Q,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB5N,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuP,kBAAkB,EAAEA,CAACtH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;cACnGI,MAAM,EAAE,MAAM;cACdhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0D,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByQ,YAAY,EAAEA,CAACxI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mEAAkE,EAAE4B,IAAI,CAAC;YACzGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0Q,cAAc,EAAEA,CAACzI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qEAAoE,EAAE4B,IAAI,CAAC;YAC3GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+Q,eAAe,EAAE;QACb;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7N,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgR,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/G,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiR,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,kBAAkB,EAAEA,CAACjJ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmR,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjO,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACoR,WAAW,GAAG,CAAC,CAAC;IACrB;AACR;AACA;IACQ,IAAI,CAACC,OAAO,GAAG;MACX;AACZ;AACA;MACYC,UAAU,EAAE;QACRnI,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;cAC1EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYuR,UAAU,EAAE;QACRC,oBAAoB,EAAEA,CAACvJ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;cACjGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBmI,QAAQ,EAAEA,CAACxJ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;cACzEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF0R,kBAAkB,EAAEA,CAACzJ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;cAChFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqI,MAAM,EAAEA,CAAC1J,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuP,kBAAkB,EAAEA,CAACtH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;cAChFI,MAAM,EAAE,MAAM;cACdhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0D,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4R,oBAAoB,EAAEA,CAAC3J,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6R,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3O,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;cACjFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8R,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;QACgB5O,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+R,oBAAoB,EAAE;QAClB;AAChB;AACA;AACA;AACA;QACgBpE,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oEAAmE,EAAE4B,IAAI,CAAC;YAC1GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;cAC/FI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBgS,MAAM,EAAEA,CAAC/J,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwN,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtK,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiS,YAAY,EAAEA,CAAChK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFkS,sBAAsB,EAAEA,CAACjK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;cAC9EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6I,UAAU,EAAEA,CAAClK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYoS,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,GAAG,EAAEA,CAACpK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsS,QAAQ,EAAEA,CAACrK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBuS,WAAW,EAAEA,CAACtK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4M,MAAM,EAAEA,CAAC3E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBmS,UAAU,EAAEA,CAAClK,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwS,SAAS,EAAE;QACP;AAChB;AACA;AACA;AACA;QACgBtP,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;cAC1EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyS,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;QACgBvP,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;cACxEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0S,KAAK,EAAE;QACHvJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;cACpEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2S,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,cAAc,EAAEA,CAAC3K,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;YAClEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4BAA2B,EAAE4B,IAAI,CAAC;YAClEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6S,cAAc,EAAEA,CAAC5K,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8S,gBAAgB,EAAEA,CAAC7K,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYoK,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2I,UAAU,EAAEA,CAAC9K,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFgT,4BAA4B,EAAEA,CAAC/K,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7F,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;cACtFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2J,gBAAgB,EAAEA,CAAChL,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;cACnEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkT,SAAS,EAAEA,CAACjL,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACmT,aAAa,GAAG,CAAC,CAAC;IACvB;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAG;MACV;AACZ;AACA;MACYC,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,mBAAmB,EAAEA,CAACtL,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACwT,SAAS,GAAG,CAAC,CAAC;IACnB;AACR;AACA;IACQ,IAAI,CAACC,IAAI,GAAG;MACR;AACZ;AACA;MACYC,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtD,WAAW,EAAEA,CAACnI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;cACxFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2T,qBAAqB,EAAE;QACnB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7D,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kFAAiF,EAAE4B,IAAI,CAAC;YACxHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qEAAoE,EAAE4B,IAAI,CAAC;YAC3GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF4T,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qEAAoE,EAAE4B,IAAI,CAAC;cAC3GI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qEAAoE,EAAE4B,IAAI,CAAC;YAC3GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6T,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3Q,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8T,UAAU,EAAEA,CAAC7L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC+T,KAAK,GAAG;MACT;AACZ;AACA;MACYC,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB9Q,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsN,QAAQ,EAAEA,CAACrF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzJ,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiU,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,UAAU,EAAEA,CAACjM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;cACtFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmU,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxJ,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqN,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqC,IAAI,EAAEA,CAACzH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoU,YAAY,EAAEA,CAACnM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBqU,cAAc,EAAEA,CAACpM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsN,QAAQ,EAAEA,CAACrF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACFK,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;cACjEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsU,IAAI,EAAEA,CAACrM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4L,SAAS,EAAEA,CAAC3D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBuU,SAAS,EAAEA,CAACtM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwU,SAAS,EAAEA,CAACvM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoM,YAAY,EAAEA,CAACxM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0U,UAAU,EAAEA,CAACzM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsM,aAAa,EAAEA,CAAC1M,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4U,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvV,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6U,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3R,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8U,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB5R,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF4T,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;cAClGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;cACtFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+U,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7R,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgV,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,sBAAsB,EAAEA,CAAChN,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsN,QAAQ,EAAEA,CAACrF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0L,SAAS,EAAEA,CAACvM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoM,YAAY,EAAEA,CAACxM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0U,UAAU,EAAEA,CAACzM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsM,aAAa,EAAEA,CAAC1M,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkV,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhB,UAAU,EAAEA,CAACjM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmV,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;QACgB9G,IAAI,EAAEA,CAACpG,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBoV,aAAa,EAAEA,CAACnN,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqV,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhW,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYsV,wBAAwB,EAAE;QACtB;AAChB;AACA;AACA;AACA;QACgBpS,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACuV,GAAG,GAAG,CAAC,CAAC;IACb;AACR;AACA;IACQ,IAAI,CAACC,GAAG,GAAG;MACP;AACZ;AACA;MACYC,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBpW,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4M,QAAQ,EAAE;QACNvM,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;cACnEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC2V,SAAS,GAAG,CAAC,CAAC;IACnB;AACR;AACA;IACQ,IAAI,CAACC,KAAK,GAAG;MACT;AACZ;AACA;MACYC,UAAU,EAAE;QACR1M,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;cACvEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC8V,IAAI,GAAG,CAAC,CAAC;IACd;AACR;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB;AACR;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG;MACrB;AACZ;AACA;MACYC,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;QACgBhT,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;cAC7EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACmW,QAAQ,GAAG;MACZ;AACZ;AACA;MACYC,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,UAAU,EAAEA,CAACpO,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYsW,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3L,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYuW,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrT,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwW,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtT,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyW,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxM,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0W,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxT,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gCAA+B,EAAE4B,IAAI,CAAC;YACtEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2W,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzT,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4V,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhK,SAAS,EAAEA,CAAC3D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6L,WAAW,EAAEA,CAAC5D,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4W,GAAG,EAAE;QACD;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1T,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6W,QAAQ,EAAEA,CAAC5O,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzJ,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;cACnEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuP,kBAAkB,EAAEA,CAACtH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;cAC1EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0D,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8W,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,aAAa,EAAEA,CAAC9O,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgX,UAAU,EAAEA,CAAC/O,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mEAAkE,EAAE4B,IAAI,CAAC;YACzGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiX,WAAW,EAAEA,CAAChP,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oEAAmE,EAAE4B,IAAI,CAAC;YAC1GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsM,OAAO,EAAEA,CAACrE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkX,aAAa,EAAEA,CAACjP,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmX,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,eAAe,EAAEA,CAACnP,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqX,gBAAgB,EAAEA,CAACpP,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gCAA+B,EAAE4B,IAAI,CAAC;YACtEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsX,YAAY,EAAEA,CAACrP,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBuX,WAAW,EAAEA,CAACtP,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBlD,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwX,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtU,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyX,qBAAqB,EAAE;QACnB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvU,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;cACvFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC0X,IAAI,GAAG;MACR;AACZ;AACA;MACY3M,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7H,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2X,KAAK,EAAEA,CAAC1P,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4X,SAAS,EAAEA,CAAC3P,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6X,eAAe,EAAEA,CAAC5P,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kEAAiE,EAAE4B,IAAI,CAAC;YACxGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8X,oBAAoB,EAAE;QAClB;AAChB;AACA;AACA;AACA;QACgB7N,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyV,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBpW,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsM,OAAO,EAAEA,CAACrE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+X,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1N,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0V,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrW,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgY,gBAAgB,EAAEA,CAAC/P,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiY,UAAU,EAAE;QACR9O,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gCAA+B,EAAE4B,IAAI,CAAC;cACtEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gCAA+B,EAAE4B,IAAI,CAAC;YACtEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkY,mBAAmB,EAAE;QACjB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhV,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmY,uBAAuB,EAAE;QACrB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjV,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYoY,iBAAiB,EAAE;QACf;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBlV,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqY,2BAA2B,EAAE;QACzB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnV,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYsY,GAAG,EAAE;QACD;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,cAAc,EAAEA,CAACtQ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwY,cAAc,EAAEA,CAACvQ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0H,MAAM,EAAEA,CAACO,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wCAAuC,EAAE4B,IAAI,CAAC;YAC9EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByY,YAAY,EAAEA,CAACxQ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0Y,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrZ,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2Y,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1O,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4Y,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1V,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0BAAyB,EAAE4B,IAAI,CAAC;YAChEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0BAAyB,EAAE4B,IAAI,CAAC;YAChEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2X,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzU,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6Y,iBAAiB,EAAEA,CAAC5Q,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAClF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB8Y,WAAW,EAAEA,CAAC7Q,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY+Y,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;QACgB1Z,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgZ,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/O,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiZ,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjB,gBAAgB,EAAEA,CAAC/P,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkZ,YAAY,EAAE;QACV/P,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;cACzEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmZ,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,WAAW,EAAEA,CAACnR,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB+S,UAAU,EAAEA,CAAC9K,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqZ,YAAY,EAAE;QACVlQ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;cACzEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACsZ,oBAAoB,GAAG;MACxB;AACZ;AACA;MACY7Z,QAAQ,EAAE;QACN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACuZ,EAAE,GAAG;MACN;AACZ;AACA;MACYC,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7O,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByZ,WAAW,EAAEA,CAACxR,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0Z,QAAQ,EAAEA,CAACzR,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2Z,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBta,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4Z,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1W,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;YAC9DI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6Z,IAAI,EAAEA,CAAC5R,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;cAC9DI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;YAC9DI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFuP,kBAAkB,EAAEA,CAACtH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACnF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;cACrEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0D,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8Z,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,WAAW,EAAEA,CAAC9R,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBga,cAAc,EAAEA,CAAC/R,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYia,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/W,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF4T,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;cAC/EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBka,QAAQ,EAAEA,CAACjS,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBma,MAAM,EAAEA,CAAClS,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYoa,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/P,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqa,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnX,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsa,IAAI,EAAEA,CAACrS,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYua,cAAc,EAAE;QACZ3G,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;cAClFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwa,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtX,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBya,UAAU,EAAEA,CAACxS,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0a,QAAQ,EAAEA,CAACzS,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2a,QAAQ,EAAEA,CAAC1S,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4a,UAAU,EAAEA,CAAC3S,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6a,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,eAAe,EAAEA,CAAC7S,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB+a,YAAY,EAAEA,CAAC9S,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqN,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnK,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;YAC9DI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhJ,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkS,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB9X,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yBAAwB,EAAE4B,IAAI,CAAC;YAC/DI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhJ,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYrB,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvE,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;QACgBib,OAAO,EAAEA,CAAChT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;cACjEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;QACgBkb,YAAY,EAAEA,CAACjT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBmb,SAAS,EAAEA,CAAClT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBob,KAAK,EAAEA,CAACnT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqb,SAAS,EAAEA,CAACpT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsb,WAAW,EAAEA,CAACrT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBub,SAAS,EAAEA,CAACtT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kDAAiD,EAAE4B,IAAI,CAAC;YACxFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwb,YAAY,EAAEA,CAACvT,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAM;cAAEuW,WAAW;cAAEC;YAAkB,CAAC,GAAG9X,IAAI;YAAEmG,IAAI,GAAGjK,MAAM,CAAC8D,IAAI,EAAE,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;UAC1G,MAAM+X,UAAU,GAAGxb,MAAM,CAACuJ,MAAM,CAAC;YAAEkS,QAAQ,EAAE,aAAa;YAAErX,OAAO,EAAEsX,IAAI,CAACC,SAAS,CAAC;cAC5EC,IAAI,EAAE,UAAU;cAChBnY,IAAI,EAAE;gBACF6X,WAAW,EAAEA,WAAW;gBACxBC,iBAAiB,EAAEA;cACvB;YACJ,CAAC;UAAE,CAAC,EAAE3R,IAAI,CAAC;UACf,OAAO,IAAI,CAACzB,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,MAAM;YACd3E,IAAI,EAAE+X,UAAU;YAChBzT,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgc,WAAW,EAAEA,CAAC/T,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAM;cAAEuW,WAAW;cAAEC;YAAkB,CAAC,GAAG9X,IAAI;YAAEmG,IAAI,GAAGjK,MAAM,CAAC8D,IAAI,EAAE,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;UAC1G,MAAM+X,UAAU,GAAGxb,MAAM,CAACuJ,MAAM,CAAC;YAAEkS,QAAQ,EAAE,aAAa;YAAErX,OAAO,EAAEsX,IAAI,CAACC,SAAS,CAAC;cAC5EC,IAAI,EAAE,UAAU;cAChBnY,IAAI,EAAE;gBACF6X,WAAW,EAAEA,WAAW;gBACxBC,iBAAiB,EAAEA;cACvB;YACJ,CAAC;UAAE,CAAC,EAAE3R,IAAI,CAAC;UACf,OAAO,IAAI,CAACzB,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI,EAAE+X,UAAU;YAChBzT,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYic,eAAe,EAAE;QACb;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/Y,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;cACvFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkc,eAAe,EAAE;QACb;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7c,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqT,GAAG,EAAE;QACD;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjZ,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uBAAsB,EAAE4B,IAAI,CAAC;YAC7DI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uBAAsB,EAAE4B,IAAI,CAAC;cAC7DI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uBAAsB,EAAE4B,IAAI,CAAC;YAC7DI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACoc,IAAI,GAAG;MACR;AACZ;AACA;MACYC,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnZ,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+DAA8D,EAAE4B,IAAI,CAAC;YACrGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYsc,SAAS,EAAE;QACP;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBpZ,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;cACrEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYuc,eAAe,EAAE;QACb;AAChB;AACA;AACA;AACA;QACgB5O,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kEAAiE,EAAE4B,IAAI,CAAC;YACxGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kEAAiE,EAAE4B,IAAI,CAAC;YACxGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;cAC3FI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwc,yBAAyB,EAAE;QACvB;AAChB;AACA;AACA;AACA;QACgB7O,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sFAAqF,EAAE4B,IAAI,CAAC;YAC5HI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sFAAqF,EAAE4B,IAAI,CAAC;YAC5HI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;cACtGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyc,kBAAkB,EAAE;QAChB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvZ,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0EAAyE,EAAE4B,IAAI,CAAC;YAChHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0c,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxZ,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;cAC3EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2c,mBAAmB,EAAE;QACjB;AAChB;AACA;AACA;AACA;QACgBhP,WAAW,EAAEA,CAAC1F,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgB8P,WAAW,EAAEA,CAAC7H,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6EAA4E,EAAE4B,IAAI,CAAC;YACnHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4c,KAAK,EAAEA,CAAC3U,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2EAA0E,EAAE4B,IAAI,CAAC;YACjHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;cACtGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYoK,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBoC,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gCAA+B,EAAE4B,IAAI,CAAC;YACtEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6c,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3Z,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sEAAqE,EAAE4B,IAAI,CAAC;YAC5GI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;cAClGI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8c,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnS,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC+c,GAAG,GAAG,CAAC,CAAC;IACb;AACR;AACA;IACQ,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;IACtB;AACR;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;IACjB;AACR;AACA;IACQ,IAAI,CAACC,GAAG,GAAG;MACP;AACZ;AACA;MACYlC,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzN,MAAM,EAAEA,CAACtF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEnG,OAAO,CAAC,EAAE;cAAE,cAAc,EAAE;YAAsB,CAAC;UAChG,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAOX,GAAG,CAACgJ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;QACjC,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8U,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBlT,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYod,qBAAqB,EAAE;QACnB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhN,WAAW,EAAEA,CAACnI,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+FAA8F,EAAE4B,IAAI,CAAC;YACrII,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kGAAiG,EAAE4B,IAAI,CAAC;YACxII,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBiK,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kFAAiF,EAAE4B,IAAI,CAAC;YACxHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kGAAiG,EAAE4B,IAAI,CAAC;YACxII,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYqd,iBAAiB,EAAE;QACf;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBpT,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkd,GAAG,EAAE;QACD;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBI,QAAQ,EAAEA,CAACrV,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYud,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtT,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwd,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBta,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyd,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxT,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC0d,wBAAwB,GAAG;MAC5B;AACZ;AACA;MACY1C,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2C,cAAc,EAAEA,CAAC1V,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8DAA6D,EAAE4B,IAAI,CAAC;YACpGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC4d,QAAQ,GAAG;MACZ;AACZ;AACA;MACYC,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrR,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC8d,YAAY,GAAG,CAAC,CAAC;IACtB;AACR;AACA;IACQ,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;IAC1B;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAChB;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;IACvB;AACR;AACA;IACQ,IAAI,CAACjR,MAAM,GAAG;MACV;AACZ;AACA;MACYyC,GAAG,EAAE;QACD;AAChB;AACA;AACA;AACA;QACgBvM,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0BAAyB,EAAE4B,IAAI,CAAC;YAChEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYke,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;cACzEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYme,cAAc,EAAE;QACZ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kEAAiE,EAAE4B,IAAI,CAAC;YACxGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kEAAiE,EAAE4B,IAAI,CAAC;YACxGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyH,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;QACgBvE,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYoe,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBlb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yCAAwC,EAAE4B,IAAI,CAAC;YAC/EI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACqe,uBAAuB,GAAG,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAG;MACV;AACZ;AACA;MACYC,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwe,sBAAsB,EAAE;QACpB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBtb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8EAA6E,EAAE4B,IAAI,CAAC;YACpHI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYye,mCAAmC,EAAE;QACjC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+GAA8G,EAAE4B,IAAI,CAAC;YACrJI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6HAA4H,EAAE4B,IAAI,CAAC;YACnKI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6HAA4H,EAAE4B,IAAI,CAAC;YACnKI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qHAAoH,EAAE4B,IAAI,CAAC;YAC3JI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6HAA4H,EAAE4B,IAAI,CAAC;YACnKI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0e,0BAA0B,EAAE;QACxB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxb,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oFAAmF,EAAE4B,IAAI,CAAC;YAC1HI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0FAAyF,EAAE4B,IAAI,CAAC;YAChII,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2e,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,IAAI,EAAEA,CAAC3W,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4EAA2E,EAAE4B,IAAI,CAAC;YAClHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uEAAsE,EAAE4B,IAAI,CAAC;YAC7GI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6e,aAAa,EAAEA,CAAC5W,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sFAAqF,EAAE4B,IAAI,CAAC;YAC5HI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mEAAkE,EAAE4B,IAAI,CAAC;YACzGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8G,OAAO,EAAEA,CAACmB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+EAA8E,EAAE4B,IAAI,CAAC;YACrHI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8e,0BAA0B,EAAE;QACxB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB5b,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oFAAmF,EAAE4B,IAAI,CAAC;YAC1HI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oGAAmG,EAAE4B,IAAI,CAAC;YAC1II,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwM,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0FAAyF,EAAE4B,IAAI,CAAC;YAChII,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC+e,cAAc,GAAG;MAClB;AACZ;AACA;MACYC,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,aAAa,EAAEA,CAAChX,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkf,eAAe,EAAEA,CAACjX,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACmf,KAAK,GAAG,CAAC,CAAC;IACf;AACR;AACA;IACQ,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;IACrB;AACR;AACA;IACQ,IAAI,CAACvS,IAAI,GAAG;MACR;AACZ;AACA;MACYA,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwS,uBAAuB,EAAEA,CAACpX,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsf,mBAAmB,EAAEA,CAACrX,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yDAAwD,EAAE4B,IAAI,CAAC;YAC/FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBuf,QAAQ,EAAEA,CAACtX,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0BAAyB,EAAE4B,IAAI,CAAC;YAChEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0BAAyB,EAAE4B,IAAI,CAAC;cAChEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0BAAyB,EAAE4B,IAAI,CAAC;YAChEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwf,UAAU,EAAEA,CAACvX,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYyf,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvc,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kEAAiE,EAAE4B,IAAI,CAAC;YACxGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;cACvFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0f,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxc,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;cAClFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2f,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzc,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;cACnFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4f,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB1c,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;cACnFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC6f,MAAM,GAAG;MACV;AACZ;AACA;MACYC,uBAAuB,EAAE;QACrB;AAChB;AACA;AACA;AACA;QACgBtT,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6f,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrT,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC+f,WAAW,GAAG;MACf;AACZ;AACA;MACYC,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,MAAM,EAAEA,CAAChY,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkgB,SAAS,EAAEA,CAACjY,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC1E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0CAAyC,EAAE4B,IAAI,CAAC;YAChFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACmgB,eAAe,GAAG,CAAC,CAAC;IACzB;AACR;AACA;IACQ,IAAI,CAACC,EAAE,GAAG;MACN;AACZ;AACA;MACYC,KAAK,EAAE;QACHlX,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yBAAwB,EAAE4B,IAAI,CAAC;cAC/DI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,yBAAwB,EAAE4B,IAAI,CAAC;YAC/DI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYsgB,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBhT,QAAQ,EAAEA,CAACrF,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMmD,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACbhF,OAAO;YACPK,IAAI;YACJsE,MAAM;YACNM,YAAY,EAAE;UAClB,CAAC,CAAC,CACGC,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;UACF,OAAO;YACH4I,SAAS,EAAGC,QAAQ,IAAKjI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;cAClE,OAAO,IAAIQ,OAAO,CAAC,CAACD,OAAO,EAAEE,MAAM,KAAK;gBACpC,MAAMyH,cAAc,GAAGnJ,EAAE,CAACoJ,iBAAiB,CAACF,QAAQ,CAAC;gBACrDC,cAAc,CAACE,EAAE,CAAC,QAAQ,EAAE,MAAM;kBAC9B7H,OAAO,CAAC0H,QAAQ,CAAC;gBACrB,CAAC,CAAC;gBACFC,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGhJ,CAAC,IAAK;kBAC9BqB,MAAM,CAACrB,CAAC,CAAC;gBACb,CAAC,CAAC;gBACFqI,GAAG,CAACY,IAAI,CAACH,cAAc,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC;UACL,CAAC;QACL,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBzJ,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBugB,WAAW,EAAEA,CAACtY,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBwgB,eAAe,EAAEA,CAACvY,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBygB,sBAAsB,EAAEA,CAACxY,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mDAAkD,EAAE4B,IAAI,CAAC;YACzFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0gB,uBAAuB,EAAEA,CAACzY,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oDAAmD,EAAE4B,IAAI,CAAC;YAC1FI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2gB,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBC,GAAG,EAAEA,CAAC3Y,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6gB,MAAM,EAAEA,CAAC5Y,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8CAA6C,EAAE4B,IAAI,CAAC;YACpFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB8gB,OAAO,EAAEA,CAAC7Y,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+CAA8C,EAAE4B,IAAI,CAAC;YACrFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF+gB,oBAAoB,EAAEA,CAAC9Y,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;cAC5EI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0X,QAAQ,EAAEA,CAAC/Y,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sCAAqC,EAAE4B,IAAI,CAAC;YAC5EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBihB,OAAO,EAAEA,CAAChZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYkhB,gBAAgB,EAAE;QACd;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB7hB,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iDAAgD,EAAE4B,IAAI,CAAC;YACvFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBmhB,aAAa,EAAEA,CAAClZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC9E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gEAA+D,EAAE4B,IAAI,CAAC;YACtGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBohB,KAAK,EAAEA,CAACnZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uDAAsD,EAAE4B,IAAI,CAAC;YAC7FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqhB,IAAI,EAAEA,CAACpZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,sDAAqD,EAAE4B,IAAI,CAAC;YAC5FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYugB,WAAW,EAAE;QACT3M,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;cACrEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwgB,eAAe,EAAE;QACb5M,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;cACzEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYygB,sBAAsB,EAAE;QACpB7M,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;cACjFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYge,MAAM,EAAE;QACJ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsD,QAAQ,EAAEA,CAACrZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACzE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBuhB,UAAU,EAAEA,CAACtZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC3E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwhB,OAAO,EAAE;QACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB3f,KAAK,EAAEA,CAACoG,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByhB,gBAAgB,EAAEA,CAACxZ,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB4F,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,uCAAsC,EAAE4B,IAAI,CAAC;YAC7EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0hB,kBAAkB,EAAE;QAChB;AAChB;AACA;AACA;AACA;QACgBriB,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2DAA0D,EAAE4B,IAAI,CAAC;YACjGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2hB,iBAAiB,EAAE;QACf;AAChB;AACA;AACA;AACA;QACgBtiB,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,0DAAyD,EAAE4B,IAAI,CAAC;YAChGI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY4hB,aAAa,EAAE;QACX;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBvX,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qDAAoD,EAAE4B,IAAI,CAAC;YAC3FI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB6hB,YAAY,EAAEA,CAAC5Z,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC7E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,gDAA+C,EAAE4B,IAAI,CAAC;YACtFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY0gB,uBAAuB,EAAE;QACrB9M,eAAe,EAAEA,CAAC3L,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAChF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;cAClFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBjK,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4CAA2C,EAAE4B,IAAI,CAAC;YAClFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY8hB,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB5e,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;YAC9DI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;cAC9DI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wBAAuB,EAAE4B,IAAI,CAAC;YAC9DI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB+hB,IAAI,EAAEA,CAAC9Z,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6BAA4B,EAAE4B,IAAI,CAAC;YACnEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,iCAAgC,EAAE4B,IAAI,CAAC;YACvEI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgN,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYgiB,UAAU,EAAE;QACR;AAChB;AACA;AACA;AACA;QACgBxV,KAAK,EAAEA,CAACvE,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;QACgBuF,GAAG,EAAEA,CAAC0C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYiiB,SAAS,EAAE;QACP;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/e,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkiB,GAAG,EAAEA,CAACja,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,kCAAiC,EAAE4B,IAAI,CAAC;YACxEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;cACpEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,8BAA6B,EAAE4B,IAAI,CAAC;YACpEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB+hB,IAAI,EAAEA,CAAC9Z,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBqK,KAAK,EAAEA,CAACpC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACtE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,OAAO;YACf3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBgN,MAAM,EAAEA,CAAC/E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYmiB,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBjf,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,+BAA8B,EAAE4B,IAAI,CAAC;YACrEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAACoiB,IAAI,GAAG;MACR;AACZ;AACA;MACYC,KAAK,EAAE;QACH;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBnf,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBX,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,qCAAoC,EAAE4B,IAAI,CAAC;YAC3EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsiB,OAAO,EAAEA,CAACra,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACxE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oCAAmC,EAAE4B,IAAI,CAAC;YAC1EI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;cACjEI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2BAA0B,EAAE4B,IAAI,CAAC;YACjEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYuiB,WAAW,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBrf,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB2K,MAAM,EAAEA,CAAC1C,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,wDAAuD,EAAE4B,IAAI,CAAC;YAC9FI,MAAM,EAAE,QAAQ;YAChB3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACYwiB,SAAS,EAAE;QACP;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB9S,IAAI,EAAEA,CAACzH,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBkD,MAAM,EAAEA,CAAC+E,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACFmJ,gBAAgB,EAAEA,CAAClB,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACjF,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,MAAMkE,WAAW,GAAIC,YAAY,IAAKzI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;YAC/E,MAAMyH,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAAC;cACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;cACjFI,MAAM,EAAE,KAAK;cACbhF,OAAO,EAAE7D,MAAM,CAAC2J,YAAY,CAAC9F,OAAO,EAAE9D,QAAQ,CAAC;cAC/CyI,MAAM,EAAExI,MAAM,CAAC2J,YAAY,CAACnB,MAAM,EAAEzI,QAAQ;YAChD,CAAC,CAAC,CACGgJ,KAAK,CAAEzI,CAAC,IAAK;cACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;YACF,OAAOqI,GAAG;UACd,CAAC,CAAC;UACF,MAAMiB,QAAQ,GAAG;YACb,CAACrH,MAAM,CAACC,aAAa,IAAI;cACrB,OAAOF,gBAAgB,CAAC,IAAI,EAAE6E,SAAS,EAAE,UAAU0C,EAAEA,CAAA,EAAG;gBACpD,IAAIC,OAAO,GAAG,IAAI;gBAClB,IAAIC,SAAS;gBACb,OAAOD,OAAO,EAAE;kBACZ,IAAI;oBACA,MAAMnB,GAAG,GAAG,MAAMvG,OAAO,CAACsH,WAAW,CAAC;sBAClC7F,OAAO;sBACP2E,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAExB,MAAM,CAAC,EAAE;wBAAEyB,UAAU,EAAEF;sBAAU,CAAC,CAAC;sBAC3E7F;oBACJ,CAAC,CAAC,CAAC;oBACH,MAAMgG,EAAE,GAAGvK,GAAG,CAACgJ,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;sBAAE;wBACnC;wBACAwB,QAAQ;wBACR;wBACAF,UAAU;wBACV;wBACAG;sBAAgB,CAAC,GAAGF,EAAE;sBAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;oBACxF,MAAM,MAAM9H,OAAO,CAACiI,IAAI,CAAC;oBACzBP,OAAO,GAAGQ,OAAO,CAACH,QAAQ,CAAC;oBAC3BJ,SAAS,GAAGE,UAAU,IAAIG,eAAe;kBAC7C,CAAC,CACD,OAAO9J,CAAC,EAAE;oBACN,MAAM,MAAM8B,OAAO,CAAC,IAAI,CAAC;oBACzB;kBACJ;gBACJ;cACJ,CAAC,CAAC;YACN;UACJ,CAAC;UACD,OAAOwH,QAAQ;QACnB,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBW,IAAI,EAAEA,CAAChC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,2CAA0C,EAAE4B,IAAI,CAAC;YACjFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBsU,IAAI,EAAEA,CAACrM,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACrE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,4DAA2D,EAAE4B,IAAI,CAAC;YAClGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgByiB,cAAc,EAAEA,CAACxa,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC/E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6DAA4D,EAAE4B,IAAI,CAAC;YACnGI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC,CAAC;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB0iB,WAAW,EAAEA,CAACza,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UAC5E,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,oEAAmE,EAAE4B,IAAI,CAAC;YAC1GI,MAAM,EAAE,MAAM;YACd3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY2iB,YAAY,EAAE;QACV;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB/c,MAAM,EAAEA,CAACqC,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACvE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,6CAA4C,EAAE4B,IAAI,CAAC;YACnFI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL,CAAC;MACD;AACZ;AACA;MACY6M,IAAI,EAAE;QACF;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgBxN,GAAG,EAAEA,CAAC4I,OAAO,EAAE/C,OAAO,KAAKtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;UACpE,MAAM;YAAE2C,OAAO;YAAE2E,MAAM;YAAEtE,IAAI;YAAEuE;UAAK,CAAC,GAAG,MAAM,IAAI,CAACC,aAAa,CAACH,OAAO,EAAE/C,OAAO,CAAC;UAClF,OAAO,IAAI,CAACoD,YAAY,CACnBlF,OAAO,CAAC;YACTmE,GAAG,EAAEb,WAAW,CAAE,GAAE,IAAI,CAACH,MAAO,mCAAkC,EAAE4B,IAAI,CAAC;YACzEI,MAAM,EAAE,KAAK;YACb3E,IAAI;YACJsE,MAAM;YACN3E;UACJ,CAAC,CAAC,CACGkF,KAAK,CAAEzI,CAAC,IAAK;YACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAACnB,YAAY,CAACxH,CAAC,CAAC,CAAC;YAClC,MAAMA,CAAC;UACX,CAAC,CAAC;QACN,CAAC;MACL;IACJ,CAAC;IACD;AACR;AACA;IACQ,IAAI,CAAC4iB,SAAS,GAAG,CAAC,CAAC;EACvB;AACJ;AAEA,MAAMC,aAAa,GAAG;EAClBla,KAAK,EAAE,SAAAA,CAAA,EAAY;IAAA,SAAAma,IAAA,GAAAjc,SAAA,CAAAnG,MAAA,EAARqiB,GAAG,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAHF,GAAG,CAAAE,IAAA,IAAApc,SAAA,CAAAoc,IAAA;IAAA;IACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,GAAGJ,GAAG,CAAC;EACnC,CAAC;EACDK,IAAI,EAAE,SAAAA,CAAA,EAAY;IAAA,SAAAC,KAAA,GAAAxc,SAAA,CAAAnG,MAAA,EAARqiB,GAAG,OAAAC,KAAA,CAAAK,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAHP,GAAG,CAAAO,KAAA,IAAAzc,SAAA,CAAAyc,KAAA;IAAA;IACTJ,OAAO,CAACE,IAAI,CAAC,SAAS,EAAE,GAAGL,GAAG,CAAC;EACnC,CAAC;EACDQ,IAAI,EAAE,SAAAA,CAAA,EAAY;IAAA,SAAAC,KAAA,GAAA3c,SAAA,CAAAnG,MAAA,EAARqiB,GAAG,OAAAC,KAAA,CAAAQ,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAHV,GAAG,CAAAU,KAAA,IAAA5c,SAAA,CAAA4c,KAAA;IAAA;IACTP,OAAO,CAACK,IAAI,CAAC,SAAS,EAAE,GAAGR,GAAG,CAAC;EACnC,CAAC;EACDW,KAAK,EAAE,SAAAA,CAAA,EAAY;IAAA,SAAAC,KAAA,GAAA9c,SAAA,CAAAnG,MAAA,EAARqiB,GAAG,OAAAC,KAAA,CAAAW,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAHb,GAAG,CAAAa,KAAA,IAAA/c,SAAA,CAAA+c,KAAA;IAAA;IACVV,OAAO,CAACQ,KAAK,CAAC,UAAU,EAAE,GAAGX,GAAG,CAAC;EACrC,CAAC;EACDc,KAAK,EAAE,SAAAA,CAAA,EAAY;IAAA,SAAAC,KAAA,GAAAjd,SAAA,CAAAnG,MAAA,EAARqiB,GAAG,OAAAC,KAAA,CAAAc,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAHhB,GAAG,CAAAgB,KAAA,IAAAld,SAAA,CAAAkd,KAAA;IAAA;IACVb,OAAO,CAACW,KAAK,CAAC,UAAU,EAAE,GAAGd,GAAG,CAAC;EACrC;AACJ,CAAC;AAED,MAAMiB,WAAW,CAAC;EACdpf,WAAWA,CAACqf,KAAK,EAAEvb,MAAM,EAAE;IACvB,IAAI,CAACub,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACvb,MAAM,GAAGA,MAAM;EACxB;EACAC,KAAKA,CAAA,EAAS;IACV,IAAI,IAAI,CAACsb,KAAK,IAAIlgB,WAAW,CAAC4E,KAAK,EAAE;MAAA,SAAAub,KAAA,GAAArd,SAAA,CAAAnG,MAAA,EADhCqiB,GAAG,OAAAC,KAAA,CAAAkB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAHpB,GAAG,CAAAoB,KAAA,IAAAtd,SAAA,CAAAsd,KAAA;MAAA;MAEJ,IAAI,CAACzb,MAAM,CAACC,KAAK,CAACoa,GAAG,CAAC;IAC1B;EACJ;EACAK,IAAIA,CAAA,EAAS;IACT,IAAI,IAAI,CAACa,KAAK,IAAIlgB,WAAW,CAACqf,IAAI,EAAE;MAAA,SAAAgB,KAAA,GAAAvd,SAAA,CAAAnG,MAAA,EADhCqiB,GAAG,OAAAC,KAAA,CAAAoB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAHtB,GAAG,CAAAsB,KAAA,IAAAxd,SAAA,CAAAwd,KAAA;MAAA;MAEH,IAAI,CAAC3b,MAAM,CAAC0a,IAAI,CAACL,GAAG,CAAC;IACzB;EACJ;EACAQ,IAAIA,CAAA,EAAS;IACT,IAAI,IAAI,CAACU,KAAK,IAAIlgB,WAAW,CAACwf,IAAI,EAAE;MAAA,SAAAe,KAAA,GAAAzd,SAAA,CAAAnG,MAAA,EADhCqiB,GAAG,OAAAC,KAAA,CAAAsB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAHxB,GAAG,CAAAwB,KAAA,IAAA1d,SAAA,CAAA0d,KAAA;MAAA;MAEH,IAAI,CAAC7b,MAAM,CAAC6a,IAAI,CAACR,GAAG,CAAC;IACzB;EACJ;EACAW,KAAKA,CAAA,EAAS;IACV,IAAI,IAAI,CAACO,KAAK,IAAIlgB,WAAW,CAAC2f,KAAK,EAAE;MAAA,SAAAc,KAAA,GAAA3d,SAAA,CAAAnG,MAAA,EADhCqiB,GAAG,OAAAC,KAAA,CAAAwB,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAH1B,GAAG,CAAA0B,KAAA,IAAA5d,SAAA,CAAA4d,KAAA;MAAA;MAEJ,IAAI,CAAC/b,MAAM,CAACgb,KAAK,CAACX,GAAG,CAAC;IAC1B;EACJ;EACAc,KAAKA,CAAA,EAAS;IACV,IAAI,IAAI,CAACI,KAAK,IAAIlgB,WAAW,CAAC8f,KAAK,EAAE;MAAA,SAAAa,MAAA,GAAA7d,SAAA,CAAAnG,MAAA,EADhCqiB,GAAG,OAAAC,KAAA,CAAA0B,MAAA,GAAAC,MAAA,MAAAA,MAAA,GAAAD,MAAA,EAAAC,MAAA;QAAH5B,GAAG,CAAA4B,MAAA,IAAA9d,SAAA,CAAA8d,MAAA;MAAA;MAEJ,IAAI,CAACjc,MAAM,CAACmb,KAAK,CAACd,GAAG,CAAC;IAC1B;EACJ;AACJ;AAEA,MAAM6B,gBAAgB,CAAC;EACnBhgB,WAAWA,CAACsD,MAAM,EAAE;IAChB,IAAI,CAAC2c,KAAK,GAAG3c,MAAM,CAAC2c,KAAK;IACzB,IAAI,CAACC,SAAS,GAAG5c,MAAM,CAAC4c,SAAS;IACjC,IAAI,CAACC,KAAK,GAAG7c,MAAM,CAAC6c,KAAK;IACzB,IAAI,CAACxe,MAAM,GAAG2B,MAAM,CAAC3B,MAAM;IAC3B,IAAI,CAACmC,MAAM,GAAGR,MAAM,CAACQ,MAAM;IAC3B,IAAI,CAACsc,OAAO,GAAG9c,MAAM,CAAC8c,OAAO;IAC7B,IAAI,CAAC1c,YAAY,GAAGJ,MAAM,CAACI,YAAY;IACvC,IAAI,CAACI,MAAM,CAACgb,KAAK,CAAC,6BAA6B,CAAC;IAChD,IAAI,CAACuB,cAAc,CAAC,CAAC;EACzB;EACAA,cAAcA,CAAA,EAAG;IACb,IAAI1b,EAAE;IACN,OAAO3I,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,IAAI,CAACokB,OAAO,KAAKnhB,OAAO,CAACqhB,GAAG,EAAE;QAC9B,MAAM1W,SAAS,GAAG,MAAO,CAACjF,EAAE,GAAG,IAAI,CAACwb,KAAK,MAAM,IAAI,IAAIxb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAClK,GAAG,CAAC6E,UAAU,EAAE;UAC/Fe,SAAS,EAAE,IAAI,CAAC4f;QACpB,CAAC,CAAE;QACH,IAAI,CAACrW,SAAS,EAAE;UACZ,IAAI,CAAC2W,gBAAgB,CAAC,CAAC;QAC3B;MACJ;IACJ,CAAC,CAAC;EACN;EACAA,gBAAgBA,CAAA,EAAG;IACf,OAAOvkB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAAC8H,MAAM,CAACgb,KAAK,CAAC,oBAAoB,CAAC;MACvC,MAAM,IAAI,CAACpb,YAAY,CAClB8c,IAAI,CAAE,GAAE,IAAI,CAAC7e,MAAO,sCAAqC,EAAE;QAC5D8e,MAAM,EAAE,IAAI,CAACR,KAAK;QAClBS,UAAU,EAAE,IAAI,CAACR;MACrB,CAAC,CAAC,CACGrc,KAAK,CAAEzI,CAAC,IAAK;QACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAulB,YAAYA,CAAA,EAAG;IACX,IAAIhc,EAAE;IACN,OAAO3I,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM4N,SAAS,GAAG,MAAO,CAACjF,EAAE,GAAG,IAAI,CAACwb,KAAK,MAAM,IAAI,IAAIxb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAClK,GAAG,CAAC6E,UAAU,EAAE;QAC/Fe,SAAS,EAAE,IAAI,CAAC4f;MACpB,CAAC,CAAE;MACH,IAAIrW,SAAS,EAAE;QACX,IAAI,CAAC9F,MAAM,CAACgb,KAAK,CAAC,sBAAsB,CAAC;QACzC,OAAOlV,SAAS;MACpB;MACA,MAAM,IAAI,CAAC2W,gBAAgB,CAAC,CAAC;MAC7B,OAAO3hB,SAAS;IACpB,CAAC,CAAC;EACN;AACJ;AAEA,MAAMgiB,YAAY,CAAC;EACf5gB,WAAWA,CAACsD,MAAM,EAAE;IAChB,IAAI,CAAC2c,KAAK,GAAG3c,MAAM,CAAC2c,KAAK;IACzB,IAAI,CAACC,SAAS,GAAG5c,MAAM,CAAC4c,SAAS;IACjC,IAAI,CAACC,KAAK,GAAG7c,MAAM,CAAC6c,KAAK;IACzB,IAAI,CAACxe,MAAM,GAAG2B,MAAM,CAAC3B,MAAM;IAC3B,IAAI,CAACmC,MAAM,GAAGR,MAAM,CAACQ,MAAM;IAC3B,IAAI,CAACsc,OAAO,GAAG9c,MAAM,CAAC8c,OAAO;IAC7B,IAAI,CAAC1c,YAAY,GAAGJ,MAAM,CAACI,YAAY;IACvC,IAAI,CAACmd,gBAAgB,GAAG,IAAIb,gBAAgB,CAAC;MACzCC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBxe,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBmC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBsc,OAAO,EAAE,IAAI,CAACA,OAAO;MACrB1c,YAAY,EAAE,IAAI,CAACA;IACvB,CAAC,CAAC;IACF,IAAI,CAACI,MAAM,CAACgb,KAAK,CAAC,wBAAwB,CAAC;EAC/C;EACAgC,0BAA0BA,CAAA,EAAG;IACzB,IAAInc,EAAE,EAAEK,EAAE;IACV,OAAOhJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM+kB,uBAAuB,GAAG,MAAO,CAACpc,EAAE,GAAG,IAAI,CAACwb,KAAK,MAAM,IAAI,IAAIxb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAClK,GAAG,CAAC8E,kBAAkB,EAAE;QACrHc,SAAS,EAAE,IAAI,CAAC4f;MACpB,CAAC,CAAE;MACH,IAAIc,uBAAuB,EAAE;QACzB,IAAI,CAACjd,MAAM,CAACgb,KAAK,CAAC,iBAAiB,CAAC;QACpC,OAAOiC,uBAAuB;MAClC;MACA,IAAI,CAACjd,MAAM,CAACgb,KAAK,CAAC,eAAe,CAAC;MAClC;MACA,MAAM;QAAEkC,mBAAmB;QAAEC;MAAO,CAAC,GAAG,MAAM,IAAI,CAACvd,YAAY,CAC1D8c,IAAI,CAAE,GAAE,IAAI,CAAC7e,MAAO,iDAAgD,EAAE;QACvE8e,MAAM,EAAE,IAAI,CAACR,KAAK;QAClBS,UAAU,EAAE,IAAI,CAACR;MACrB,CAAC,CAAC,CACGrc,KAAK,CAAEzI,CAAC,IAAK;QACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;MACxB,CAAC,CAAC;MACF,MAAO,CAAC4J,EAAE,GAAG,IAAI,CAACmb,KAAK,MAAM,IAAI,IAAInb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACrE,GAAG,CAACpB,kBAAkB,EAAEyhB,mBAAmB;MAC5G;MACA,IAAIvgB,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGugB,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;QAClD5gB,SAAS,EAAE,IAAI,CAAC4f;MACpB,CAAC,CAAE;MACH,OAAOe,mBAAmB;IAC9B,CAAC,CAAC;EACN;EACAE,0BAA0BA,CAACC,SAAS,EAAE;IAClC,IAAIxc,EAAE;IACN,OAAO3I,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,CAACmlB,SAAS,EAAE;QACZ,IAAI,CAACrd,MAAM,CAACC,KAAK,CAAC,oCAAoC,CAAC;QACvD,OAAOnF,SAAS;MACpB;MACA,MAAMkL,iBAAiB,GAAG,MAAO,CAACnF,EAAE,GAAG,IAAI,CAACwb,KAAK,MAAM,IAAI,IAAIxb,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAClK,GAAG,CAAE,wBAAuB0mB,SAAU,EAAC,EAAE;QAChI9gB,SAAS,EAAE,IAAI,CAAC4f;MACpB,CAAC,CAAE;MACH,IAAInW,iBAAiB,EAAE;QACnB,IAAI,CAAChG,MAAM,CAACgb,KAAK,CAAC,iBAAiB,CAAC;QACpC,OAAOhV,iBAAiB;MAC5B;MACA,IAAI,CAAChG,MAAM,CAACgb,KAAK,CAAC,gBAAgB,CAAC;MACnC,MAAMlV,SAAS,GAAG,MAAM,IAAI,CAACiX,gBAAgB,CAACF,YAAY,CAAC,CAAC;MAC5D,IAAI,CAAC/W,SAAS,EAAE;QACZ,IAAI,CAAC9F,MAAM,CAAC0a,IAAI,CAAC,eAAe,CAAC;QACjC,OAAO5f,SAAS;MACpB;MACA,IAAI,CAACkF,MAAM,CAACgb,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA;MACA,MAAM;QAAEsC;MAAiB,CAAC,GAAG,MAAM,IAAI,CAAC1d,YAAY,CAC/C8c,IAAI,CAAE,GAAE,IAAI,CAAC7e,MAAO,qCAAoC,EAAE;QAC3D8e,MAAM,EAAE,IAAI,CAACR,KAAK;QAClBS,UAAU,EAAE,IAAI,CAACR,SAAS;QAC1BmB,UAAU,EAAEzX;MAChB,CAAC,CAAC,CACG/F,KAAK,CAAEzI,CAAC,IAAK;QACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;MACxB,CAAC,CAAC;MACF,IAAI,CAAC0I,MAAM,CAACgb,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MACA;MACA,MAAM;QAAEkC,mBAAmB;QAAEC;MAAO,CAAC,GAAG,MAAM,IAAI,CAACvd,YAAY,CAC1D8c,IAAI,CAAE,GAAE,IAAI,CAAC7e,MAAO,wCAAuC,EAAE;QAC9Dyf,gBAAgB;QAChBE,UAAU,EAAEH;MAChB,CAAC,CAAC,CACGtd,KAAK,CAAEzI,CAAC,IAAK;QACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;MACxB,CAAC,CAAC;MACF;MACA,MAAM,IAAI,CAAC+kB,KAAK,CAACxf,GAAG,CAAE,wBAAuBwgB,SAAU,EAAC,EAAEH,mBAAmB;MAC7E;MACA,IAAIvgB,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGugB,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;QAClD5gB,SAAS,EAAE,IAAI,CAAC4f;MACpB,CAAC,CAAC;MACF,OAAOe,mBAAmB;IAC9B,CAAC,CAAC;EACN;EACAO,oBAAoBA,CAACje,MAAM,EAAE;IACzB,OAAOtH,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChDsG,MAAM,CAAC,IAAI,CAAC8d,OAAO,KAAKnhB,OAAO,CAACuiB,SAAS,EAAE,MAAMxlB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;QAC1F,IAAI,CAAC8H,MAAM,CAACgb,KAAK,CAAC,sBAAsB,CAAC;MAC7C,CAAC,CAAC,CAAC;MACHxc,MAAM,CAAC,IAAI,CAAC8d,OAAO,KAAKnhB,OAAO,CAACqhB,GAAG,EAAE,MAAMtkB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;QACpF,IAAI,CAAC8H,MAAM,CAACgb,KAAK,CAAC,uBAAuB,CAAC;MAC9C,CAAC,CAAC,CAAC;MACH;MACA,MAAMhV,iBAAiB,GAAG,IAAI,CAACsW,OAAO,KAAKnhB,OAAO,CAACuiB,SAAS,GACtD,MAAM,IAAI,CAACV,0BAA0B,CAAC,CAAC,GACvC,MAAM,IAAI,CAACI,0BAA0B,CAACzmB,GAAG,CAAC6I,MAAM,EAAEjE,UAAU,CAAC,CAAC;MACpE,OAAOyK,iBAAiB;IAC5B,CAAC,CAAC;EACN;AACJ;AAEA,MAAM2X,MAAM,SAASve,QAAQ,CAAC;EAC1BlD,WAAWA,CAACsD,MAAM,EAAE;IAChB,KAAK,CAAC,CAAC;IACP,IAAI,CAAC2c,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACwB,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACvB,OAAO,GAAGnhB,OAAO,CAACuiB,SAAS;IAChC,IAAI,CAAC1d,MAAM,GAAG,IAAIsb,WAAW,CAAC9b,MAAM,CAACse,WAAW,IAAIziB,WAAW,CAACwf,IAAI,EAAErb,MAAM,CAACQ,MAAM,IAAIma,aAAa,CAAC;IACrG,IAAI,CAACgC,KAAK,GAAG3c,MAAM,CAAC2c,KAAK;IACzB,IAAI,CAACC,SAAS,GAAG5c,MAAM,CAAC4c,SAAS;IACjC,IAAI,CAAC2B,iBAAiB,GAAGve,MAAM,CAACue,iBAAiB;IACjDvf,MAAM,CAAC,CAAC,IAAI,CAAC2d,KAAK,EAAE,MAAM,IAAI,CAACnc,MAAM,CAACC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAC/DzB,MAAM,CAAC,CAAC,IAAI,CAAC4d,SAAS,EAAE,MAAM,IAAI,CAACpc,MAAM,CAACC,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACvE,IAAI,CAAC2d,UAAU,GAAGpe,MAAM,CAACoe,UAAU;IACnC,IAAI,CAACC,aAAa,GAAGre,MAAM,CAACqe,aAAa;IACzC,IAAI,CAACvB,OAAO,GAAG3lB,GAAG,CAAC6I,MAAM,EAAE,SAAS,EAAErE,OAAO,CAACuiB,SAAS,CAAC;IACxD,IAAI,CAAC7f,MAAM,GAAGD,YAAY,CAAC4B,MAAM,CAAC3B,MAAM,IAAIzC,MAAM,CAAC0C,MAAM,CAAC;IAC1D,IAAI,CAACkC,MAAM,CAACgb,KAAK,CAAE,mBAAkB,IAAI,CAACnd,MAAO,EAAC,CAAC;IACnD,IAAI,CAACwe,KAAK,GAAG7c,MAAM,CAAC6c,KAAK,IAAIvf,aAAa;IAC1C,IAAI,CAAC8C,YAAY,GAAGJ,MAAM,CAACI,YAAY,IAAIrF,mBAAmB;IAC9D,IAAI,CAACyjB,YAAY,GAAG,IAAIlB,YAAY,CAAC;MACjCX,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBxe,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBmC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBsc,OAAO,EAAE,IAAI,CAACA,OAAO;MACrB1c,YAAY,EAAE,IAAI,CAACA;IACvB,CAAC,CAAC;IACF,IAAI,CAACI,MAAM,CAAC6a,IAAI,CAAC,cAAc,CAAC;EACpC;EACAnb,aAAaA,CAACH,OAAO,EAAE/C,OAAO,EAAE;IAC5B,OAAOtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM+lB,aAAa,GAAG,CAClB,MAAM,EACN,QAAQ,EACR,MAAM,EACN,SAAS,EACT,MAAM,CACT,CAACC,MAAM,CAAC,CAACC,GAAG,EAAE7hB,GAAG,KAAK;QACnB6hB,GAAG,CAAC7hB,GAAG,CAAC,GAAG3F,GAAG,CAAC6F,OAAO,EAAEF,GAAG,EAAE,CAAC,CAAC,CAAC;QAChC,OAAO6hB,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,MAAMC,eAAe,GAAGznB,GAAG,CAACsnB,aAAa,CAACI,IAAI,EAAE1iB,oBAAoB,CAAC;MACrE,IAAIyiB,eAAe,EAAE;QACjB,IAAI,CAACpe,MAAM,CAACgb,KAAK,CAAC,kBAAkB,CAAC;QACrCiD,aAAa,CAACpjB,OAAO,CAACyjB,aAAa,GAAI,UAASF,eAAgB,EAAC;MACrE,CAAC,MACI,IAAI,CAAC,IAAI,CAACL,iBAAiB,EAAE;QAC9B,MAAM/X,iBAAiB,GAAG,MAAM,IAAI,CAACgY,YAAY,CAACP,oBAAoB,CAAC;UACnE,CAACliB,UAAU,GAAG5E,GAAG,CAACsnB,aAAa,CAACI,IAAI,EAAE9iB,UAAU;QACpD,CAAC,CAAC;QACF,IAAIyK,iBAAiB,EAAE;UACnBiY,aAAa,CAACpjB,OAAO,CAACyjB,aAAa,GAAI,UAAStY,iBAAkB,EAAC;QACvE,CAAC,MACI;UACD,IAAI,CAAChG,MAAM,CAAC0a,IAAI,CAAC,wBAAwB,CAAC;QAC9C;MACJ;MACA;MACA,MAAM6D,sBAAsB,GAAG5nB,GAAG,CAACsnB,aAAa,CAACI,IAAI,EAAE3iB,0BAA0B,CAAC;MAClF,IAAI6iB,sBAAsB,EAAE;QACxB,IAAI,CAACve,MAAM,CAACgb,KAAK,CAAC,+BAA+B,CAAC;QAClD,MAAMwD,kBAAkB,GAAG5iB,aAAa,CAAE,GAAE,IAAI,CAACgiB,UAAW,IAAG,IAAI,CAACC,aAAc,EAAC,CAAC;QACpFI,aAAa,CAACpjB,OAAO,CAAC,+BAA+B,CAAC,GAAI,UAAS2jB,kBAAmB,EAAC;MAC3F;MACA,OAAO;QACHhf,MAAM,EAAE/H,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAErK,GAAG,CAAC4I,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE0e,aAAa,CAACze,MAAM,CAAC;QAC1F3E,OAAO,EAAEpD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAErK,GAAG,CAAC4I,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE0e,aAAa,CAACpjB,OAAO,CAAC;QAC7FK,IAAI,EAAEzD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAErK,GAAG,CAAC4I,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE0e,aAAa,CAAC/iB,IAAI,CAAC;QACpFuE,IAAI,EAAEhI,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAErK,GAAG,CAAC4I,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE0e,aAAa,CAACxe,IAAI;MACvF,CAAC;IACL,CAAC,CAAC;EACN;EACA/E,OAAOA,CAAC6E,OAAO,EAAE/C,OAAO,EAAE;IACtB,OAAOtE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,MAAM;UAAEgD,IAAI;UAAEsE,MAAM;UAAE3E,OAAO;UAAEgE;QAAI,CAAC,GAAGU,OAAO;QAAE8B,IAAI,GAAGjK,MAAM,CAACmI,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;MAC5G,MAAMG,aAAa,GAAG,MAAM,IAAI,CAACA,aAAa,CAAC;QAC3CxE,IAAI;QACJsE,MAAM;QACN3E;MACJ,CAAC,EAAE2B,OAAO,CAAC;MACX,IAAI,CAACwD,MAAM,CAACmb,KAAK,CAAE,iBAAgB5b,OAAO,CAACM,MAAO,MAAKN,OAAO,CAACV,GAAI,EAAC,CAAC;MACrE,MAAMc,GAAG,GAAG,MAAM,IAAI,CAACC,YAAY,CAC9BlF,OAAO,CAACjD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEK,IAAI,CAAC,EAAE;QAChDxC,GAAG,EAAE,OAAO,CAAC4f,IAAI,CAAC5f,GAAG,CAAC,GAChBA,GAAG,GACF,GAAE,IAAI,CAAChB,MAAO,IAAGe,SAAS,CAACC,GAAG,CAAE,EAAC;QACxChE,OAAO,EAAE6E,aAAa,CAAC7E,OAAO;QAC9BK,IAAI,EAAEwE,aAAa,CAACxE,IAAI;QACxBsE,MAAM,EAAEE,aAAa,CAACF;MAC1B,CAAC,CAAC,CAAC,CACEO,KAAK,CAAEzI,CAAC,IAAK;QACd,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;QACpB,MAAMA,CAAC;MACX,CAAC,CAAC;MACF,OAAOqI,GAAG;IACd,CAAC,CAAC;EACN;AACJ;AAEA,MAAM+e,OAAO,GAAIC,QAAQ,IAAKA,QAAQ,CAACT,MAAM,CAAC,CAACC,GAAG,EAAES,GAAG,KAAKznB,KAAK,CAACgnB,GAAG,EAAES,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAChF,MAAMC,aAAa,GAAIxB,SAAS,KAAM;EAClCgB,IAAI,EAAE;IACF,CAAC9iB,UAAU,GAAG8hB;EAClB;AACJ,CAAC,CAAC;AACF,MAAMkB,sBAAsB,GAAGA,CAAA,MAAO;EAClCF,IAAI,EAAE;IACF,CAAC3iB,0BAA0B,GAAG;EAClC;AACJ,CAAC,CAAC;AACF,MAAMojB,eAAe,GAAI9Y,iBAAiB,KAAM;EAC5CnL,OAAO,EAAE;IACLyjB,aAAa,EAAG,UAAStY,iBAAkB;EAC/C;AACJ,CAAC,CAAC;AACF,MAAM+Y,mBAAmB,GAAIX,eAAe,KAAM;EAC9CC,IAAI,EAAE;IACF,CAAC1iB,oBAAoB,GAAGyiB;EAC5B;AACJ,CAAC,CAAC;AAEF,MAAMY,aAAa,CAAC;EAChB9iB,WAAWA,CAACsD,MAAM,EAAE;IAChB,MAAM;MAAEyf,UAAU;MAAEC,iBAAiB;MAAElf;IAAO,CAAC,GAAGR,MAAM;IACxD,IAAI,CAAC0f,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACjf,MAAM,GAAGA,MAAM;IACpB,IAAIif,UAAU,EAAE;MACZ,IAAI,CAACE,SAAS,GAAG,IAAIpiB,SAAS,CAACkiB,UAAU,CAAC;IAC9C;EACJ;EACAG,KAAKA,CAAClkB,IAAI,EAAE;IACR,MAAM+X,UAAU,GAAG,CAAC,MAAM;MACtB,IAAIpS,EAAE;MACN,MAAMK,EAAE,GAAGhG,IAAI,IAAI,CAAC,CAAC;QAAE;UAAEmC;QAAQ,CAAC,GAAG6D,EAAE;QAAEG,IAAI,GAAGjK,MAAM,CAAC8J,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;MACvE,IAAI7D,OAAO,EAAE;QACT,IAAI;UACA,OAAO5F,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC,CAAC,CAAC,EAAEmS,IAAI,CAACiM,KAAK,CAAC,CAACve,EAAE,GAAG,IAAI,CAACse,SAAS,MAAM,IAAI,IAAIte,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzD,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,EAAEgE,IAAI,CAAC;QAC7I,CAAC,CACD,OAAO/J,CAAC,EAAE;UACN,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC,2BAA2B,CAAC;UAC9C,OAAO,CAAC,CAAC;QACb;MACJ;MACA,OAAOoB,IAAI;IACf,CAAC,EAAE,CAAC;IACJ;IACA,IAAI,QAAQ,IAAI4R,UAAU,EAAE;MACxB,MAAM;UAAEoM,MAAM;UAAEnS;QAAM,CAAC,GAAG+F,UAAU;QAAE5R,IAAI,GAAGjK,MAAM,CAAC6b,UAAU,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;MACpF,OAAOxb,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC;QAAE,CAAC1F,UAAU,GAAG3E,GAAG,CAACsc,UAAU,EAAE,mBAAmB;MAAE,CAAC,EAAE5R,IAAI,CAAC,EAAEge,MAAM,CAAC,EAAEnS,KAAK,CAAC;IACnI;IACA,MAAM;QAAEA;MAAM,CAAC,GAAG+F,UAAU;MAAE5R,IAAI,GAAGjK,MAAM,CAAC6b,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC;IAClE,OAAOxb,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAACuJ,MAAM,CAAC;MAAE,CAAC1F,UAAU,GAAG3E,GAAG,CAACsc,UAAU,EAAE,YAAY;IAAE,CAAC,EAAE/F,KAAK,CAAC,EAAE7L,IAAI,CAAC;EACrG;EACAie,yBAAyBA,CAACpkB,IAAI,EAAE;IAC5B,MAAM;MAAE,0BAA0B,EAAEqkB,SAAS;MAAE,sBAAsB,EAAEC,KAAK;MAAE,kBAAkB,EAAEC;IAAW,CAAC,GAAGvkB,IAAI,CAACL,OAAO;IAC7H,IAAI,CAAC,IAAI,CAACqkB,iBAAiB,EAAE;MACzB,OAAO,IAAI;IACf;IACA,MAAMQ,iBAAiB,GAAG5oB,MAAM,CAC3BmG,UAAU,CAAC,MAAM,CAAC,CAClBC,MAAM,CAACqiB,SAAS,GACjBC,KAAK,GACL,IAAI,CAACN,iBAAiB,GACtB/L,IAAI,CAACC,SAAS,CAAClY,IAAI,CAAC,CAAC,CACpBiC,MAAM,CAAC,KAAK,CAAC;IAClB,OAAOuiB,iBAAiB,KAAKD,SAAS;EAC1C;EACAE,qBAAqBA,CAACzkB,IAAI,EAAE;IACxB,IAAI,CAAC,IAAI,CAAC+jB,UAAU,EAAE;MAClB,OAAO,IAAI;IACf;IACA,MAAM;MAAE,0BAA0B,EAAEM,SAAS;MAAE,sBAAsB,EAAEC,KAAK;MAAE,kBAAkB,EAAEC;IAAW,CAAC,GAAGvkB,IAAI,CAACL,OAAO;IAC7H,MAAMgB,OAAO,GAAG0jB,SAAS,GAAGC,KAAK,GAAG,IAAI,CAACP,UAAU,GAAG9L,IAAI,CAACC,SAAS,CAAClY,IAAI,CAAC;IAC1E,MAAMwkB,iBAAiB,GAAG5oB,MAAM,CAC3BmG,UAAU,CAAC,QAAQ,CAAC,CACpBC,MAAM,CAACrB,OAAO,CAAC,CACfsB,MAAM,CAAC,KAAK,CAAC;IAClB,OAAOuiB,iBAAiB,KAAKD,SAAS;EAC1C;AACJ;AAEA,MAAMG,gBAAgB,GAAG,YAAY;AACrC,MAAMC,eAAe,CAAC;EAClB3jB,WAAWA,CAACsD,MAAM,EAAE;IAChB,IAAI,CAAC0f,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACD,UAAU,GAAG,EAAE;IACpB,IAAI,CAACa,OAAO,GAAG,IAAI1jB,GAAG,CAAC,CAAC;IACxB,MAAM;MAAE6iB,UAAU;MAAEC;IAAkB,CAAC,GAAG1f,MAAM;IAChD,IAAI,CAACyf,UAAU,GAAGA,UAAU,IAAI,EAAE;IAClC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB,IAAI,EAAE;IAChD,IAAI,CAAClf,MAAM,GAAG,IAAIsb,WAAW,CAAC9b,MAAM,CAACse,WAAW,IAAIziB,WAAW,CAACwf,IAAI,EAAErb,MAAM,CAACQ,MAAM,IAAIma,aAAa,CAAC;IACrG,IAAI,CAAC4F,aAAa,GAAG,IAAIf,aAAa,CAAC;MACnCC,UAAU;MACVC,iBAAiB;MACjBlf,MAAM,EAAE,IAAI,CAACA;IACjB,CAAC,CAAC;IACF,IAAI,CAACqc,KAAK,GAAG7c,MAAM,CAAC6c,KAAK,IAAIvf,aAAa;IAC1C,IAAI,CAACkjB,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAAChgB,MAAM,CAAC6a,IAAI,CAAC,yBAAyB,CAAC;EAC/C;EACAmF,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACC,QAAQ,CAAC;MACV1C,UAAU,EAAGriB,IAAI,IAAKhD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;QAC/D,MAAM;UAAEqlB,UAAU;UAAEZ;QAAO,CAAC,GAAGzhB,IAAI;QACnC,IAAIqiB,UAAU,EAAE;UACZ,MAAM,IAAI,CAAClB,KAAK,CAACxf,GAAG,CAACrB,UAAU,EAAE+hB,UAAU,EAAEziB,SAAS,EAAE;YACpDyB,SAAS,EAAEogB;UACf,CAAC,CAAC;UACF,IAAI,CAAC3c,MAAM,CAACgb,KAAK,CAAC,gBAAgB,CAAC;QACvC,CAAC,MACI;UACD,IAAI,CAAChb,MAAM,CAAC0a,IAAI,CAAC,iCAAiC,CAAC;QACvD;MACJ,CAAC;IACL,CAAC,CAAC;EACN;EACAuF,QAAQA,CAACH,OAAO,EAAE;IACdroB,MAAM,CAACyoB,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAE7jB,GAAG,IAAK;MAClC,IAAI,IAAI,CAACwjB,OAAO,CAACM,GAAG,CAAC9jB,GAAG,CAAC,IAAIA,GAAG,KAAKsjB,gBAAgB,EAAE;QACnD,IAAI,CAAC5f,MAAM,CAACC,KAAK,CAAE,QAAO3D,GAAI,uBAAsB,CAAC;MACzD;MACA,IAAI,CAACwjB,OAAO,CAACjjB,GAAG,CAACP,GAAG,EAAEwjB,OAAO,CAACxjB,GAAG,CAAC,CAAC;MACnC,IAAI,CAAC0D,MAAM,CAACgb,KAAK,CAAE,YAAW1e,GAAI,SAAQ,CAAC;IAC/C,CAAC,CAAC;IACF,OAAO,IAAI;EACf;EACA+jB,MAAMA,CAACnlB,IAAI,EAAE;IACT,IAAI2F,EAAE,EAAEK,EAAE;IACV,OAAOhJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,EAAE,CAAC2I,EAAE,GAAG,IAAI,CAACkf,aAAa,MAAM,IAAI,IAAIlf,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8e,qBAAqB,CAACzkB,IAAI,CAAC,CAAC,EAAE;QAClG,IAAI,CAAC8E,MAAM,CAAC0a,IAAI,CAAC,2BAA2B,CAAC;QAC7C,OAAO5f,SAAS;MACpB;MACA,MAAMmY,UAAU,GAAG,CAAC/R,EAAE,GAAG,IAAI,CAAC6e,aAAa,MAAM,IAAI,IAAI7e,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACke,KAAK,CAAClkB,IAAI,CAAC;MAChG,MAAMmY,IAAI,GAAGJ,UAAU,CAAC3X,UAAU,CAAC;MACnC,IAAI,IAAI,CAACwkB,OAAO,CAACM,GAAG,CAAC/M,IAAI,CAAC,EAAE;QACxB,MAAMiN,GAAG,GAAG,MAAM,IAAI,CAACR,OAAO,CAACnpB,GAAG,CAAC0c,IAAI,CAAC,CAACJ,UAAU,CAAC;QACpD,IAAI,CAACjT,MAAM,CAACgb,KAAK,CAAE,WAAU3H,IAAK,SAAQ,CAAC;QAC3C,OAAOiN,GAAG;MACd;MACA,IAAI,CAACtgB,MAAM,CAAC0a,IAAI,CAAE,MAAKrH,IAAK,SAAQ,CAAC;MACrC,OAAQ,MAAKA,IAAK,eAAc;IACpC,CAAC,CAAC;EACN;AACJ;AAEA,MAAMkN,iBAAiB,CAAC;EACpBrkB,WAAWA,CAACsD,MAAM,EAAEghB,WAAW,EAAE;IAC7B,IAAI,CAACtB,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACD,UAAU,GAAG,EAAE;IACpB,IAAI,CAACa,OAAO,GAAG,IAAI1jB,GAAG,CAAC,CAAC;IACxB,MAAM;MAAE8iB,iBAAiB;MAAED;IAAW,CAAC,GAAGzf,MAAM;IAChD,IAAI,CAACyf,UAAU,GAAGA,UAAU,IAAI,EAAE;IAClC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB,IAAI,EAAE;IAChD,IAAI,CAACsB,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACxgB,MAAM,GAAG,IAAIsb,WAAW,CAAC9b,MAAM,CAACse,WAAW,IAAIziB,WAAW,CAACwf,IAAI,EAAErb,MAAM,CAACQ,MAAM,IAAIma,aAAa,CAAC;IACrG,IAAI,CAAC4F,aAAa,GAAG,IAAIf,aAAa,CAAC;MACnCC,UAAU;MACVC,iBAAiB;MACjBlf,MAAM,EAAE,IAAI,CAACA;IACjB,CAAC,CAAC;IACF,IAAI,CAACqc,KAAK,GAAG7c,MAAM,CAAC6c,KAAK,IAAIvf,aAAa;IAC1C,IAAI,CAACkjB,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAAChgB,MAAM,CAAC6a,IAAI,CAAC,6BAA6B,CAAC;EACnD;EACAmF,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACC,QAAQ,CAAC;MACV1C,UAAU,EAAGriB,IAAI,IAAKhD,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;QAC/D,MAAM;UAAEqlB,UAAU;UAAEZ;QAAO,CAAC,GAAGzhB,IAAI;QACnC,IAAIqiB,UAAU,EAAE;UACZ,MAAM,IAAI,CAAClB,KAAK,CAACxf,GAAG,CAACrB,UAAU,EAAE+hB,UAAU,EAAEziB,SAAS,EAAE;YACpDyB,SAAS,EAAEogB;UACf,CAAC,CAAC;UACF,IAAI,CAAC3c,MAAM,CAACgb,KAAK,CAAC,gBAAgB,CAAC;QACvC,CAAC,MACI;UACD,IAAI,CAAChb,MAAM,CAAC0a,IAAI,CAAC,iCAAiC,CAAC;QACvD;MACJ,CAAC;IACL,CAAC,CAAC;EACN;EACAuF,QAAQA,CAACH,OAAO,EAAE;IACdroB,MAAM,CAACyoB,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAE7jB,GAAG,IAAK;MAClC,IAAI,CAACwjB,OAAO,CAACjjB,GAAG,CAACP,GAAG,EAAEwjB,OAAO,CAACxjB,GAAG,CAAC,CAAC;MACnC,IAAI,CAAC0D,MAAM,CAACgb,KAAK,CAAE,YAAW1e,GAAI,SAAQ,CAAC;IAC/C,CAAC,CAAC;IACF,OAAO,IAAI;EACf;EACA+jB,MAAMA,CAACnlB,IAAI,EAAE;IACT,IAAI2F,EAAE,EAAEK,EAAE;IACV,OAAOhJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChD,IAAI,EAAE,CAAC2I,EAAE,GAAG,IAAI,CAACkf,aAAa,MAAM,IAAI,IAAIlf,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACye,yBAAyB,CAACpkB,IAAI,CAAC,CAAC,EAAE;QACtG,IAAI,CAAC8E,MAAM,CAAC0a,IAAI,CAAC,2BAA2B,CAAC;QAC7C,OAAO5f,SAAS;MACpB;MACA,MAAMmY,UAAU,GAAG,CAAC/R,EAAE,GAAG,IAAI,CAAC6e,aAAa,MAAM,IAAI,IAAI7e,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACke,KAAK,CAAClkB,IAAI,CAAC;MAChG,MAAMmY,IAAI,GAAGJ,UAAU,CAAC3X,UAAU,CAAC;MACnC,IAAI,IAAI,CAACwkB,OAAO,CAACM,GAAG,CAAC/M,IAAI,CAAC,EAAE;QACxB,IAAI;UACA,MAAMiN,GAAG,GAAG,MAAM,IAAI,CAACR,OAAO,CAACnpB,GAAG,CAAC0c,IAAI,CAAC,CAACJ,UAAU,CAAC;UACpD,OAAOqN,GAAG;QACd,CAAC,CACD,OAAOhpB,CAAC,EAAE;UACN,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;UACpB,OAAOwD,SAAS;QACpB;MACJ;MACA,IAAI;QACA,MAAM9B,MAAM,GAAG,MAAM,IAAI,CAACwnB,WAAW,CAACvN,UAAU,CAAC;QACjD,IAAI,CAACjT,MAAM,CAACgb,KAAK,CAAC,qBAAqB,CAAC;QACxC,OAAOhiB,MAAM;MACjB,CAAC,CACD,OAAO1B,CAAC,EAAE;QACN,IAAI,CAAC0I,MAAM,CAACC,KAAK,CAAC3I,CAAC,CAAC;MACxB;MACA,OAAOwD,SAAS;IACpB,CAAC,CAAC;EACN;AACJ;AAEA,MAAM2lB,eAAe,GAAI7lB,GAAG,IAAK,IAAIlC,OAAO,CAAED,OAAO,IAAK;EACtD,IAAIioB,MAAM,GAAG,EAAE;EACf9lB,GAAG,CAAC0F,EAAE,CAAC,MAAM,EAAGqgB,KAAK,IAAK;IACtBD,MAAM,IAAIC,KAAK;EACnB,CAAC,CAAC;EACF/lB,GAAG,CAAC0F,EAAE,CAAC,KAAK,EAAE,MAAM;IAChB,IAAI;MACA,MAAMpF,IAAI,GAAGiY,IAAI,CAACiM,KAAK,CAACsB,MAAM,CAAC;MAC/BjoB,OAAO,CAACyC,IAAI,CAAC;IACjB,CAAC,CACD,OAAO5D,CAAC,EAAE;MACNmB,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMmoB,iBAAiB,GAAGA,CAAC1lB,IAAI,EAAEsB,OAAO,KAAK;EACzC,IAAI,SAAS,IAAItB,IAAI,IAAI,CAACsB,OAAO,CAACyiB,UAAU,EAAE;IAC1C,MAAM,IAAI1gB,KAAK,CAAC,wEAAwE,CAAC;EAC7F;EACA,MAAM0U,UAAU,GAAG,SAAS,IAAI/X,IAAI,GAC9BiY,IAAI,CAACiM,KAAK,CAAC,IAAIriB,SAAS,CAACP,OAAO,CAACyiB,UAAU,CAAC,CAAC7hB,OAAO,CAAClC,IAAI,CAACmC,OAAO,CAAC,CAAC,GACnEnC,IAAI;EACV,OAAO;IACH2lB,WAAW,EAAE5N,UAAU,CAACI,IAAI,KAAK,kBAAkB;IACnDyN,SAAS,EAAE;MACPA,SAAS,EAAE7N,UAAU,CAAC6N;IAC1B;EACJ,CAAC;AACL,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACthB,IAAI,EAAEuhB,UAAU,EAAExkB,OAAO,KAAK,CAAC5B,GAAG,EAAE+E,GAAG,KAAKzH,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;EAC7G,IAAI0C,GAAG,CAACiE,GAAG,KAAKY,IAAI,EAAE;IAClB;EACJ;EACA,MAAMvE,IAAI,GAAGzD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAAC+C,MAAM,CAAC;IACrCK,OAAO,EAAED,GAAG,CAACC;EACjB,CAAC,CAAC,EAAE,MAAM4lB,eAAe,CAAC7lB,GAAG,CAAC,CAAC;EAC/B;EACA;EACA,MAAMqmB,aAAa,GAAGtqB,GAAG,CAAC6F,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC;EAC1D,IAAIykB,aAAa,EAAE;IACf,MAAM;MAAEJ,WAAW;MAAEC;IAAU,CAAC,GAAGF,iBAAiB,CAAC1lB,IAAI,EAAE;MACvD+jB,UAAU,EAAE+B,UAAU,CAAC/B;IAC3B,CAAC,CAAC;IACF,IAAI4B,WAAW,EAAE;MACblhB,GAAG,CAACuY,GAAG,CAAC/E,IAAI,CAACC,SAAS,CAAC0N,SAAS,CAAC,CAAC;MAClC;IACJ;EACJ;EACA,MAAMtoB,KAAK,GAAG,MAAMwoB,UAAU,CAACX,MAAM,CAACnlB,IAAI,CAAC;EAC3C;EACA,IAAI8lB,UAAU,YAAYT,iBAAiB,EAAE;IACzC5gB,GAAG,CAACuY,GAAG,CAAC/E,IAAI,CAACC,SAAS,CAAC5a,KAAK,CAAC,CAAC;EAClC;EACAmH,GAAG,CAACuY,GAAG,CAAC,EAAE,CAAC;AACf,CAAC,CAAC;AAEF,MAAMgJ,YAAY,GAAGA,CAACF,UAAU,EAAExkB,OAAO,KAAK,CAAC5B,GAAG,EAAE+E,GAAG,KAAKzH,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;EACvG,MAAMipB,OAAO,GAAG,MAAM,CAAC,MAAMjpB,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;IACxE,IAAI0C,GAAG,CAACwmB,IAAI,EAAE;MACV,OAAOxmB,GAAG,CAACwmB,IAAI;IACnB;IACA,IAAI,CAACxmB,GAAG,CAACic,QAAQ,EAAE;MACf,MAAMwK,YAAY,GAAG,MAAMZ,eAAe,CAAC7lB,GAAG,CAAC;MAC/C,OAAOymB,YAAY;IACvB;IACA1qB,GAAG,CAAC6F,OAAO,EAAE,QAAQ,EAAE2d,aAAa,CAAC,CAACla,KAAK,CAAC,0GAA0G,CAAC;IACvJ,OAAO,IAAI;EACf,CAAC,CAAC,EAAE,CAAC;EACL,MAAM/E,IAAI,GAAGzD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAAC+C,MAAM,CAAC;IACrCK,OAAO,EAAED,GAAG,CAACC;EACjB,CAAC,CAAC,EAAEsmB,OAAO,CAAC;EACZ;EACA;EACA,MAAMF,aAAa,GAAGtqB,GAAG,CAAC6F,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC;EAC1D,IAAIykB,aAAa,EAAE;IACf,MAAM;MAAEJ,WAAW;MAAEC;IAAU,CAAC,GAAGF,iBAAiB,CAAC1lB,IAAI,EAAE;MACvD+jB,UAAU,EAAE+B,UAAU,CAAC/B;IAC3B,CAAC,CAAC;IACF,IAAI4B,WAAW,EAAE;MACblhB,GAAG,CAAC2hB,IAAI,CAACR,SAAS,CAAC;MACnB;IACJ;EACJ;EACA,MAAMtoB,KAAK,GAAG,MAAMwoB,UAAU,CAACX,MAAM,CAACnlB,IAAI,CAAC;EAC3C;EACA,IAAI8lB,UAAU,YAAYT,iBAAiB,EAAE;IACzC5gB,GAAG,CAAC2hB,IAAI,CAAC9oB,KAAK,CAAC;EACnB;EACAmH,GAAG,CAACuY,GAAG,CAAC,EAAE,CAAC;AACf,CAAC,CAAC;AAEF,MAAMqJ,QAAQ,GAAGA,CAAC9hB,IAAI,EAAEuhB,UAAU,EAAExkB,OAAO,KAAK,CAACglB,GAAG,EAAE1oB,IAAI,KAAKZ,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;EAC1G,MAAM;IAAEupB,WAAW;IAAE7mB,GAAG;IAAEF;EAAQ,CAAC,GAAG8mB,GAAG;EACzC,IAAIC,WAAW,KAAKhiB,IAAI,EAAE;IACtB,MAAM0hB,OAAO,GAAG,MAAM,CAAC,MAAMjpB,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MACxE,IAAIwC,OAAO,CAAC0mB,IAAI,EAAE;QACd,OAAO1mB,OAAO,CAAC0mB,IAAI;MACvB;MACA,IAAI,CAACxmB,GAAG,CAACic,QAAQ,EAAE;QACf,MAAMwK,YAAY,GAAG,MAAMZ,eAAe,CAAC7lB,GAAG,CAAC;QAC/C,OAAOymB,YAAY;MACvB;MACA1qB,GAAG,CAAC6F,OAAO,EAAE,QAAQ,EAAE2d,aAAa,CAAC,CAACla,KAAK,CAAC,0GAA0G,CAAC;MACvJ,OAAO,IAAI;IACf,CAAC,CAAC,EAAE,CAAC;IACL,MAAM/E,IAAI,GAAGzD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAAC+C,MAAM,CAAC;MACrCK,OAAO,EAAED,GAAG,CAACC;IACjB,CAAC,CAAC,EAAEsmB,OAAO,CAAC;IACZ;IACA;IACA,MAAMF,aAAa,GAAGtqB,GAAG,CAAC6F,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC;IAC1D,IAAIykB,aAAa,EAAE;MACf,MAAM;QAAEJ,WAAW;QAAEC;MAAU,CAAC,GAAGF,iBAAiB,CAAC1lB,IAAI,EAAE;QACvD+jB,UAAU,EAAE+B,UAAU,CAAC/B;MAC3B,CAAC,CAAC;MACF,IAAI4B,WAAW,EAAE;QACbW,GAAG,CAACJ,IAAI,GAAGN,SAAS;QACpB,MAAMhoB,IAAI,CAAC,CAAC;QACZ;MACJ;IACJ;IACA,MAAMN,KAAK,GAAG,MAAMwoB,UAAU,CAACX,MAAM,CAACnlB,IAAI,CAAC;IAC3C;IACA,IAAI8lB,UAAU,YAAYT,iBAAiB,EAAE;MACzCiB,GAAG,CAACJ,IAAI,GAAGjO,IAAI,CAACC,SAAS,CAAC5a,KAAK,CAAC;IACpC,CAAC,MACI;MACDgpB,GAAG,CAACJ,IAAI,GAAG,EAAE;IACjB;EACJ;EACA,MAAMtoB,IAAI,CAAC,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM4oB,cAAc,GAAGA,CAACV,UAAU,EAAExkB,OAAO,KAAK,CAACglB,GAAG,EAAE1oB,IAAI,KAAKZ,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;EAC1G,MAAM;IAAE0C,GAAG;IAAEF;EAAQ,CAAC,GAAG8mB,GAAG;EAC5B,MAAML,OAAO,GAAG,MAAM,CAAC,MAAMjpB,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;IACxE,IAAIwC,OAAO,CAAC0mB,IAAI,EAAE;MACd,OAAO1mB,OAAO,CAAC0mB,IAAI;IACvB;IACA,IAAI,CAACxmB,GAAG,CAACic,QAAQ,EAAE;MACf,MAAMwK,YAAY,GAAG,MAAMZ,eAAe,CAAC7lB,GAAG,CAAC;MAC/C,OAAOymB,YAAY;IACvB;IACA1qB,GAAG,CAAC6F,OAAO,EAAE,QAAQ,EAAE2d,aAAa,CAAC,CAACla,KAAK,CAAC,0GAA0G,CAAC;IACvJ,OAAO,IAAI;EACf,CAAC,CAAC,EAAE,CAAC;EACL,MAAM/E,IAAI,GAAGzD,MAAM,CAACuJ,MAAM,CAACvJ,MAAM,CAAC+C,MAAM,CAAC;IACrCK,OAAO,EAAED,GAAG,CAACC;EACjB,CAAC,CAAC,EAAEsmB,OAAO,CAAC;EACZ;EACA;EACA,MAAMF,aAAa,GAAGtqB,GAAG,CAAC6F,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC;EAC1D,IAAIykB,aAAa,EAAE;IACf,MAAM;MAAEJ,WAAW;MAAEC;IAAU,CAAC,GAAGF,iBAAiB,CAAC1lB,IAAI,EAAE;MACvD+jB,UAAU,EAAE+B,UAAU,CAAC/B;IAC3B,CAAC,CAAC;IACF,IAAI4B,WAAW,EAAE;MACbW,GAAG,CAACJ,IAAI,GAAGN,SAAS;MACpB,MAAMhoB,IAAI,CAAC,CAAC;MACZ;IACJ;EACJ;EACA,MAAMN,KAAK,GAAG,MAAMwoB,UAAU,CAACX,MAAM,CAACnlB,IAAI,CAAC;EAC3C;EACA,IAAI8lB,UAAU,YAAYT,iBAAiB,EAAE;IACzCiB,GAAG,CAACJ,IAAI,GAAGjO,IAAI,CAACC,SAAS,CAAC5a,KAAK,CAAC;EACpC,CAAC,MACI;IACDgpB,GAAG,CAACJ,IAAI,GAAG,EAAE;EACjB;EACA,MAAMtoB,IAAI,CAAC,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM6oB,WAAW,GAAIC,SAAS,IAAK;EAC/B,MAAM;IAAEC,KAAK;IAAEhmB;EAAQ,CAAC,GAAG+lB,SAAS;EACpC,OAAOzO,IAAI,CAACC,SAAS,CAAC;IAClB,QAAQ,EAAE;MACN,kBAAkB,EAAE;IACxB,CAAC;IACD,UAAU,EAAE,CACR;MACI,KAAK,EAAE,UAAU;MACjB,SAAS,EAAEvX;IACf,CAAC,CACJ;IACD,QAAQ,EAAE;MACN,UAAU,EAAE,MAAM;MAClB,OAAO,EAAE;QACL,SAAS,EAAEgmB,KAAK;QAChB,KAAK,EAAE;MACX;IACJ;EACJ,CAAC,CAAC;AACN,CAAC;AAED,IAAIC,WAAW,GAAG,aAAarqB,MAAM,CAACsqB,MAAM,CAAC;EACzCC,SAAS,EAAE,IAAI;EACfL,WAAW,EAAEA;AACjB,CAAC,CAAC;AAEF,SAAS5kB,SAAS,EAAE5B,OAAO,EAAEK,UAAU,EAAEC,kBAAkB,EAAE8kB,iBAAiB,EAAE5C,MAAM,EAAEviB,MAAM,EAAEykB,eAAe,EAAExkB,WAAW,EAAE0lB,YAAY,EAAEG,YAAY,EAAEK,QAAQ,EAAEG,cAAc,EAAEnnB,mBAAmB,EAAEqmB,iBAAiB,EAAEkB,WAAW,EAAEpD,OAAO,EAAEH,sBAAsB,EAAEM,aAAa,EAAEC,eAAe,EAAEC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}